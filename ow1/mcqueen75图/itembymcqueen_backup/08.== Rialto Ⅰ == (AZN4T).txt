设置
{
	主程序
	{
		描述: "== Rialto Ⅰ == (AZN4T)\r\nWastebaskets x13\r\nStopped Ship x10\r\nCCTV x12\r\nExhibits x6\r\nSea Foods x15\r\nBeverage Refrigerator x2\r\nDisappeared Weapons x1"
		模式名称: "find items By McQueen"
	}

	大厅
	{
		地图轮换: 暂停轮换
		比赛结束后转换队伍: 否
		玩家上限 队伍1: 0
		玩家上限 队伍2: 8
		观战者人数上限: 0
		返回大厅: 从不
	}

	模式
	{
		突击模式
		{
			启用地图
			{
				里阿尔托
			}
		}

		综合
		{
			复生时间: 0%
			急救包刷新: 禁用
			消灭提示: 关闭
			消灭镜头: 关闭
			游戏模式开始: 即时
			英雄限制: 关闭
		}
	}

	英雄
	{
		综合
		{
			主要攻击模式: 关闭
			仅爆头有效: 开启
			战斗时终极技能充能速度: 0%
			技能冷却时间: 50%
			移动速度: 110%
			终极技能充能速度: 10%
			终极技能自动充能速度: 0%
			近身攻击: 关闭

			D.Va
			{
				主要攻击模式: 关闭
				微型飞弹: 关闭
				推进器: 关闭
				终极技能（自毁）: 关闭
				近身攻击: 关闭
				防御矩阵: 关闭
			}

			半藏
			{
				主要攻击模式: 关闭
				岚: 关闭
				终极技能（竜）: 关闭
				跃: 关闭
				近身攻击: 关闭
				音: 关闭
			}

			卡西迪
			{
				主要攻击模式: 关闭
				战术翻滚: 关闭
				终极技能（神射手）: 关闭
				辅助攻击模式: 关闭
				近身攻击: 关闭
				闪光弹: 关闭
			}

			卢西奥
			{
				主要攻击模式: 关闭
				切歌: 关闭
				强音: 关闭
				终极技能（音障）: 关闭
				近身攻击: 关闭
				音波: 关闭
			}

			回声
			{
				主要攻击模式: 关闭
				滑翔: 关闭
				终极技能（人格复制）: 关闭
				聚焦光线: 关闭
				近身攻击: 关闭
				飞行: 关闭
				黏性炸弹: 关闭
			}

			堡垒
			{
				主要攻击模式: 关闭
				切换模式: 关闭
				终极技能（坦克模式）: 关闭
				自我修复: 关闭
				近身攻击: 关闭
			}

			士兵：76
			{
				主要攻击模式: 关闭
				生物力场: 关闭
				疾跑: 关闭
				终极技能（战术目镜）: 关闭
				螺旋飞弹: 关闭
				近身攻击: 关闭
			}

			天使
			{
				主要攻击模式: 关闭
				守护天使: 关闭
				终极技能（女武神）: 关闭
				自动恢复: 关闭
				辅助攻击模式: 关闭
				近身攻击: 关闭
				重生: 关闭
			}

			奥丽莎
			{
				主要攻击模式: 关闭
				强固防御: 关闭
				站住别动: 关闭
				终极技能（超充能器）: 关闭
				近身攻击: 关闭
				防护屏障: 关闭
			}

			安娜
			{
				主要攻击模式: 关闭
				生物手雷: 关闭
				终极技能（纳米激素）: 关闭
				近身攻击: 关闭
				麻醉镖: 关闭
			}

			巴蒂斯特
			{
				主要攻击模式: 关闭
				愈合冲击: 关闭
				终极技能（增幅矩阵）: 关闭
				维生力场: 关闭
				辅助攻击模式: 关闭
				近身攻击: 关闭
			}

			布丽吉塔
			{
				主要攻击模式: 关闭
				屏障护盾: 关闭
				恢复包: 关闭
				流星飞锤: 关闭
				终极技能（集结号令）: 关闭
				能量盾击: 关闭
				近身攻击: 关闭
			}

			托比昂
			{
				主要攻击模式: 关闭
				热力过载: 关闭
				终极技能（熔火核心）: 关闭
				辅助攻击模式: 关闭
				近身攻击: 关闭
				部署炮台: 关闭
			}

			末日铁拳
			{
				上勾重拳: 关闭
				主要攻击模式: 关闭
				火箭重拳: 关闭
				终极技能（毁天灭地）: 关闭
				裂地重拳: 关闭
				近身攻击: 关闭
			}

			查莉娅
			{
				主要攻击模式: 关闭
				投射屏障: 关闭
				无需装弹: 开启
				粒子屏障: 关闭
				辅助攻击模式: 关闭
				近身攻击: 关闭
			}

			死神
			{
				主要攻击模式: 关闭
				幽灵形态: 关闭
				暗影步: 关闭
				终极技能（死亡绽放）: 关闭
				近身攻击: 关闭
			}

			法老之鹰
			{
				主要攻击模式: 关闭
				悬浮背包: 关闭
				推进背包: 关闭
				终极技能（火箭弹幕）: 关闭
				近身攻击: 关闭
				震荡冲击: 关闭
			}

			温斯顿
			{
				主要攻击模式: 关闭
				喷射背包: 关闭
				屏障发射器: 关闭
				终极技能（原始暴怒）: 关闭
				近身攻击: 关闭
			}

			源氏
			{
				主要攻击模式: 关闭
				影: 关闭
				终极技能（斩）: 关闭
				辅助攻击模式: 关闭
				近身攻击: 关闭
				闪: 关闭
			}

			狂鼠
			{
				主要攻击模式: 关闭
				捕兽夹: 关闭
				终极技能（炸弹轮胎）: 关闭
				近身攻击: 关闭
				震荡地雷: 关闭
			}

			猎空
			{
				主要攻击模式: 关闭
				终极技能（脉冲炸弹）: 关闭
				近身攻击: 关闭
				闪回: 关闭
				闪现: 关闭
			}

			破坏球
			{
				主要攻击模式: 关闭
				动力铁球: 关闭
				工程抓钩: 关闭
				感应护盾: 关闭
				终极技能（地雷禁区）: 关闭
				近身攻击: 关闭
				重力坠击: 关闭
			}

			禅雅塔
			{
				主要攻击模式: 关闭
				乱: 关闭
				谐: 关闭
				辅助攻击模式: 关闭
				近身攻击: 关闭
			}

			秩序之光
			{
				主要攻击模式: 关闭
				传送面板: 关闭
				哨戒炮: 关闭
				终极技能（光子屏障）: 关闭
				辅助攻击模式: 关闭
				近身攻击: 关闭
			}

			美
			{
				主要攻击模式: 关闭
				冰墙: 关闭
				急冻: 关闭
				终极技能（暴雪）: 关闭
				辅助攻击模式: 关闭
				近身攻击: 关闭
			}

			艾什
			{
				主要攻击模式: 关闭
				延时雷管: 关闭
				短筒猎枪: 关闭
				终极技能（召唤鲍勃）: 关闭
				近身攻击: 关闭
			}

			莫伊拉
			{
				主要攻击模式: 关闭
				消散: 关闭
				生化之球: 关闭
				终极技能（聚合射线）: 关闭
				辅助攻击模式: 关闭
				近身攻击: 关闭
			}

			莱因哈特
			{
				主要攻击模式: 关闭
				冲锋: 关闭
				屏障力场: 关闭
				烈焰打击: 关闭
				终极技能（裂地猛击）: 关闭
				近身攻击: 关闭
			}

			西格玛
			{
				主要攻击模式: 关闭
				动能俘获: 关闭
				实验屏障: 关闭
				终极技能（引力乱流）: 关闭
				质量吸附: 关闭
				近身攻击: 关闭
			}

			路霸
			{
				主要攻击模式: 关闭
				呼吸器: 关闭
				终极技能（鸡飞狗跳）: 关闭
				辅助攻击模式: 关闭
				近身攻击: 关闭
				链钩: 关闭
			}

			黑影
			{
				主要攻击模式: 关闭
				位移传动: 关闭
				终极技能（电磁脉冲）: 关闭
				近身攻击: 关闭
				隐秘潜行: 关闭
				黑客入侵: 关闭
			}

			黑百合
			{
				主要攻击模式: 关闭
				剧毒诡雷: 关闭
				抓钩: 关闭
				终极技能（红外侦测）: 关闭
				近身攻击: 关闭
			}

			禁用英雄
			{
				半藏
				卢西奥
				巴蒂斯特
				源氏
				破坏球
				西格玛
			}
		}
	}
}

变量
{
	玩家:
		26: AA
		27: AB
}

规则("// made by McQUEEN#31361")
{
	事件
	{
		持续 - 全局;
	}
}

规则("beginning of the game")
{
	事件
	{
		持续 - 全局;
	}

	动作
	{
		设置比赛时间(3600);
		全局.N = 1;
		全局.G = 0;
		全局.H = 矢量(0, -99, 0);
		全局.T = -1;
		全局.Q = 0;
	}
}

规则("Rialto ===================================================================")
{
	事件
	{
		持续 - 全局;
	}
}

规则("쓰레기통 13개")
{
	事件
	{
		持续 - 全局;
	}

	动作
	{
		全局.G += 1;
		全局.I = 0;
		全局.A[全局.N] = 矢量(-21.556, 0.373, -8.594);
		全局.X[全局.N] = 全局.G;
		全局.I += 1;
		全局.N += 1;
		全局.A[全局.N] = 矢量(34.673, 0.643, -83.791);
		全局.X[全局.N] = 全局.G;
		全局.I += 1;
		全局.N += 1;
		全局.A[全局.N] = 矢量(33.382, 0.497, -61.056);
		全局.X[全局.N] = 全局.G;
		全局.I += 1;
		全局.N += 1;
		全局.A[全局.N] = 矢量(41.051, 0.494, -62.109);
		全局.X[全局.N] = 全局.G;
		全局.I += 1;
		全局.N += 1;
		全局.A[全局.N] = 矢量(41.040, -0.399, -91.666);
		全局.X[全局.N] = 全局.G;
		全局.I += 1;
		全局.N += 1;
		全局.A[全局.N] = 矢量(68.281, 0.539, -76.806);
		全局.X[全局.N] = 全局.G;
		全局.I += 1;
		全局.N += 1;
		全局.A[全局.N] = 矢量(74.679, 0.057, -70.848);
		全局.X[全局.N] = 全局.G;
		全局.I += 1;
		全局.N += 1;
		全局.A[全局.N] = 矢量(56.175, -0.950, -20.803);
		全局.X[全局.N] = 全局.G;
		全局.I += 1;
		全局.N += 1;
		全局.A[全局.N] = 矢量(109.617, -0.471, 0.337);
		全局.X[全局.N] = 全局.G;
		全局.I += 1;
		全局.N += 1;
		全局.A[全局.N] = 矢量(125.723, -0.896, -14.308);
		全局.X[全局.N] = 全局.G;
		全局.I += 1;
		全局.N += 1;
		全局.A[全局.N] = 矢量(74.311, -0.462, -28.645);
		全局.X[全局.N] = 全局.G;
		全局.I += 1;
		全局.N += 1;
		全局.A[全局.N] = 矢量(72.027, -0.476, -9.101);
		全局.X[全局.N] = 全局.G;
		全局.I += 1;
		全局.N += 1;
		全局.A[全局.N] = 矢量(30.468, 1.545, -30.695);
		全局.X[全局.N] = 全局.G;
		全局.I += 1;
		全局.N += 1;
		全局.C[全局.G] = 全局.I;
	}
}

规则("멈춰있는 배 10개")
{
	事件
	{
		持续 - 全局;
	}

	动作
	{
		全局.G += 1;
		全局.I = 0;
		全局.A[全局.N] = 矢量(-53.677, -1.809, -54.283);
		全局.X[全局.N] = 全局.G;
		全局.I += 1;
		全局.N += 1;
		全局.A[全局.N] = 矢量(-36.823, -2.146, -54.251);
		全局.X[全局.N] = 全局.G;
		全局.I += 1;
		全局.N += 1;
		全局.A[全局.N] = 矢量(-34.566, -2.131, -46.543);
		全局.X[全局.N] = 全局.G;
		全局.I += 1;
		全局.N += 1;
		全局.A[全局.N] = 矢量(14.717, -2.291, -75.814);
		全局.X[全局.N] = 全局.G;
		全局.I += 1;
		全局.N += 1;
		全局.A[全局.N] = 矢量(13.902, -1.783, -58.953);
		全局.X[全局.N] = 全局.G;
		全局.I += 1;
		全局.N += 1;
		全局.A[全局.N] = 矢量(27.222, -1.868, -53.781);
		全局.X[全局.N] = 全局.G;
		全局.I += 1;
		全局.N += 1;
		全局.A[全局.N] = 矢量(19.913, -1.915, -14.047);
		全局.X[全局.N] = 全局.G;
		全局.I += 1;
		全局.N += 1;
		全局.A[全局.N] = 矢量(40.554, -2.001, -16.760);
		全局.X[全局.N] = 全局.G;
		全局.I += 1;
		全局.N += 1;
		全局.A[全局.N] = 矢量(100.621, -1.958, -61.646);
		全局.X[全局.N] = 全局.G;
		全局.I += 1;
		全局.N += 1;
		全局.A[全局.N] = 矢量(89.116, -1.881, -38.449);
		全局.X[全局.N] = 全局.G;
		全局.I += 1;
		全局.N += 1;
		全局.C[全局.G] = 全局.I;
	}
}

规则("감시카메라 12개")
{
	事件
	{
		持续 - 全局;
	}

	动作
	{
		全局.G += 1;
		全局.I = 0;
		全局.A[全局.N] = 矢量(-79.860, 7.759, -85.114);
		全局.X[全局.N] = 全局.G;
		全局.I += 1;
		全局.N += 1;
		全局.A[全局.N] = 矢量(-50.491, 7.980, -85.587);
		全局.X[全局.N] = 全局.G;
		全局.I += 1;
		全局.N += 1;
		全局.A[全局.N] = 矢量(-34.079, 3.497, -77.063);
		全局.X[全局.N] = 全局.G;
		全局.I += 1;
		全局.N += 1;
		全局.A[全局.N] = 矢量(-40.149, 7.965, -76.881);
		全局.X[全局.N] = 全局.G;
		全局.I += 1;
		全局.N += 1;
		全局.A[全局.N] = 矢量(-30.169, 3.969, -76.847);
		全局.X[全局.N] = 全局.G;
		全局.I += 1;
		全局.N += 1;
		全局.A[全局.N] = 矢量(-30.129, 8.027, -76.928);
		全局.X[全局.N] = 全局.G;
		全局.I += 1;
		全局.N += 1;
		全局.A[全局.N] = 矢量(-71.489, 7.759, -85.376);
		全局.X[全局.N] = 全局.G;
		全局.I += 1;
		全局.N += 1;
		全局.A[全局.N] = 矢量(-15.827, 10.819, -76.413);
		全局.X[全局.N] = 全局.G;
		全局.I += 1;
		全局.N += 1;
		全局.A[全局.N] = 矢量(-17.360, 10.733, -74.991);
		全局.X[全局.N] = 全局.G;
		全局.I += 1;
		全局.N += 1;
		全局.A[全局.N] = 矢量(-30.638, 10.772, -75.012);
		全局.X[全局.N] = 全局.G;
		全局.I += 1;
		全局.N += 1;
		全局.A[全局.N] = 矢量(-49.567, 10.831, -73.182);
		全局.X[全局.N] = 全局.G;
		全局.I += 1;
		全局.N += 1;
		全局.A[全局.N] = 矢量(-56.555, 10.868, -73.149);
		全局.X[全局.N] = 全局.G;
		全局.I += 1;
		全局.N += 1;
		全局.C[全局.G] = 全局.I;
	}
}

规则("전시품 6개")
{
	事件
	{
		持续 - 全局;
	}

	动作
	{
		全局.G += 1;
		全局.I = 0;
		全局.A[全局.N] = 矢量(132.035, 2, -8.977);
		全局.X[全局.N] = 全局.G;
		全局.I += 1;
		全局.N += 1;
		全局.A[全局.N] = 矢量(143.970, 2.318, -3.919);
		全局.X[全局.N] = 全局.G;
		全局.I += 1;
		全局.N += 1;
		全局.A[全局.N] = 矢量(155.748, 2.524, -9.226);
		全局.X[全局.N] = 全局.G;
		全局.I += 1;
		全局.N += 1;
		全局.A[全局.N] = 矢量(155.554, 2.100, -32.693);
		全局.X[全局.N] = 全局.G;
		全局.I += 1;
		全局.N += 1;
		全局.A[全局.N] = 矢量(143.950, 1.533, -38.058);
		全局.X[全局.N] = 全局.G;
		全局.I += 1;
		全局.N += 1;
		全局.A[全局.N] = 矢量(132.393, 2.207, -32.471);
		全局.X[全局.N] = 全局.G;
		全局.I += 1;
		全局.N += 1;
		全局.C[全局.G] = 全局.I;
	}
}

规则("해산물 15개")
{
	事件
	{
		持续 - 全局;
	}

	动作
	{
		全局.G += 1;
		全局.I = 0;
		全局.A[全局.N] = 矢量(33.448, 4.296, -84.655);
		全局.X[全局.N] = 全局.G;
		全局.I += 1;
		全局.N += 1;
		全局.A[全局.N] = 矢量(39.535, 0.908, -84.252);
		全局.X[全局.N] = 全局.G;
		全局.I += 1;
		全局.N += 1;
		全局.A[全局.N] = 矢量(39.739, 0.894, -84.244);
		全局.X[全局.N] = 全局.G;
		全局.I += 1;
		全局.N += 1;
		全局.A[全局.N] = 矢量(39.381, 0.827, -83.580);
		全局.X[全局.N] = 全局.G;
		全局.I += 1;
		全局.N += 1;
		全局.A[全局.N] = 矢量(39.573, 0.862, -83.491);
		全局.X[全局.N] = 全局.G;
		全局.I += 1;
		全局.N += 1;
		全局.A[全局.N] = 矢量(39.756, 0.837, -83.393);
		全局.X[全局.N] = 全局.G;
		全局.I += 1;
		全局.N += 1;
		全局.A[全局.N] = 矢量(39.609, 0.865, -81.892);
		全局.X[全局.N] = 全局.G;
		全局.I += 1;
		全局.N += 1;
		全局.A[全局.N] = 矢量(39.586, 0.910, -80.158);
		全局.X[全局.N] = 全局.G;
		全局.I += 1;
		全局.N += 1;
		全局.A[全局.N] = 矢量(39.783, 0.844, -80.246);
		全局.X[全局.N] = 全局.G;
		全局.I += 1;
		全局.N += 1;
		全局.A[全局.N] = 矢量(39.570, 0.833, -78.516);
		全局.X[全局.N] = 全局.G;
		全局.I += 1;
		全局.N += 1;
		全局.A[全局.N] = 矢量(39.621, 0.843, -78.129);
		全局.X[全局.N] = 全局.G;
		全局.I += 1;
		全局.N += 1;
		全局.A[全局.N] = 矢量(39.576, 0.789, -77.682);
		全局.X[全局.N] = 全局.G;
		全局.I += 1;
		全局.N += 1;
		全局.A[全局.N] = 矢量(41.378, 0.971, -79.341);
		全局.X[全局.N] = 全局.G;
		全局.I += 1;
		全局.N += 1;
		全局.A[全局.N] = 矢量(41.063, 1.008, -79.307);
		全局.X[全局.N] = 全局.G;
		全局.I += 1;
		全局.N += 1;
		全局.A[全局.N] = 矢量(41.408, 0.927, -79.939);
		全局.X[全局.N] = 全局.G;
		全局.I += 1;
		全局.N += 1;
		全局.C[全局.G] = 全局.I;
	}
}

规则("음료 냉장고 2개")
{
	事件
	{
		持续 - 全局;
	}

	动作
	{
		全局.G += 1;
		全局.I = 0;
		全局.A[全局.N] = 矢量(83.560, 0.681, -71.768);
		全局.X[全局.N] = 全局.G;
		全局.I += 1;
		全局.N += 1;
		全局.A[全局.N] = 矢量(76.348, -0.199, -7.915);
		全局.X[全局.N] = 全局.G;
		全局.I += 1;
		全局.N += 1;
		全局.C[全局.G] = 全局.I;
	}
}

规则("사라진 무기 1개")
{
	事件
	{
		持续 - 全局;
	}

	动作
	{
		全局.G += 1;
		全局.I = 0;
		全局.A[全局.N] = 矢量(-39.946, -1.138, -134.845);
		全局.X[全局.N] = 全局.G;
		全局.I += 1;
		全局.N += 1;
		全局.C[全局.G] = 全局.I;
	}
}

规则("teleports Rialto")
{
	事件
	{
		持续 - 全局;
	}

	动作
	{
		全局.P[1] = 矢量(-37.917, 5.925, -148.823);
		创建效果(所有玩家(所有队伍), 环, 颜色(玫红), 全局.P[1], 1.500, 可见);
		全局.P[2] = 矢量(-38.097, 5.925, -152.766);
		创建效果(所有玩家(所有队伍), 环, 颜色(玫红), 全局.P[2], 1.500, 可见);
		全局.P[3] = 矢量(-73.982, 5.925, -148.916);
		创建效果(所有玩家(所有队伍), 环, 颜色(玫红), 全局.P[3], 1.500, 可见);
		全局.P[4] = 矢量(-73.986, 5.925, -153.016);
		创建效果(所有玩家(所有队伍), 环, 颜色(玫红), 全局.P[4], 1.500, 可见);
		全局.P[5] = 矢量(-10.042, -1.872, -74.341);
		创建效果(所有玩家(所有队伍), 环, 颜色(玫红), 全局.P[5], 1.200, 可见);
		全局.P[6] = 矢量(-10.105, -2.701, -77.643);
		创建效果(所有玩家(所有队伍), 环, 颜色(玫红), 全局.P[6], 1.200, 可见);
		全局.P[7] = 矢量(-41.064, 2.925, -111.617);
		创建效果(所有玩家(所有队伍), 环, 颜色(玫红), 全局.P[7], 1.200, 可见);
		全局.P[8] = 矢量(-41.071, 2.288, -115.021);
		创建效果(所有玩家(所有队伍), 环, 颜色(玫红), 全局.P[8], 1.200, 可见);
		全局.P[9] = 矢量(-67.011, 2.925, -111.804);
		创建效果(所有玩家(所有队伍), 环, 颜色(玫红), 全局.P[9], 1.200, 可见);
		全局.P[10] = 矢量(-67.011, 2.349, -114.899);
		创建效果(所有玩家(所有队伍), 环, 颜色(玫红), 全局.P[10], 1.200, 可见);
		全局.P[11] = 矢量(-15.851, 0, -29.045);
		创建效果(所有玩家(所有队伍), 环, 颜色(玫红), 全局.P[11], 1, 可见);
		全局.P[12] = 矢量(-16.140, 0, -25.873);
		创建效果(所有玩家(所有队伍), 环, 颜色(玫红), 全局.P[12], 1, 可见);
		全局.P[13] = 矢量(66.387, 0.925, -73.945);
		创建效果(所有玩家(所有队伍), 环, 颜色(玫红), 全局.P[13], 1, 可见);
		全局.P[14] = 矢量(69.470, 0.925, -74.253);
		创建效果(所有玩家(所有队伍), 环, 颜色(玫红), 全局.P[14], 1, 可见);
	}
}

规则("I=============================================================================")
{
	事件
	{
		持续 - 全局;
	}
}

规则("calculating total number of items")
{
	事件
	{
		持续 - 全局;
	}

	条件
	{
		全局.O == 无;
	}

	动作
	{
		全局.O = 全局.N - 1;
	}
}

规则("player found item")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		按钮被按下(事件玩家, 按钮(互动)) == 真;
		具有状态(事件玩家, 冰冻) == 假;
		事件玩家.Z == 无;
	}

	动作
	{
		根据条件跳过(事件玩家.L != 无, 1);
		事件玩家.L = 1;
		根据条件跳过(全局.A[事件玩家.L] == 无, 18);
		根据条件跳过(事件玩家.F[事件玩家.L] == 真, 17);
		根据条件跳过(相距距离(事件玩家, 全局.A[事件玩家.L]) > 3, 16);
		事件玩家.O = 全局.X[事件玩家.L];
		事件玩家.Z = 全局.A[事件玩家.L];
		在索引处修改全局变量(D, 事件玩家.L, 添加至数组, 事件玩家);
		事件玩家.K = 全局.A[事件玩家.L];
		事件玩家.Q += 1;
		事件玩家.F[事件玩家.L] = 真;
		事件玩家.G[全局.X[事件玩家.L]] += 1;
		事件玩家.M = 事件玩家.L;
		根据条件跳过(事件玩家.Q == 全局.O, 1);
		小字体信息(事件玩家, 字符串("{0} / {1}", 事件玩家.G[全局.X[事件玩家.M]], 全局.C[全局.X[事件玩家.M]]));
		根据条件跳过(事件玩家.G[事件玩家.O] < 全局.C[事件玩家.O], 4);
		事件玩家.A = 全局.X[事件玩家.L];
		播放效果(事件玩家, 环状爆炸, 颜色(玫红), 事件玩家.Z, 7);
		播放效果(事件玩家, 正面状态施加声音, 颜色(白色), 事件玩家, 30);
		播放效果(事件玩家, 有益选择效果 , 颜色(玫红), 事件玩家.Z, 1);
		事件玩家.L = 999;
		事件玩家.L += 1;
		根据条件跳过(事件玩家.L >= 全局.O - 4, 8);
		根据条件跳过(相距距离(事件玩家, 全局.A[事件玩家.L]) <= 3, 1);
		事件玩家.L += 1;
		根据条件跳过(相距距离(事件玩家, 全局.A[事件玩家.L]) <= 3, 1);
		事件玩家.L += 1;
		根据条件跳过(相距距离(事件玩家, 全局.A[事件玩家.L]) <= 3, 1);
		事件玩家.L += 1;
		根据条件跳过(相距距离(事件玩家, 全局.A[事件玩家.L]) <= 3, 1);
		事件玩家.L += 1;
		等待(0.001, 无视条件);
		根据条件跳过(事件玩家.L != 全局.O + 1, 1);
		事件玩家.J = 真;
		根据条件循环(事件玩家.L <= 全局.O);
		事件玩家.L = 1;
	}
}

规则("playing yellow effects")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		事件玩家.Z != 无;
	}

	动作
	{
		播放效果(事件玩家, 环状爆炸, 颜色(玫红), 事件玩家.Z, 3);
		播放效果(事件玩家, 状态爆炸声音, 颜色(黄色), 事件玩家, 20);
		等待(0.250, 无视条件);
		事件玩家.Z = 无;
		根据条件跳过(事件玩家.Q < 全局.O, 4);
		消除HUD文本(事件玩家.W[1]);
		创建HUD文本(所有玩家(所有队伍), 无, 无, 字符串("{0} {1} {2}", 字符串("{0} {1}", 英雄图标字符串(所用英雄(事件玩家)), 事件玩家), 自定义字符串("클리어"), 字符串("{0} / {1}", 事件玩家.Q,
			全局.O)), 右边, 60 - 事件玩家.Q, 颜色(白色), 颜色(白色), 颜色(玫红), 可见和字符串, 默认可见度);
		事件玩家.W[1] = 上一个文本ID;
		中止;
		消除HUD文本(事件玩家.W[1]);
		创建HUD文本(所有玩家(所有队伍), 无, 无, 字符串("{0} {1} {2}", 字符串("{0} {1}", 英雄图标字符串(所用英雄(事件玩家)), 事件玩家), 自定义字符串("찾은 개수"), 字符串("{0} / {1}", 事件玩家.Q,
			全局.O)), 右边, 60 - 事件玩家.Q, 颜色(白色), 颜色(白色), 颜色(白色), 可见和字符串, 默认可见度);
		事件玩家.W[1] = 上一个文本ID;
	}
}

规则("player spawn")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		已重生(事件玩家) == 真;
	}

	动作
	{
		隐藏游戏模式HUD(事件玩家);
		隐藏英雄HUD(事件玩家);
		设置跳跃垂直速度(事件玩家, 170);
		事件玩家.Q = 0;
		修改全局变量(S, 添加至数组, 事件玩家);
		事件玩家.J = 假;
		事件玩家.T = 0;
		设置不可见(事件玩家, 无);
		事件玩家.S = 150;
		设置状态(事件玩家, 无, 无敌, 9999);
		创建效果(事件玩家, 火花, 颜色(玫红), 事件玩家.K, 1.300, 可见，位置和半径);
		全局.T = 0;
		全局.Q = 0;
		事件玩家.K = 矢量(0, -99, 0);
		等待(15, 无视条件);
		小字体信息(事件玩家, 字符串("{0} - {1}", 自定义字符串("[SHIFT]"), 字符串("运行")));
	}
}

规则("creating HUD text 1-5")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		已重生(事件玩家) == 真;
	}

	动作
	{
		根据条件跳过(全局.G < 1, 2);
		创建HUD文本(事件玩家, 字符串("{0} / {1}", 事件玩家.G[1], 全局.C[1]), 无, 自定义字符串("Wastebaskets"), 左边, 1, 颜色(红色), 颜色(白色), 颜色(红色), 可见和字符串, 始终不可见);
		事件玩家.E[1] = 上一个文本ID;
		根据条件跳过(全局.G < 2, 2);
		创建HUD文本(事件玩家, 字符串("{0} / {1}", 事件玩家.G[2], 全局.C[2]), 无, 自定义字符串("Stopped Ship"), 左边, 2, 颜色(橙色), 颜色(白色), 颜色(橙色), 可见和字符串, 始终不可见);
		事件玩家.E[2] = 上一个文本ID;
		根据条件跳过(全局.G < 3, 2);
		创建HUD文本(事件玩家, 字符串("{0} / {1}", 事件玩家.G[3], 全局.C[3]), 无, 自定义字符串("CCTV"), 左边, 3, 颜色(黄色), 颜色(白色), 颜色(黄色), 可见和字符串, 始终不可见);
		事件玩家.E[3] = 上一个文本ID;
		根据条件跳过(全局.G < 4, 2);
		创建HUD文本(事件玩家, 字符串("{0} / {1}", 事件玩家.G[4], 全局.C[4]), 无, 自定义字符串("Exhibits"), 左边, 4, 颜色(绿色), 颜色(白色), 颜色(绿色), 可见和字符串, 始终不可见);
		事件玩家.E[4] = 上一个文本ID;
		根据条件跳过(全局.G < 5, 2);
		创建HUD文本(事件玩家, 字符串("{0} / {1}", 事件玩家.G[5], 全局.C[5]), 无, 自定义字符串("Sea Foods"), 左边, 5, 颜色(蓝色), 颜色(白色), 颜色(蓝色), 可见和字符串, 始终不可见);
		事件玩家.E[5] = 上一个文本ID;
	}
}

规则("creating HUD text 6-10")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		已重生(事件玩家) == 真;
	}

	动作
	{
		根据条件跳过(全局.G < 6, 2);
		创建HUD文本(事件玩家, 字符串("{0} / {1}", 事件玩家.G[6], 全局.C[6]), 无, 自定义字符串("Beverage Refrigerator"), 左边, 6, 颜色(紫色), 颜色(白色), 颜色(紫色), 可见和字符串,
			始终不可见);
		事件玩家.E[6] = 上一个文本ID;
		根据条件跳过(全局.G < 7, 2);
		创建HUD文本(事件玩家, 字符串("{0} / {1}", 事件玩家.G[7], 全局.C[7]), 无, 自定义字符串("Disappeared Weapons"), 左边, 7, 颜色(亮紫色), 颜色(白色), 颜色(亮紫色), 可见和字符串,
			始终不可见);
		事件玩家.E[7] = 上一个文本ID;
		事件玩家.A = 0;
	}
}

规则("all items found (victory!)")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		事件玩家.Q == 全局.O;
		已重生(事件玩家) == 真;
	}

	动作
	{
		设置不可见(事件玩家, 无);
		大字体信息(所有玩家(所有队伍), 字符串("{0} {1} {2}", 英雄图标字符串(所用英雄(事件玩家)), 事件玩家, 字符串("{0}！", 自定义字符串("클리어"))));
		播放效果(事件玩家, 环状爆炸声音, 颜色(白色), 事件玩家, 20);
		播放效果(事件玩家, 有益爆炸, 颜色(青绿色), 事件玩家, 10);
		播放效果(事件玩家, 环状爆炸, 颜色(玫红), 事件玩家, 20);
		全局.H = 事件玩家;
		交流(事件玩家, 表情（上）);
		设置慢动作(30);
		等待(1.250, 无视条件);
		设置慢动作(100);
		等待(3, 无视条件);
		小字体信息(事件玩家, 字符串("{0} {1}", 自定义字符串("수고하셨습니다"), 字符串("{0}！", 事件玩家)));
		等待(15, 无视条件);
		播放效果(事件玩家, 状态爆炸声音, 颜色(白色), 事件玩家, 10);
		消除HUD文本(事件玩家.AA);
		等待(0.250, 无视条件);
		事件玩家.AA = 上一个文本ID;
	}
}

规则("player pressed \"F\" key on the empty place")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		事件玩家.J == 真;
		具有状态(事件玩家, 击倒) == 假;
		事件玩家.Q != 全局.O;
	}

	动作
	{
		播放效果(事件玩家, 负面状态施加声音, 颜色(白色), 事件玩家, 50);
		设置状态(事件玩家, 无, 击倒, 1.500);
		小字体信息(事件玩家, 自定义字符串("이 물건이 아닙니다."));
		事件玩家.J = 假;
	}
}

规则("player is knocked down")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		事件玩家.J == 真;
	}

	动作
	{
		等待(1, 无视条件);
		事件玩家.R -= 1;
	}
}

规则("create all 60 effects at the beginning of the match")
{
	事件
	{
		持续 - 全局;
	}

	动作
	{
		创建效果(所有玩家(所有队伍), 有害光环, 颜色(青绿色), 全局.H, 1, 可见，位置和半径);
		创建效果(所有玩家(所有队伍), 火花, 颜色(水绿色), 全局.H, 1.500, 可见，位置和半径);
		创建效果(全局.D[1], 有益光环, 颜色(红色), 全局.A[1], 0.800, 可见);
		创建效果(全局.D[2], 有益光环, 颜色(红色), 全局.A[2], 1, 可见);
		创建效果(全局.D[3], 有益光环, 颜色(红色), 全局.A[3], 1, 可见);
		创建效果(全局.D[4], 有益光环, 颜色(红色), 全局.A[4], 1, 可见);
		创建效果(全局.D[5], 有益光环, 颜色(红色), 全局.A[5], 1, 可见);
		创建效果(全局.D[6], 有益光环, 颜色(红色), 全局.A[6], 1, 可见);
		创建效果(全局.D[7], 有益光环, 颜色(红色), 全局.A[7], 1, 可见);
		创建效果(全局.D[8], 有益光环, 颜色(红色), 全局.A[8], 1, 可见);
		创建效果(全局.D[9], 有益光环, 颜色(红色), 全局.A[9], 1, 可见);
		创建效果(全局.D[10], 有益光环, 颜色(红色), 全局.A[10], 1, 可见);
		创建效果(全局.D[11], 有益光环, 颜色(红色), 全局.A[11], 1, 可见);
		创建效果(全局.D[12], 有益光环, 颜色(红色), 全局.A[12], 1, 可见);
		创建效果(全局.D[13], 有益光环, 颜色(红色), 全局.A[13], 1, 可见);
		创建效果(全局.D[14], 有益光环, 颜色(橙色), 全局.A[14], 1, 可见);
		创建效果(全局.D[15], 有益光环, 颜色(橙色), 全局.A[15], 1, 可见);
		创建效果(全局.D[16], 有益光环, 颜色(橙色), 全局.A[16], 1, 可见);
		创建效果(全局.D[17], 有益光环, 颜色(橙色), 全局.A[17], 1, 可见);
		创建效果(全局.D[18], 有益光环, 颜色(橙色), 全局.A[18], 1, 可见);
		创建效果(全局.D[19], 有益光环, 颜色(橙色), 全局.A[19], 1, 可见);
		创建效果(全局.D[20], 有益光环, 颜色(橙色), 全局.A[20], 1, 可见);
		创建效果(全局.D[21], 有益光环, 颜色(橙色), 全局.A[21], 1, 可见);
		创建效果(全局.D[22], 有益光环, 颜色(橙色), 全局.A[22], 1, 可见);
		创建效果(全局.D[23], 有益光环, 颜色(橙色), 全局.A[23], 1, 可见);
		创建效果(全局.D[24], 有益光环, 颜色(黄色), 全局.A[24], 0.500, 可见);
		创建效果(全局.D[25], 有益光环, 颜色(黄色), 全局.A[25], 0.500, 可见);
		创建效果(全局.D[26], 有益光环, 颜色(黄色), 全局.A[26], 0.500, 可见);
		创建效果(全局.D[27], 有益光环, 颜色(黄色), 全局.A[27], 0.500, 可见);
		创建效果(全局.D[28], 有益光环, 颜色(黄色), 全局.A[28], 0.500, 可见);
		创建效果(全局.D[29], 有益光环, 颜色(黄色), 全局.A[29], 0.500, 可见);
		创建效果(全局.D[30], 有益光环, 颜色(黄色), 全局.A[30], 0.500, 可见);
		创建效果(全局.D[31], 有益光环, 颜色(黄色), 全局.A[31], 0.500, 可见);
		创建效果(全局.D[32], 有益光环, 颜色(黄色), 全局.A[32], 0.500, 可见);
		创建效果(全局.D[33], 有益光环, 颜色(黄色), 全局.A[33], 0.500, 可见);
		创建效果(全局.D[34], 有益光环, 颜色(黄色), 全局.A[34], 0.500, 可见);
		创建效果(全局.D[35], 有益光环, 颜色(黄色), 全局.A[35], 0.500, 可见);
		创建效果(全局.D[36], 有益光环, 颜色(绿色), 全局.A[36], 1.200, 可见);
		创建效果(全局.D[37], 有益光环, 颜色(绿色), 全局.A[37], 1.200, 可见);
		创建效果(全局.D[38], 有益光环, 颜色(绿色), 全局.A[38], 1.200, 可见);
		创建效果(全局.D[39], 有益光环, 颜色(绿色), 全局.A[39], 1.200, 可见);
		创建效果(全局.D[40], 有益光环, 颜色(绿色), 全局.A[40], 1.300, 可见);
		创建效果(全局.D[41], 有益光环, 颜色(绿色), 全局.A[41], 1.200, 可见);
		创建效果(全局.D[42], 有益光环, 颜色(蓝色), 全局.A[42], 0.500, 可见);
		创建效果(全局.D[43], 有益光环, 颜色(蓝色), 全局.A[43], 0.500, 可见);
		创建效果(全局.D[44], 有益光环, 颜色(蓝色), 全局.A[44], 0.500, 可见);
		创建效果(全局.D[45], 有益光环, 颜色(蓝色), 全局.A[45], 0.500, 可见);
		创建效果(全局.D[46], 有益光环, 颜色(蓝色), 全局.A[46], 0.500, 可见);
		创建效果(全局.D[47], 有益光环, 颜色(蓝色), 全局.A[47], 0.500, 可见);
		创建效果(全局.D[48], 有益光环, 颜色(蓝色), 全局.A[48], 0.500, 可见);
		创建效果(全局.D[49], 有益光环, 颜色(蓝色), 全局.A[49], 0.500, 可见);
		创建效果(全局.D[50], 有益光环, 颜色(蓝色), 全局.A[50], 0.500, 可见);
		创建效果(全局.D[51], 有益光环, 颜色(蓝色), 全局.A[51], 0.500, 可见);
		创建效果(全局.D[52], 有益光环, 颜色(蓝色), 全局.A[52], 0.500, 可见);
		创建效果(全局.D[53], 有益光环, 颜色(蓝色), 全局.A[53], 0.500, 可见);
		创建效果(全局.D[54], 有益光环, 颜色(蓝色), 全局.A[54], 0.500, 可见);
		创建效果(全局.D[55], 有益光环, 颜色(蓝色), 全局.A[55], 0.580, 可见);
		创建效果(全局.D[56], 有益光环, 颜色(蓝色), 全局.A[56], 0.500, 可见);
		创建效果(全局.D[57], 有益光环, 颜色(紫色), 全局.A[57], 1, 可见);
		创建效果(全局.D[58], 有益光环, 颜色(紫色), 全局.A[58], 1, 可见);
		创建效果(全局.D[59], 有益光环, 颜色(玫红), 全局.A[59], 0.600, 可见);
		禁用 创建效果(全局.D[60], 有益光环, 颜色(玫红), 全局.A[60], 1, 可见);
		禁用 创建效果(全局.D[61], 有益光环, 颜色(黄色), 全局.A[61], 1, 可见);
		禁用 创建效果(全局.D[62], 有益光环, 颜色(黄色), 全局.A[62], 1, 可见);
	}
}

规则("shift key is pressed (acceleration)")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		按钮被按下(事件玩家, 按钮(技能1)) == 真;
	}

	动作
	{
		设置移动速度(事件玩家, 事件玩家.S);
	}
}

规则("shift key is not pressed (slowdown)")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		按钮被按下(事件玩家, 按钮(技能1)) == 假;
	}

	动作
	{
		设置移动速度(事件玩家, 110);
	}
}

规则("teleport cooldown")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		事件玩家.B == 真;
	}

	动作
	{
		等待(2, 无视条件);
		事件玩家.B = 假;
		等待(0.500, 无视条件);
		如条件为”真“则循环;
	}
}

规则("teleport 1")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		事件玩家.B == 假;
		全局.P[1] != 0;
		相距距离(事件玩家, 全局.P[1]) <= 2;
	}

	动作
	{
		传送(事件玩家, 全局.P[2]);
		事件玩家.B = 真;
		播放效果(事件玩家, 有益爆炸, 颜色(玫红), 事件玩家, 5);
		播放效果(事件玩家, 环状爆炸声音, 颜色(白色), 事件玩家, 20);
	}
}

规则("teleport 2")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		事件玩家.B == 假;
		全局.P[2] != 0;
		相距距离(事件玩家, 全局.P[2]) <= 2;
	}

	动作
	{
		传送(事件玩家, 全局.P[1]);
		事件玩家.B = 真;
		播放效果(事件玩家, 有益爆炸, 颜色(玫红), 事件玩家, 5);
		播放效果(事件玩家, 环状爆炸声音, 颜色(白色), 事件玩家, 20);
	}
}

规则("teleport 3")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		事件玩家.B == 假;
		全局.P[3] != 0;
		相距距离(事件玩家, 全局.P[3]) <= 2;
	}

	动作
	{
		传送(事件玩家, 全局.P[4]);
		事件玩家.B = 真;
		播放效果(事件玩家, 有益爆炸, 颜色(玫红), 事件玩家, 5);
		播放效果(事件玩家, 环状爆炸声音, 颜色(白色), 事件玩家, 20);
	}
}

规则("teleport 4")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		事件玩家.B == 假;
		全局.P[4] != 0;
		相距距离(事件玩家, 全局.P[4]) <= 2;
	}

	动作
	{
		传送(事件玩家, 全局.P[3]);
		事件玩家.B = 真;
		播放效果(事件玩家, 有益爆炸, 颜色(玫红), 事件玩家, 5);
		播放效果(事件玩家, 环状爆炸声音, 颜色(白色), 事件玩家, 20);
	}
}

规则("teleport 5")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		事件玩家.B == 假;
		全局.P[5] != 0;
		相距距离(事件玩家, 全局.P[5]) <= 2;
	}

	动作
	{
		传送(事件玩家, 全局.P[6]);
		事件玩家.B = 真;
		播放效果(事件玩家, 有益爆炸, 颜色(玫红), 事件玩家, 5);
		播放效果(事件玩家, 环状爆炸声音, 颜色(白色), 事件玩家, 20);
	}
}

规则("teleport 6")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		事件玩家.B == 假;
		全局.P[6] != 0;
		相距距离(事件玩家, 全局.P[6]) <= 2;
	}

	动作
	{
		传送(事件玩家, 全局.P[5]);
		事件玩家.B = 真;
		播放效果(事件玩家, 有益爆炸, 颜色(玫红), 事件玩家, 5);
		播放效果(事件玩家, 环状爆炸声音, 颜色(白色), 事件玩家, 20);
	}
}

规则("teleport 7")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		事件玩家.B == 假;
		全局.P[7] != 0;
		相距距离(事件玩家, 全局.P[7]) <= 2;
	}

	动作
	{
		传送(事件玩家, 全局.P[8]);
		事件玩家.B = 真;
		播放效果(事件玩家, 有益爆炸, 颜色(玫红), 事件玩家, 5);
		播放效果(事件玩家, 环状爆炸声音, 颜色(白色), 事件玩家, 20);
	}
}

规则("teleport 8")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		事件玩家.B == 假;
		全局.P[8] != 0;
		相距距离(事件玩家, 全局.P[8]) <= 2;
	}

	动作
	{
		传送(事件玩家, 全局.P[7]);
		事件玩家.B = 真;
		播放效果(事件玩家, 有益爆炸, 颜色(玫红), 事件玩家, 5);
		播放效果(事件玩家, 环状爆炸声音, 颜色(白色), 事件玩家, 20);
	}
}

规则("teleport 9")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		事件玩家.B == 假;
		全局.P[9] != 0;
		相距距离(事件玩家, 全局.P[9]) <= 2;
	}

	动作
	{
		传送(事件玩家, 全局.P[10]);
		事件玩家.B = 真;
		播放效果(事件玩家, 有益爆炸, 颜色(玫红), 事件玩家, 5);
		播放效果(事件玩家, 环状爆炸声音, 颜色(白色), 事件玩家, 20);
	}
}

规则("teleport 10")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		事件玩家.B == 假;
		全局.P[10] != 0;
		相距距离(事件玩家, 全局.P[10]) <= 2;
	}

	动作
	{
		传送(事件玩家, 全局.P[9]);
		事件玩家.B = 真;
		播放效果(事件玩家, 有益爆炸, 颜色(玫红), 事件玩家, 5);
		播放效果(事件玩家, 环状爆炸声音, 颜色(白色), 事件玩家, 20);
	}
}

规则("teleport 11")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		事件玩家.B == 假;
		全局.P[11] != 0;
		相距距离(事件玩家, 全局.P[11]) <= 2;
	}

	动作
	{
		传送(事件玩家, 全局.P[12]);
		事件玩家.B = 真;
		播放效果(事件玩家, 有益爆炸, 颜色(玫红), 事件玩家, 5);
		播放效果(事件玩家, 环状爆炸声音, 颜色(白色), 事件玩家, 20);
	}
}

规则("teleport 12")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		事件玩家.B == 假;
		全局.P[12] != 0;
		相距距离(事件玩家, 全局.P[12]) <= 2;
	}

	动作
	{
		传送(事件玩家, 全局.P[11]);
		事件玩家.B = 真;
		播放效果(事件玩家, 有益爆炸, 颜色(玫红), 事件玩家, 5);
		播放效果(事件玩家, 环状爆炸声音, 颜色(白色), 事件玩家, 20);
	}
}

规则("teleport 13")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		事件玩家.B == 假;
		全局.P[13] != 0;
		相距距离(事件玩家, 全局.P[13]) <= 2;
	}

	动作
	{
		传送(事件玩家, 全局.P[14]);
		事件玩家.B = 真;
		播放效果(事件玩家, 有益爆炸, 颜色(玫红), 事件玩家, 5);
		播放效果(事件玩家, 环状爆炸声音, 颜色(白色), 事件玩家, 20);
	}
}

规则("teleport 14")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		事件玩家.B == 假;
		全局.P[14] != 0;
		相距距离(事件玩家, 全局.P[14]) <= 2;
	}

	动作
	{
		传送(事件玩家, 全局.P[13]);
		事件玩家.B = 真;
		播放效果(事件玩家, 有益爆炸, 颜色(玫红), 事件玩家, 5);
		播放效果(事件玩家, 环状爆炸声音, 颜色(白色), 事件玩家, 20);
	}
}

规则("teleport 15")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		事件玩家.B == 假;
		全局.P[15] != 0;
		相距距离(事件玩家, 全局.P[15]) <= 2;
	}

	动作
	{
		传送(事件玩家, 全局.P[16]);
		事件玩家.B = 真;
		播放效果(事件玩家, 有益爆炸, 颜色(玫红), 事件玩家, 5);
		播放效果(事件玩家, 环状爆炸声音, 颜色(白色), 事件玩家, 20);
	}
}

规则("teleport 16")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		事件玩家.B == 假;
		全局.P[16] != 0;
		相距距离(事件玩家, 全局.P[16]) <= 2;
	}

	动作
	{
		传送(事件玩家, 全局.P[15]);
		事件玩家.B = 真;
		播放效果(事件玩家, 有益爆炸, 颜色(玫红), 事件玩家, 5);
		播放效果(事件玩家, 环状爆炸声音, 颜色(白色), 事件玩家, 20);
	}
}

规则("teleport 17")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		自定义字符串("{0}", 事件玩家) == 自定义字符串("배수지");
	}

	动作
	{
		移除玩家(事件玩家);
	}
}

规则("teleport 18")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		自定义字符串("{0}", 事件玩家) == 自定义字符串("핑깜");
	}

	动作
	{
		移除玩家(事件玩家);
	}
}

规则("acceleration after finding a group of items")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		事件玩家.A > 0;
		事件玩家.S <= 300;
		全局.G > 0;
		事件玩家.Q < 全局.O;
	}

	动作
	{
		事件玩家.S += 150 / 全局.G;
		等待(1, 无视条件);
		大字体信息(事件玩家, 字符串("{0} {1}", 字符串("速度"), 字符串("升级")));
		播放效果(事件玩家, 正面状态施加声音, 颜色(白色), 事件玩家, 30);
		等待(2, 无视条件);
		小字体信息(事件玩家, 字符串("{0} - {1}", 自定义字符串("[SHIFT]"), 字符串("运行")));
	}
}

规则("player found the last item in the group 1-5")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		事件玩家.A > 0;
		事件玩家.A <= 5;
	}

	动作
	{
		事件玩家.N = 1;
		根据条件跳过(事件玩家.A != 事件玩家.N, 2);
		消除HUD文本(事件玩家.E[事件玩家.N]);
		创建HUD文本(事件玩家, 字符串("{0} {1}", 字符串("{0} / {1}", 全局.C[1], 全局.C[1]), 图标字符串(红桃)), 无, 无, 左边, 1, 颜色(玫红), 颜色(白色), 颜色(玫红), 可见和字符串, 始终不可见);
		事件玩家.N = 2;
		根据条件跳过(事件玩家.A != 事件玩家.N, 2);
		消除HUD文本(事件玩家.E[事件玩家.N]);
		创建HUD文本(事件玩家, 字符串("{0} {1}", 字符串("{0} / {1}", 全局.C[2], 全局.C[2]), 图标字符串(红桃)), 无, 无, 左边, 2, 颜色(玫红), 颜色(白色), 颜色(玫红), 可见和字符串, 始终不可见);
		事件玩家.N = 3;
		根据条件跳过(事件玩家.A != 事件玩家.N, 2);
		消除HUD文本(事件玩家.E[事件玩家.N]);
		创建HUD文本(事件玩家, 字符串("{0} {1}", 字符串("{0} / {1}", 全局.C[3], 全局.C[3]), 图标字符串(红桃)), 无, 无, 左边, 3, 颜色(玫红), 颜色(白色), 颜色(玫红), 可见和字符串, 始终不可见);
		事件玩家.N = 4;
		根据条件跳过(事件玩家.A != 事件玩家.N, 2);
		消除HUD文本(事件玩家.E[事件玩家.N]);
		创建HUD文本(事件玩家, 字符串("{0} {1}", 字符串("{0} / {1}", 全局.C[4], 全局.C[4]), 图标字符串(红桃)), 无, 无, 左边, 4, 颜色(玫红), 颜色(白色), 颜色(玫红), 可见和字符串, 始终不可见);
		事件玩家.N = 5;
		根据条件跳过(事件玩家.A != 事件玩家.N, 2);
		消除HUD文本(事件玩家.E[事件玩家.N]);
		创建HUD文本(事件玩家, 字符串("{0} {1}", 字符串("{0} / {1}", 全局.C[5], 全局.C[5]), 图标字符串(红桃)), 无, 无, 左边, 5, 颜色(玫红), 颜色(白色), 颜色(玫红), 可见和字符串, 始终不可见);
		事件玩家.A = 0;
	}
}

规则("player found the last item in the group 6-10")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		事件玩家.A > 5;
		事件玩家.A <= 10;
	}

	动作
	{
		事件玩家.N = 6;
		根据条件跳过(事件玩家.A != 事件玩家.N, 2);
		消除HUD文本(事件玩家.E[事件玩家.N]);
		创建HUD文本(事件玩家, 字符串("{0} {1}", 字符串("{0} / {1}", 全局.C[6], 全局.C[6]), 图标字符串(红桃)), 无, 无, 左边, 6, 颜色(玫红), 颜色(白色), 颜色(玫红), 可见和字符串, 始终不可见);
		事件玩家.N = 7;
		根据条件跳过(事件玩家.A != 事件玩家.N, 2);
		消除HUD文本(事件玩家.E[事件玩家.N]);
		创建HUD文本(事件玩家, 字符串("{0} {1}", 字符串("{0} / {1}", 全局.C[7], 全局.C[7]), 图标字符串(红桃)), 无, 无, 左边, 7, 颜色(玫红), 颜色(白色), 颜色(玫红), 可见和字符串, 始终不可见);
		事件玩家.N = 8;
		根据条件跳过(事件玩家.A != 事件玩家.N, 2);
		消除HUD文本(事件玩家.E[事件玩家.N]);
		创建HUD文本(事件玩家, 字符串("{0} {1}", 字符串("{0} / {1}", 全局.C[8], 全局.C[8]), 图标字符串(红桃)), 无, 无, 左边, 8, 颜色(玫红), 颜色(白色), 颜色(玫红), 可见和字符串, 始终不可见);
		事件玩家.N = 9;
		根据条件跳过(事件玩家.A != 事件玩家.N, 2);
		消除HUD文本(事件玩家.E[事件玩家.N]);
		创建HUD文本(事件玩家, 字符串("{0} {1}", 字符串("{0} / {1}", 全局.C[9], 全局.C[9]), 图标字符串(红桃)), 无, 无, 左边, 9, 颜色(玫红), 颜色(白色), 颜色(玫红), 可见和字符串, 始终不可见);
		事件玩家.N = 10;
		根据条件跳过(事件玩家.A != 事件玩家.N, 2);
		消除HUD文本(事件玩家.E[事件玩家.N]);
		创建HUD文本(事件玩家, 字符串("{0} {1}", 字符串("{0} / {1}", 全局.C[10], 全局.C[10]), 图标字符串(红桃)), 无, 无, 左边, 10, 颜色(玫红), 颜色(白色), 颜色(玫红), 可见和字符串,
			始终不可见);
		事件玩家.A = 0;
	}
}

规则("infinite match time")
{
	事件
	{
		持续 - 全局;
	}

	条件
	{
		比赛时间 <= 1800;
	}

	动作
	{
		设置比赛时间(3600);
	}
}

规则("updating data after a player leaves the game")
{
	事件
	{
		持续 - 全局;
	}

	条件
	{
		全局.T == 0;
	}

	动作
	{
		全局.R = 全局.S[全局.T];
		根据条件跳过(全局.R == 无, 7);
		根据条件跳过(已重生(全局.R), 6);
		全局.Q += 1;
		在索引处修改全局变量(D, 全局.Q, 根据值从数组中移除, 全局.R);
		等待(0.025, 无视条件);
		根据条件跳过(全局.Q < 60, 1);
		修改全局变量(S, 根据值从数组中移除, 全局.R);
		根据条件循环(全局.Q < 60);
		全局.T += 1;
		全局.Q = 0;
		等待(0.025, 无视条件);
		根据条件循环(全局.T < 12);
	}
}

规则("bug protection")
{
	事件
	{
		玩家离开比赛;
		双方;
		全部;
	}

	动作
	{
		设置慢动作(100);
	}
}

规则("점프대")
{
	事件
	{
		持续 - 每名玩家;
		队伍2;
		全部;
	}

	条件
	{
		相距距离(所选位置(事件玩家), 矢量(-46.001, 1.250, -67.030)) <= 2;
	}

	动作
	{
		施加推力(事件玩家, 矢量(0, 1, 0), 22.500, 至地图, 取消相反运动);
		创建效果(所有玩家(所有队伍), 球, 颜色(青绿色), 矢量(-46.001, 1.250, -67.030), 1, 可见，位置和半径);
	}
}

禁用 规则("상단바")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	动作
	{
		创建HUD文本(事件玩家, 自定义字符串("McQueen 버전 ★그래픽 품질 높음 이상 권장★"), 无, 无, 顶部, 0, 事件玩家.AB, 颜色(白色), 颜色(玫红), 可见，排序规则，字符串和颜色, 默认可见度);
	}
}

禁用 规则("상단바 RGB")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	动作
	{
		事件玩家.AB = 颜色(红色);
		等待(0.400, 无视条件);
		事件玩家.AB = 颜色(橙色);
		等待(0.400, 无视条件);
		事件玩家.AB = 颜色(黄色);
		等待(0.400, 无视条件);
		事件玩家.AB = 颜色(绿色);
		等待(0.400, 无视条件);
		事件玩家.AB = 颜色(青绿色);
		等待(0.400, 无视条件);
		事件玩家.AB = 颜色(水绿色);
		等待(0.400, 无视条件);
		事件玩家.AB = 颜色(蓝色);
		等待(0.400, 无视条件);
		事件玩家.AB = 颜色(紫色);
		等待(0.400, 无视条件);
		事件玩家.AB = 颜色(亮紫色);
		等待(0.400, 无视条件);
		事件玩家.AB = 颜色(玫红);
		等待(0.400, 无视条件);
		循环;
	}
}

规则("Version Address")
{
	事件
	{
		持续 - 全局;
	}

	动作
	{
		创建HUD文本(所有玩家(所有队伍), 无, 无, 字符串("{0} {1} {2}", 自定义字符串("제작 :"), 英雄图标字符串(英雄(死神)), 自定义字符串(
			"McQueen#31361  code : AZN4T  open : 21.07.01")), 顶部, 0, 颜色(白色), 颜色(白色), 颜色(青绿色), 可见和字符串, 默认可见度);
		创建HUD文本(所有玩家(所有队伍), 无, 无, 自定义字符串("버전 코드 모음집 : ****inven.co.kr/board/overwatch/5460/1056"), 顶部, 0, 颜色(白色), 颜色(白色), 颜色(白色), 可见,
			默认可见度);
	}
}

规则("순위표")
{
	事件
	{
		持续 - 全局;
	}

	动作
	{
		创建HUD文本(所有玩家(所有队伍), 无, 无, 自定义字符串("TOP PLAYER"), 右边, -1, 颜色(白色), 颜色(白色), 颜色(青绿色), 可见和字符串, 默认可见度);
	}
}

规则("맥퀸 에디터")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		自定义字符串("{0}", 事件玩家) == 自定义字符串("McQueen");
	}

	动作
	{
		创建地图文本(所有玩家(所有队伍), 自定义字符串("PRODUCER"), 事件玩家, 1.200, 根据表面截取, 可见，位置和字符串, 颜色(玫红), 默认可见度);
	}
}