设置
{
	主程序
	{
		描述: "E3W66这是哪儿——阿育托耶★在地图上寻找神秘地点 ★点击右键可以看到一个神秘图片，找到这个地方，对物品按下互动键（默认F）得到下一张照片，先找完的人获胜！ ★建议设置为中高模型特效获取更好的游戏体验★游戏结束后会获得奖励 ★按[shift]奔跑 ★提示和更多地图在owmot.net搜索★ Made by Foren#2660 ★ 国服搬运工：KDLin#5710"
	}

	大厅
	{
		地图轮换: 暂停轮换
		比赛结束后转换队伍: 否
		比赛语音聊天: 启用
		玩家上限 队伍1: 0
		玩家上限 队伍2: 12
		观战者人数上限: 3
		返回大厅: 从不
	}

	模式
	{
		决斗先锋
		{
			英雄池上限: 队伍人数+3
			英雄选择: 随机英雄

			启用地图
			{
				阿育陀耶
			}
		}

		综合
		{
			允许切换英雄: 关闭
			复生时间: 0%
			急救包刷新: 禁用
			比赛模式开始: 即时
			消灭提示: 关闭
			消灭镜头: 关闭
			英雄限制: 关闭
			随机英雄复生: 开启
		}
	}

	英雄
	{
		综合
		{
			主要攻击模式: 关闭
			仅爆头有效: 开启
			战斗时终极技能充能速度: 0%
			技能冷却时间: 50%
			移动速度: 110%
			终极技能充能速度: 10%
			终极技能自动充能速度: 0%
			近身攻击: 关闭

			D.Va
			{
				主要攻击模式: 关闭
				微型飞弹: 关闭
				推进器: 关闭
				终极技能（自毁）: 关闭
				近身攻击: 关闭
				防御矩阵: 关闭
			}

			半藏
			{
				主要攻击模式: 关闭
				岚: 关闭
				终极技能（竜）: 关闭
				跃: 关闭
				近身攻击: 关闭
				音: 关闭
			}

			卢西奥
			{
				主要攻击模式: 关闭
				切歌: 关闭
				强音: 关闭
				终极技能（音障）: 关闭
				近身攻击: 关闭
				音波: 关闭
			}

			回声
			{
				主要攻击模式: 关闭
				滑翔: 关闭
				终极技能（人格复制）: 关闭
				聚焦光线: 关闭
				近身攻击: 关闭
				飞行: 关闭
				黏性炸弹: 关闭
			}

			堡垒
			{
				主要攻击模式: 关闭
				切换模式: 关闭
				终极技能（坦克模式）: 关闭
				自我修复: 关闭
				近身攻击: 关闭
			}

			士兵：76
			{
				主要攻击模式: 关闭
				生物力场: 关闭
				疾跑: 关闭
				终极技能（战术目镜）: 关闭
				螺旋飞弹: 关闭
				近身攻击: 关闭
			}

			天使
			{
				主要攻击模式: 关闭
				守护天使: 关闭
				终极技能（女武神）: 关闭
				自动恢复: 关闭
				辅助攻击模式: 关闭
				近身攻击: 关闭
				重生: 关闭
			}

			奥丽莎
			{
				主要攻击模式: 关闭
				强固防御: 关闭
				站住别动: 关闭
				终极技能（超充能器）: 关闭
				近身攻击: 关闭
				防护屏障: 关闭
			}

			安娜
			{
				主要攻击模式: 关闭
				生物手雷: 关闭
				终极技能（纳米激素）: 关闭
				近身攻击: 关闭
				麻醉镖: 关闭
			}

			巴蒂斯特
			{
				主要攻击模式: 关闭
				愈合冲击: 关闭
				终极技能（增幅矩阵）: 关闭
				维生力场: 关闭
				辅助攻击模式: 关闭
				近身攻击: 关闭
			}

			布丽吉塔
			{
				主要攻击模式: 关闭
				屏障护盾: 关闭
				恢复包: 关闭
				流星飞锤: 关闭
				终极技能（集结号令）: 关闭
				能量盾击: 关闭
				近身攻击: 关闭
			}

			托比昂
			{
				主要攻击模式: 关闭
				热力过载: 关闭
				终极技能（熔火核心）: 关闭
				辅助攻击模式: 关闭
				近身攻击: 关闭
				部署炮台: 关闭
			}

			末日铁拳
			{
				上勾重拳: 关闭
				主要攻击模式: 关闭
				火箭重拳: 关闭
				终极技能（毁天灭地）: 关闭
				裂地重拳: 关闭
				近身攻击: 关闭
			}

			查莉娅
			{
				主要攻击模式: 关闭
				投射屏障: 关闭
				无需装弹: 开启
				粒子屏障: 关闭
				辅助攻击模式: 关闭
				近身攻击: 关闭
			}

			死神
			{
				主要攻击模式: 关闭
				幽灵形态: 关闭
				暗影步: 关闭
				终极技能（死亡绽放）: 关闭
				近身攻击: 关闭
			}

			法老之鹰
			{
				主要攻击模式: 关闭
				悬浮背包: 关闭
				推进背包: 关闭
				终极技能（火箭弹幕）: 关闭
				近身攻击: 关闭
				震荡冲击: 关闭
			}

			温斯顿
			{
				主要攻击模式: 关闭
				喷射背包: 关闭
				屏障发射器: 关闭
				终极技能（原始暴怒）: 关闭
				近身攻击: 关闭
			}

			源氏
			{
				主要攻击模式: 关闭
				影: 关闭
				终极技能（斩）: 关闭
				辅助攻击模式: 关闭
				近身攻击: 关闭
				闪: 关闭
			}

			狂鼠
			{
				主要攻击模式: 关闭
				捕兽夹: 关闭
				终极技能（炸弹轮胎）: 关闭
				近身攻击: 关闭
				震荡地雷: 关闭
			}

			猎空
			{
				主要攻击模式: 关闭
				终极技能（脉冲炸弹）: 关闭
				近身攻击: 关闭
				闪回: 关闭
				闪现: 关闭
			}

			破坏球
			{
				主要攻击模式: 关闭
				动力铁球: 关闭
				工程抓钩: 关闭
				感应护盾: 关闭
				终极技能（地雷禁区）: 关闭
				近身攻击: 关闭
				重力坠击: 关闭
			}

			禅雅塔
			{
				主要攻击模式: 关闭
				乱: 关闭
				谐: 关闭
				辅助攻击模式: 关闭
				近身攻击: 关闭
			}

			秩序之光
			{
				主要攻击模式: 关闭
				传送面板: 关闭
				哨戒炮: 关闭
				终极技能（光子屏障）: 关闭
				辅助攻击模式: 关闭
				近身攻击: 关闭
			}

			美
			{
				主要攻击模式: 关闭
				冰墙: 关闭
				急冻: 关闭
				终极技能（暴雪）: 关闭
				辅助攻击模式: 关闭
				近身攻击: 关闭
			}

			艾什
			{
				主要攻击模式: 关闭
				延时雷管: 关闭
				短筒猎枪: 关闭
				终极技能（召唤鲍勃）: 关闭
				近身攻击: 关闭
			}

			莫伊拉
			{
				主要攻击模式: 关闭
				消散: 关闭
				生化之球: 关闭
				终极技能（聚合射线）: 关闭
				辅助攻击模式: 关闭
				近身攻击: 关闭
			}

			莱因哈特
			{
				主要攻击模式: 关闭
				冲锋: 关闭
				屏障力场: 关闭
				烈焰打击: 关闭
				终极技能（裂地猛击）: 关闭
				近身攻击: 关闭
			}

			西格玛
			{
				主要攻击模式: 关闭
				动能俘获: 关闭
				实验屏障: 关闭
				终极技能（引力乱流）: 关闭
				质量吸附: 关闭
				近身攻击: 关闭
			}

			路霸
			{
				主要攻击模式: 关闭
				呼吸器: 关闭
				终极技能（鸡飞狗跳）: 关闭
				辅助攻击模式: 关闭
				近身攻击: 关闭
				链钩: 关闭
			}

			麦克雷
			{
				主要攻击模式: 关闭
				战术翻滚: 关闭
				终极技能（神射手）: 关闭
				辅助攻击模式: 关闭
				近身攻击: 关闭
				闪光弹: 关闭
			}

			黑影
			{
				主要攻击模式: 关闭
				位移传动: 关闭
				终极技能（电磁脉冲）: 关闭
				近身攻击: 关闭
				隐秘潜行: 关闭
				黑客入侵: 关闭
			}

			黑百合
			{
				主要攻击模式: 关闭
				剧毒诡雷: 关闭
				抓钩: 关闭
				终极技能（红外侦测）: 关闭
				近身攻击: 关闭
			}

			禁用英雄
			{
				半藏
				破坏球
				西格玛
			}
		}
	}
}

变量
{
	全局:
		26: AA

	玩家:
		26: AA
}

规则("// copy and paste the following line into the game title: *")
{
	事件
	{
		持续 - 全局;
	}
}

规则("WHERE IS IT? ★ Ayutthaya ★")
{
	事件
	{
		持续 - 全局;
	}
}

规则("// all maps and additional info: bit.do/whereisit")
{
	事件
	{
		持续 - 全局;
	}
}

规则("// \"WHERE IS IT?\" ver. 1.4")
{
	事件
	{
		持续 - 全局;
	}
}

规则("// original mode is made by Foren#2660")
{
	事件
	{
		持续 - 全局;
	}
}

规则("intro *")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		事件玩家.I == 真;
	}

	动作
	{
		设置状态(事件玩家, 无, 定身, 99);
		等待(0.250, 无视条件);
		开始镜头(事件玩家, 矢量(-19.728, -0.654, -10.650), 矢量(-50.453, -1.776, -21.243), 0);
		等待(6, 无视条件);
		开始镜头(事件玩家, 矢量(-19.728, -0.654, -10.650), 矢量(-50.453, -1.776, -21.243), 0);
		等待(2, 无视条件);
		开始镜头(事件玩家, 矢量(18.009, 1, -65.069), 矢量(17.991, 3.760, -66.689), 0);
		等待(0.250, 无视条件);
		小字体信息(事件玩家, 字符串("{0} {1}", 字符串("欢迎"), 字符串("{0}！", 事件玩家)));
		开始镜头(事件玩家, 矢量(18.009, 3.760, -65.069), 矢量(17.991, 3.760, -66.689), 2);
		等待(5, 无视条件);
		开始镜头(事件玩家, 矢量(15.949, 3.723, 51.517), 矢量(15.979, 3.758, 53.347), 0);
		等待(0.100, 无视条件);
		播放效果(事件玩家, 状态爆炸声音, 颜色(白色), 矢量(15.979, 3.758, 53.347), 20);
		等待(2, 无视条件);
		开始镜头(事件玩家, 矢量(18.049, 6.380, -46.225), 矢量(17.925, 1.425, -59.415), 0);
		等待(1.500, 无视条件);
		开始镜头(事件玩家, 矢量(16.014, 7.207, 31.555), 矢量(15.999, 2.841, 42.818), 0);
		等待(0.100, 无视条件);
		播放效果(事件玩家, 状态爆炸声音, 颜色(白色), 矢量(15.999, 2.841, 42.818), 20);
		等待(2, 无视条件);
		开始镜头(事件玩家, 矢量(17.908, 3.928, -84.200), 矢量(17.960, 3.442, -74.503), 0);
		等待(0.010, 无视条件);
		等待(1.500, 无视条件);
		开始镜头(事件玩家, 矢量(16.023, 3.395, 70.622), 矢量(16.005, 3.523, 59.982), 0);
		等待(0.100, 无视条件);
		播放效果(事件玩家, 状态爆炸声音, 颜色(白色), 矢量(16.005, 3.523, 59.982), 20);
		等待(2, 无视条件);
		开始镜头(事件玩家, 矢量(-10.323, 7.791, -37.121), 矢量(2.752, 7.566, -36.844), 0);
		等待(1.500, 无视条件);
		开始镜头(事件玩家, 矢量(44.154, 8.047, 23.296), 矢量(31.769, 7.790, 23.058), 0);
		等待(0.100, 无视条件);
		播放效果(事件玩家, 状态爆炸声音, 颜色(白色), 矢量(31.769, 7.790, 23.058), 20);
		等待(2, 无视条件);
		传送(事件玩家, 矢量(15.941, 2.550, 107.076));
		设置朝向(事件玩家, 矢量(0, 0, -1), 至地图);
		开始镜头(事件玩家, 矢量(11.269, 4.031, -100.196), 矢量(10.909, -9.784, -100.195), 0);
		等待(1, 无视条件);
		
		开始镜头(事件玩家, 矢量(22.881, 2.856, 101.575), 矢量(22.887, -11.214, 102.088), 0);
		等待(0.100, 无视条件);
		播放效果(事件玩家, 状态爆炸声音, 颜色(白色), 矢量(22.887, -11.214, 102.088), 20);
		等待(1, 无视条件);
		开始镜头(事件玩家, 矢量(20.984, 3.218, 101.796), 矢量(16.601, -15.152, 106.101), 0.500);
		等待(0.800, 无视条件);
		开始镜头(事件玩家, 矢量(20.996, 2.712, 102.063), 矢量(13.628, 2.420, 107.012), 1);
		等待(5, 无视条件);
		事件玩家.I = 假;
		停止镜头(事件玩家);
		事件玩家.T = 真;
		清除状态(事件玩家, 定身);
		事件玩家.M = 真;
		
	}
}

规则("outro *")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		事件玩家.Z == 1;
	}

	动作
	{
		事件玩家.Z = 2;
		事件玩家.W = 真;
		消除效果(事件玩家.E[5]);
		消除效果(事件玩家.E[6]);
		传送(事件玩家, 矢量(17.989, 55.109, -38.139));
		设置朝向(事件玩家, 矢量(0, 0, 1), 至地图);
		全局.W = 真;
		设置状态(事件玩家, 无, 定身, 9999);
		开始调整玩家大小(事件玩家, 5, 真);
		
		设置慢动作(30);
		开始镜头(事件玩家, 矢量(16.857, 11.035, 5.042), 矢量(17.989, 42.058, -38.530), 0);
		大字体信息(所有玩家(所有队伍), 字符串("{0} {1} {2}", 英雄图标字符串(所用英雄(事件玩家)), 事件玩家, 字符串("{0}！", 字符串("胜者"))));
		等待(0.200, 无视条件);
		开始镜头(事件玩家, 矢量(17.766, 42.749, -24.529), 矢量(18.347, 74.035, -50.320), 2);
		等待(0.300, 无视条件);
		交流(事件玩家, 表情（上）);
		开始镜头(事件玩家, 矢量(49.025, 26.519, -15.332), 矢量(15.671, 68.633, -48.866), 3);
		等待(0.500, 无视条件);
		开始镜头(事件玩家, 矢量(43.619, 48.060, -32.921), 矢量(8.240, 64.093, -39.990), 3);
		等待(0.500, 无视条件);
		开始镜头(事件玩家, 矢量(26.423, 55.639, -36.318), 矢量(14.422, 59.170, -38.932), 3);
		等待(3, 无视条件);
		设置启用终极技能(事件玩家, 真);
		设置终极技能充能(事件玩家, 100);
		等待(0.100, 无视条件);
		按下按键(事件玩家, 按钮(终极技能));
		开始朝向(事件玩家, 矢量(0.500, 0, 0), 30, 至玩家, 方向及角速率);
		等待(0.200, 无视条件);
		大字体信息(事件玩家, 字符串("{0}！", 字符串("恭喜")));
		开始镜头(事件玩家, 矢量(65.338, 57.360, -27.773), 矢量(24.921, 59.218, -36.309), 3);
		等待(0.500, 无视条件);
		按下按键(事件玩家, 按钮(终极技能));
		等待(0.500, 无视条件);
		按下按键(事件玩家, 按钮(终极技能));
		等待(0.500, 无视条件);
		按下按键(事件玩家, 按钮(终极技能));
		等待(0.500, 无视条件);
		按下按键(事件玩家, 按钮(终极技能));
		等待(0.500, 无视条件);
		按下按键(事件玩家, 按钮(终极技能));
		等待(0.500, 无视条件);
		If(所用英雄(事件玩家) != 英雄(禅雅塔));
			设置启用终极技能(事件玩家, 假);
		End;
		设置慢动作(100);
		等待(3, 无视条件);
		全局.K = 假;
		停止镜头(事件玩家);
		停止朝向(事件玩家);
		创建效果(所有玩家(所有队伍), 火花, 颜色(亮紫色), 事件玩家, 1.500, 可见，位置和半径);
		事件玩家.E[3] = 最后创建的实体;
		创建效果(所有玩家(所有队伍), 火花, 颜色(橙色), 事件玩家, 1.500, 可见，位置和半径);
		事件玩家.E[4] = 最后创建的实体;
		停止调整玩家大小(事件玩家);
		全局.W = 假;
		清除状态(事件玩家, 定身);
		等待(10, 无视条件);
		播放效果(事件玩家, 状态爆炸声音, 颜色(白色), 事件玩家, 10);
		消除HUD文本(事件玩家.AA);
		等待(0.250, 无视条件);
		创建HUD文本(事件玩家, 图标字符串(对号), 自定义字符串("Try other maps!"), 自定义字符串("bit.do/whereisit "), 顶部, 1, 颜色(灰绿色), 颜色(白色), 颜色(灰绿色), 字符串, 默认可见度);
		事件玩家.AA = 上一个文本ID;
		等待(90, 无视条件);
		事件玩家.W = 假;
		事件玩家.Z = 0;
		消除效果(事件玩家.E[3]);
		消除效果(事件玩家.E[4]);
		
		禁用 小字体信息(事件玩家, 字符串("{0} {1}", 事件玩家, 字符串("不可见")));
	}
}

规则("all objects *")
{
	事件
	{
		持续 - 全局;
	}

	动作
	{
		全局.N = 0;
		全局.N += 1;
		全局.C[全局.N] = 矢量(17.940, 2.215, 78.127);
		全局.D[全局.N] = 矢量(17.889, 2.237, 77.894);
		全局.N += 1;
		全局.C[全局.N] = 矢量(-11.659, 5.928, 27.775);
		全局.D[全局.N] = 矢量(-12.080, 6.137, 27.675);
		全局.N += 1;
		全局.C[全局.N] = 矢量(33.425, -2.041, 32.836);
		全局.D[全局.N] = 矢量(32.683, -1.535, 33.075);
		全局.N += 1;
		全局.C[全局.N] = 矢量(-7.105, 3.063, 59.666);
		全局.D[全局.N] = 矢量(-8.436, 3.878, 59.660);
		全局.N += 1;
		全局.C[全局.N] = 矢量(32.169, 1.911, 6.515);
		全局.D[全局.N] = 矢量(31.539, 1.888, 6.529);
		全局.N += 1;
		全局.C[全局.N] = 矢量(17.989, 3.809, -109.932);
		全局.D[全局.N] = 矢量(17.987, 2.866, -109.470);
		全局.N += 1;
		全局.C[全局.N] = 矢量(43.789, 7.614, -36.610);
		全局.D[全局.N] = 矢量(45.469, 7.614, -36.628);
		全局.N += 1;
		全局.C[全局.N] = 矢量(33.602, 1.079, -92.724);
		全局.D[全局.N] = 矢量(33.610, 1.438, -92.732);
		全局.N += 1;
		全局.C[全局.N] = 矢量(14.218, 0.985, -6.976);
		全局.D[全局.N] = 矢量(13.941, 0.453, -6.978);
		全局.N += 1;
		全局.C[全局.N] = 矢量(5.178, 2.225, 41.410);
		全局.D[全局.N] = 矢量(5.039, 2.022, 41.190);
		全局.N += 1;
		全局.C[全局.N] = 矢量(16.138, 7.023, 98.032);
		全局.D[全局.N] = 矢量(16.023, 2.645, 98.031);
		全局.N += 1;
		全局.C[全局.N] = 矢量(-11.126, 6.214, 24.367);
		全局.D[全局.N] = 矢量(-11.123, 6.094, 24.362);
		全局.N += 1;
		全局.C[全局.N] = 矢量(18.509, 0.055, -5.597);
		全局.D[全局.N] = 矢量(19.283, -0.160, -4.831);
		全局.N += 1;
		全局.C[全局.N] = 矢量(30.030, -2.531, -46.952);
		全局.D[全局.N] = 矢量(29.848, -2.901, -46.772);
		全局.N += 1;
		全局.C[全局.N] = 矢量(-12.346, 9.085, -51.828);
		全局.D[全局.N] = 矢量(-10.345, 8.929, -51.934);
		全局.N += 1;
		全局.C[全局.N] = 矢量(37.703, -1.675, 35.398);
		全局.D[全局.N] = 矢量(37.713, -2.007, 35.196);
		全局.N += 1;
		全局.C[全局.N] = 矢量(-7.354, 4.364, 61.259);
		全局.D[全局.N] = 矢量(-7.528, 4.424, 61.413);
		全局.N += 1;
		全局.C[全局.N] = 矢量(17.551, 4.085, 109.313);
		全局.D[全局.N] = 矢量(17.548, 4.251, 109.562);
		全局.N += 1;
		全局.C[全局.N] = 矢量(4.442, 1.115, 42.892);
		全局.D[全局.N] = 矢量(4.758, 1.112, 42.800);
		全局.N += 1;
		全局.C[全局.N] = 矢量(27.488, 1.017, -19.680);
		全局.D[全局.N] = 矢量(27.376, 0.682, -19.514);
		全局.N += 1;
		全局.C[全局.N] = 矢量(38.132, 6.378, -40.113);
		全局.D[全局.N] = 矢量(37.965, 6.505, -39.942);
		全局.N += 1;
		全局.C[全局.N] = 矢量(-11.356, 5.024, 23.669);
		全局.D[全局.N] = 矢量(-11.405, 5.743, 23.668);
		全局.N += 1;
		全局.C[全局.N] = 矢量(27.290, 2.375, 104.104);
		全局.D[全局.N] = 矢量(27.038, 2.448, 104.432);
		全局.N += 1;
		全局.C[全局.N] = 矢量(1.598, 3.658, 52.792);
		全局.D[全局.N] = 矢量(1.241, 3.714, 53.060);
		全局.N += 1;
		全局.C[全局.N] = 矢量(46.467, 2.326, -45.638);
		全局.D[全局.N] = 矢量(46.650, 2.334, -45.876);
		全局.N += 1;
		全局.C[全局.N] = 矢量(44.692, 6.737, 37.018);
		全局.D[全局.N] = 矢量(43.695, 7.775, 37.023);
		全局.N += 1;
		全局.C[全局.N] = 矢量(34.339, 6.825, -24.520);
		全局.D[全局.N] = 矢量(34.118, 6.144, -24.295);
		全局.N += 1;
		全局.C[全局.N] = 矢量(1.463, -1.842, 36.943);
		全局.D[全局.N] = 矢量(1.460, -1.771, 37.075);
		全局.N += 1;
		全局.C[全局.N] = 矢量(17.938, 2.735, -51.905);
		全局.D[全局.N] = 矢量(17.940, 1.207, -51.984);
		全局.N += 1;
		全局.C[全局.N] = 矢量(17.184, 1.310, -33.768);
		全局.D[全局.N] = 矢量(17.388, 1.461, -33.928);
		全局.N += 1;
		全局.C[全局.N] = 矢量(16.222, 15.139, 11.356);
		全局.D[全局.N] = 矢量(16.226, 15.528, 14.058);
		全局.N += 1;
		全局.C[全局.N] = 矢量(20.902, 10.759, 91.063);
		全局.D[全局.N] = 矢量(22.612, 10.768, 91.059);
		全局.N += 1;
		全局.C[全局.N] = 矢量(40.736, -2.486, 33.183);
		全局.D[全局.N] = 矢量(41.037, -2.501, 32.935);
		全局.N += 1;
		全局.C[全局.N] = 矢量(35.830, 5.716, 4.730);
		全局.D[全局.N] = 矢量(36.229, 6.055, 4.863);
		全局.N += 1;
		全局.C[全局.N] = 矢量(29.576, 2.081, -109.082);
		全局.D[全局.N] = 矢量(29.008, 2.128, -109.116);
		全局.N += 1;
		全局.C[全局.N] = 矢量(-0.066, 3.538, -17.598);
		全局.D[全局.N] = 矢量(-0.061, 6.588, -17.349);
		全局.N += 1;
		全局.C[全局.N] = 矢量(-10.920, 8.817, 49.902);
		全局.D[全局.N] = 矢量(-10.545, 8.702, 50.054);
		全局.N += 1;
		全局.C[全局.N] = 矢量(22.650, 6.443, 75.762);
		全局.D[全局.N] = 矢量(23.447, 5.991, 75.473);
		全局.N += 1;
		全局.C[全局.N] = 矢量(12.228, 9.498, -6.981);
		全局.D[全局.N] = 矢量(13.666, 9.560, -6.991);
		全局.N += 1;
		全局.C[全局.N] = 矢量(-28.413, 7.658, -4.598);
		全局.D[全局.N] = 矢量(-25.941, 8.951, -4.587);
		全局.N += 1;
		全局.C[全局.N] = 矢量(24.510, -2.692, 32.746);
		全局.D[全局.N] = 矢量(24.201, -2.470, 33.495);
		全局.N += 1;
		全局.C[全局.N] = 矢量(43.010, 3.846, -67.407);
		全局.D[全局.N] = 矢量(43.027, 4.084, -67.382);
		全局.N += 1;
		全局.C[全局.N] = 矢量(19.455, 14.836, 46.386);
		全局.D[全局.N] = 矢量(18.081, 14.405, 46.387);
		全局.N += 1;
		全局.C[全局.N] = 矢量(38.669, 3.329, 23.616);
		全局.D[全局.N] = 矢量(39.187, 3.238, 23.327);
		全局.N += 1;
		全局.C[全局.N] = 矢量(15.066, 16.364, -112.076);
		全局.D[全局.N] = 矢量(13.772, 15.464, -111.414);
		全局.N += 1;
		全局.C[全局.N] = 矢量(16.993, 7.279, 6.542);
		全局.D[全局.N] = 矢量(17.177, 7.192, 6.802);
		全局.N += 1;
		全局.C[全局.N] = 矢量(44.877, -4.020, -15.514);
		全局.D[全局.N] = 矢量(45.369, -4.825, -15.054);
		全局.N += 1;
		全局.C[全局.N] = 矢量(4.833, 14.666, -69.713);
		全局.D[全局.N] = 矢量(8.010, 15.868, -66.996);
		全局.N += 1;
		全局.C[全局.N] = 矢量(-8.512, 6.048, -22.568);
		全局.D[全局.N] = 矢量(-9.047, 6.458, -22.317);
		全局.N += 1;
		全局.C[全局.N] = 矢量(15.986, 4.547, 88.049);
		全局.D[全局.N] = 矢量(15.969, 4.658, 87.459);
	}
}

规则("total number of objects")
{
	事件
	{
		持续 - 全局;
	}

	动作
	{
		全局.O = 全局.N;
	}
}

规则("beginning of the game *")
{
	事件
	{
		持续 - 全局;
	}

	动作
	{
		全局.K = 假;
		全局.V = 30;
		修改全局变量(J, 添加至数组, 5);
		修改全局变量(J, 添加至数组, 10);
		修改全局变量(J, 添加至数组, 15);
		修改全局变量(J, 添加至数组, 20);
		修改全局变量(J, 添加至数组, 25);
		修改全局变量(J, 添加至数组, 30);
		修改全局变量(J, 添加至数组, 35);
		修改全局变量(J, 添加至数组, 40);
		修改全局变量(J, 添加至数组, 45);
		修改全局变量(J, 添加至数组, 50);
		全局.Y = 30;
		全局.W = 假;
		全局.U = 假;
		全局.M = 假;
		全局.R[1] = 假;
		全局.R[3] = 0;
		全局.D[0] = 矢量(0, -50, 0);
		全局.AA = 1;
		设置比赛时间(3600);
		关闭游戏预设完成条件;
		关闭游戏预设计分模式;
	}
}

规则("player spawn *")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		已重生(事件玩家) == 真;
		是否是机器人(事件玩家) == 假;
	}

	动作
	{
		隐藏英雄HUD(事件玩家);
		隐藏游戏模式HUD(事件玩家);
		事件玩家.F = 0;
		传送(事件玩家, 矢量(15.941, 2.550, 107.076));
		设置启用技能 1(事件玩家, 假);
		设置启用技能 2(事件玩家, 假);
		事件玩家.I = 真;
		事件玩家.G = 5;
		事件玩家.N = 1;
		事件玩家.U = 假;
		事件玩家.V = 假;
		事件玩家.R = 假;
		事件玩家.W = 假;
		事件玩家.O = 假;
		事件玩家.Z = 0;
		事件玩家.X = 假;
		事件玩家.L = 假;
		根据条件跳过(全局.R[2] >= 3, 2);
		全局.R[2] += 1;
		全局.R[1] = 真;
		创建效果(事件玩家, 有益光环, 颜色(橙色), 全局.D[事件玩家.F], 2, 可见，位置和半径);
		事件玩家.E[5] = 最后创建的实体;
		创建效果(事件玩家, 火花, 颜色(橙色), 全局.D[事件玩家.F], 3, 可见，位置和半径);
		事件玩家.E[6] = 最后创建的实体;
		创建HUD文本(事件玩家, 字符串("{0} {1}", 图标字符串(方块), 事件玩家.N), 无, 无, 左边, 1, 颜色(橙色), 颜色(白色), 颜色(白色), 可见和字符串, 默认可见度);
		事件玩家.E[7] = 最后创建的实体;
		创建HUD文本(事件玩家, 无, 无, 字符串("对象"), 左边, 0, 颜色(白色), 颜色(白色), 颜色(橙色), 可见和字符串, 默认可见度);
		事件玩家.E[8] = 最后创建的实体;
		
		设置状态(事件玩家, 无, 无敌, 9999);
		事件玩家.S = 150;
		根据条件跳过(全局.L[1] != 无, 2);
		全局.L[1] = 事件玩家;
		中止;
		根据条件跳过(全局.L[2] != 无, 2);
		全局.L[2] = 事件玩家;
		中止;
		根据条件跳过(全局.L[3] != 无, 2);
		全局.L[3] = 事件玩家;
		中止;
	}
}

规则("infinite match time")
{
	事件
	{
		持续 - 全局;
	}

	条件
	{
		比赛时间 <= 1800;
	}

	动作
	{
		设置比赛时间(3600);
	}
}

规则("player pressed \"F\" key on the empty place")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		按钮被按下(事件玩家, 按钮(互动)) == 真;
		相距距离(事件玩家, 全局.D[事件玩家.F]) > 5;
		相距距离(事件玩家, 全局.D[事件玩家.F + 1]) > 5;
		事件玩家.I == 假;
		事件玩家.T == 假;
		具有状态(事件玩家, 冰冻) == 假;
		事件玩家.F < 全局.O;
		全局.K == 假;
		事件玩家.X == 假;
	}

	动作
	{
		小字体信息(事件玩家, 字符串("{0} {1}", 字符串("否"), 字符串("物品")));
		播放效果(事件玩家, 负面状态施加声音, 颜色(白色), 事件玩家, 30);
		设置状态(事件玩家, 无, 冰冻, 1);
	}
}

规则("player found item")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		按钮被按下(事件玩家, 按钮(互动)) == 真;
		相距距离(事件玩家, 全局.D[事件玩家.F + 1]) <= 5;
		具有状态(事件玩家, 冰冻) == 假;
		事件玩家.F < 全局.O;
		全局.K == 假;
		事件玩家.X == 假;
	}

	动作
	{
		小字体信息(事件玩家, 字符串("{0}！", 字符串("好")));
		播放效果(事件玩家, 环状爆炸, 颜色(橙色), 全局.D[事件玩家.F + 1], 5);
		播放效果(事件玩家, 环状爆炸, 颜色(橙色), 全局.D[事件玩家.F + 1], 7);
		播放效果(事件玩家, 正面状态施加声音, 颜色(白色), 事件玩家, 50);
		事件玩家.F += 1;
		事件玩家.K = 3;
		事件玩家.U = 真;
		事件玩家.G = 10;
		根据条件跳过(事件玩家.F == 全局.J[10], 11);
		根据条件跳过(事件玩家.F == 全局.J[9], 10);
		根据条件跳过(事件玩家.F == 全局.J[8], 9);
		根据条件跳过(事件玩家.F == 全局.J[7], 8);
		根据条件跳过(事件玩家.F == 全局.J[6], 7);
		根据条件跳过(事件玩家.F == 全局.J[5], 6);
		根据条件跳过(事件玩家.F == 全局.J[4], 5);
		根据条件跳过(事件玩家.F == 全局.J[3], 4);
		根据条件跳过(事件玩家.F == 全局.J[2], 3);
		根据条件跳过(事件玩家.F == 全局.J[1], 2);
		事件玩家.U = 假;
		事件玩家.T = 真;
		等待(1, 无视条件);
		播放效果(事件玩家, 正面状态施加声音, 颜色(白色), 事件玩家, 50);
		大字体信息(事件玩家, 字符串("{0} / {1}", 事件玩家.F, 全局.O));
		根据条件跳过(事件玩家.F != 2, 1);
		事件玩家.R = 真;
		根据条件跳过(事件玩家.F < 全局.O, 1);
		事件玩家.N = 事件玩家.F;
		根据条件跳过(事件玩家.F == 全局.O, 1);
		事件玩家.N = 事件玩家.F + 1;
	}
}

规则("shift key is pressed (acceleration)")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		按钮被按下(事件玩家, 按钮(技能1)) == 真;
	}

	动作
	{
		设置移动速度(事件玩家, 事件玩家.S);
	}
}

规则("shift key is not pressed (slowdown)")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		按钮被按下(事件玩家, 按钮(技能1)) == 假;
	}

	动作
	{
		设置移动速度(事件玩家, 110);
	}
}

规则("spacebar is pressed (fly)")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		按钮被按下(事件玩家, 按钮(跳跃)) == 真;
		事件玩家.F >= 全局.Y;
	}

	动作
	{
		设置引力(事件玩家, 0);
	}
}

规则("spacebar is not pressed (gravity)")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		按钮被按下(事件玩家, 按钮(跳跃)) == 假;
		事件玩家.F >= 全局.Y;
	}

	动作
	{
		设置引力(事件玩家, 100);
	}
}

规则("right click shows picture")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		按钮被按下(事件玩家, 按钮(辅助攻击模式)) == 真;
		事件玩家.I == 假;
		事件玩家.Z == 0;
		事件玩家.X == 假;
	}

	动作
	{
		根据条件跳过(事件玩家.F < 全局.O, 1);
		事件玩家.N = 事件玩家.F;
		根据条件跳过(事件玩家.F == 全局.O, 1);
		事件玩家.N = 事件玩家.F + 1;
		开始镜头(事件玩家, 全局.C[事件玩家.N], 全局.D[事件玩家.N], 0);
		事件玩家.T = 假;
		根据条件跳过(事件玩家.U == 假, 1);
		事件玩家.O = 真;
		根据条件跳过(事件玩家.G > 0, 3);
		根据条件跳过(相距距离(所选位置(事件玩家), 全局.D[事件玩家.F + 1]) < 50, 1);
		小字体信息(事件玩家, 字符串("{0} {1} {2}", 字符串("对象"), 字符串("远"), 图标字符串(停止)));
		事件玩家.G = 1;
	}
}

规则("right mouse button is not pressed")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		按钮被按下(事件玩家, 按钮(辅助攻击模式)) == 假;
		事件玩家.I == 假;
		事件玩家.Z == 0;
		事件玩家.X == 假;
	}

	动作
	{
		停止镜头(事件玩家);
		清除状态(事件玩家, 定身);
		根据条件跳过(事件玩家.U == 假, 1);
		事件玩家.O = 真;
		根据条件跳过(事件玩家.F < 全局.O, 1);
		事件玩家.N = 事件玩家.F;
		根据条件跳过(事件玩家.F == 全局.O, 1);
		事件玩家.N = 事件玩家.F + 1;
	}
}

规则("left mouse button shows previous objects")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		按钮被按下(事件玩家, 按钮(主要攻击模式)) == 真;
		按钮被按下(事件玩家, 按钮(辅助攻击模式)) == 真;
		事件玩家.I == 假;
		事件玩家.X == 假;
		事件玩家.Z == 0;
	}

	动作
	{
		事件玩家.N -= 1;
		根据条件跳过(事件玩家.N > 0, 4);
		根据条件跳过(事件玩家.F == 全局.O, 1);
		事件玩家.N = 事件玩家.F + 1;
		根据条件跳过(事件玩家.F != 全局.O, 1);
		事件玩家.N = 事件玩家.F;
	}
}

规则("player found all objects (victory!)")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		事件玩家.F == 全局.O;
	}

	动作
	{
		事件玩家.Z = 5;
		设置状态(事件玩家, 无, 定身, 9999);
		播放效果(事件玩家, 环状爆炸声音, 颜色(白色), 事件玩家, 30);
		播放效果(事件玩家, 环状爆炸, 颜色(亮紫色), 全局.D[事件玩家.F], 6);
		播放效果(事件玩家, 有益爆炸, 颜色(橙色), 全局.D[事件玩家.F], 10);
		播放效果(事件玩家, 有益选择效果 , 颜色(橙色), 全局.D[事件玩家.F], 10);
		全局.K = 真;
		等待(3, 无视条件);
		事件玩家.Z = 1;
	}
}

规则("everyone is watching the winner *")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		事件玩家.W == 假;
		事件玩家.Z == 0;
		全局.W == 真;
		事件玩家.F >= 2;
	}

	动作
	{
		设置状态(事件玩家, 无, 定身, 9999);
		事件玩家.X = 真;
		开始镜头(事件玩家, 矢量(16.857, 11.035, 5.042), 矢量(17.989, 42.058, -38.530), 0);
		等待(0.200, 无视条件);
		开始镜头(事件玩家, 矢量(17.766, 42.749, -24.529), 矢量(18.347, 74.035, -50.320), 2);
		等待(0.300, 无视条件);
		开始镜头(事件玩家, 矢量(49.025, 26.519, -15.332), 矢量(15.671, 68.633, -48.866), 3);
		等待(0.500, 无视条件);
		开始镜头(事件玩家, 矢量(43.619, 48.060, -32.921), 矢量(8.240, 64.093, -39.990), 3);
		等待(0.500, 无视条件);
		开始镜头(事件玩家, 矢量(26.423, 55.639, -36.318), 矢量(14.422, 59.170, -38.932), 3);
		等待(3, 无视条件);
		等待(0.100, 无视条件);
		等待(0.200, 无视条件);
		开始镜头(事件玩家, 矢量(65.338, 57.360, -27.773), 矢量(24.921, 59.218, -36.309), 3);
		等待(0.500, 无视条件);
		等待(0.500, 无视条件);
		等待(0.500, 无视条件);
		等待(0.500, 无视条件);
		等待(0.500, 无视条件);
		等待(0.500, 无视条件);
		等待(3, 无视条件);
		全局.K = 假;
		清除状态(事件玩家, 定身);
		全局.W = 假;
		停止镜头(事件玩家);
		事件玩家.X = 假;
	}
}

规则("automatically show next object")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		事件玩家.T == 真;
		事件玩家.U == 假;
	}

	动作
	{
		等待(3, 无视条件);
		如条件为“假”则中止;
		事件玩家.Q = 真;
		设置状态(事件玩家, 无, 定身, 5);
		开始镜头(事件玩家, 全局.C[事件玩家.F + 1], 全局.D[事件玩家.F + 1], 0);
		根据条件跳过(事件玩家.F != 0, 1);
		大字体信息(事件玩家, 字符串("{0} {1}", 字符串("寻找"), 字符串("对象")));
		根据条件跳过(事件玩家.F == 0, 1);
		大字体信息(事件玩家, 字符串("{0} {1}", 字符串("寻找"), 字符串("下一批对象")));
		等待(5, 无视条件);
		事件玩家.T = 假;
		停止镜头(事件玩家);
		事件玩家.Q = 假;
	}
}

规则("cancel auto preview")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		事件玩家.T == 真;
		事件玩家.Q == 真;
		事件玩家.Z == 0;
		事件玩家.X == 假;
	}

	动作
	{
		根据条件跳过(按钮被按下(事件玩家, 按钮(主要攻击模式)) != 真, 4);
		事件玩家.T = 假;
		清除状态(事件玩家, 定身);
		停止镜头(事件玩家);
		事件玩家.Q = 假;
		根据条件跳过(按钮被按下(事件玩家, 按钮(辅助攻击模式)) != 真, 4);
		事件玩家.T = 假;
		清除状态(事件玩家, 定身);
		停止镜头(事件玩家);
		事件玩家.Q = 假;
		根据条件跳过(按钮被按下(事件玩家, 按钮(跳跃)) != 真, 4);
		事件玩家.T = 假;
		清除状态(事件玩家, 定身);
		停止镜头(事件玩家);
		事件玩家.Q = 假;
		根据条件跳过(按钮被按下(事件玩家, 按钮(终极技能)) != 真, 4);
		事件玩家.T = 假;
		清除状态(事件玩家, 定身);
		停止镜头(事件玩家);
		事件玩家.Q = 假;
		根据条件跳过(按钮被按下(事件玩家, 按钮(技能2)) != 真, 4);
		事件玩家.T = 假;
		清除状态(事件玩家, 定身);
		停止镜头(事件玩家);
		事件玩家.Q = 假;
	}
}

规则("hint near the first object *")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		相距距离(事件玩家, 全局.D[1]) <= 5;
		事件玩家.F == 0;
	}

	动作
	{
		小字体信息(事件玩家, 字符串("{0} {1} {2}", 字符串("互动"), 字符串("{0}！", 字符串("此处")), 字符串("({0})", 输入绑定字符串(按钮(互动)))));
	}
}

规则("message about right button")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		事件玩家.M == 真;
	}

	动作
	{
		等待(9, 无视条件);
		小字体信息(事件玩家, 字符串("{0} {1}", 字符串("{0} - {1}", 输入绑定字符串(按钮(辅助攻击模式)), 字符串("当前目标")), 图标字符串(眼睛)));
		事件玩家.M = 假;
	}
}

规则("message about running")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		事件玩家.R == 真;
	}

	动作
	{
		等待(8, 无视条件);
		小字体信息(事件玩家, 字符串("{0} {1}", 字符串("{0} - {1}", 自定义字符串("[Shift]"), 字符串("运行")), 图标字符串(箭矢)));
		事件玩家.R = 假;
	}
}

规则("message about flying")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		事件玩家.F == 全局.Y;
	}

	动作
	{
		等待(8, 无视条件);
		小字体信息(事件玩家, 字符串("{0} {1}", 字符串("{0} - {1}", 字符串("跳跃"), 字符串("飞行")), 图标字符串(光晕)));
		等待(30, 无视条件);
		如条件为“假”则中止;
		小字体信息(事件玩家, 字符串("{0} {1}", 字符串("{0} - {1}", 字符串("跳跃"), 字符串("飞行")), 图标字符串(光晕)));
		等待(30, 无视条件);
		如条件为“假”则中止;
		小字体信息(事件玩家, 字符串("{0} {1}", 字符串("{0} - {1}", 字符串("跳跃"), 字符串("飞行")), 图标字符串(光晕)));
		等待(30, 无视条件);
		如条件为“假”则中止;
		小字体信息(事件玩家, 字符串("{0} {1}", 字符串("{0} - {1}", 字符串("跳跃"), 字符串("飞行")), 图标字符串(光晕)));
		等待(30, 无视条件);
		如条件为“假”则中止;
		小字体信息(事件玩家, 字符串("{0} {1}", 字符串("{0} - {1}", 字符串("跳跃"), 字符串("飞行")), 图标字符串(光晕)));
	}
}

规则("player left game")
{
	事件
	{
		玩家离开比赛;
		双方;
		全部;
	}

	动作
	{
		全局.K = 假;
		消除效果(事件玩家.E[1]);
		消除效果(事件玩家.E[2]);
		消除效果(事件玩家.E[3]);
		消除效果(事件玩家.E[4]);
		消除效果(事件玩家.E[5]);
		消除效果(事件玩家.E[6]);
		消除效果(事件玩家.E[7]);
		消除效果(事件玩家.E[8]);
		根据条件跳过(全局.L[1] != 事件玩家, 1);
		所有玩家(所有队伍).K = 3;
		根据条件跳过(全局.L[2] != 事件玩家, 1);
		所有玩家(所有队伍).K = 3;
		根据条件跳过(全局.L[3] != 事件玩家, 1);
		所有玩家(所有队伍).K = 3;
		设置慢动作(100);
		消除HUD文本(事件玩家.AA);
	}
}

规则("speed upgrade")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		事件玩家.U == 真;
		事件玩家.F != 全局.Y;
		事件玩家.F != 全局.O;
	}

	动作
	{
		播放效果(事件玩家, 环状爆炸, 颜色(天蓝色), 全局.D[事件玩家.F], 6);
		创建光束效果(事件玩家, 有益光束, 全局.D[事件玩家.F], 事件玩家, 颜色(天蓝色), 可见，位置和半径);
		事件玩家.E[1] = 最后创建的实体;
		创建效果(事件玩家, 能量声音, 颜色(白色), 事件玩家, 30, 可见，位置和半径);
		事件玩家.E[2] = 最后创建的实体;
		根据条件跳过(事件玩家.S > 410, 1);
		事件玩家.S += 全局.V;
		等待(1, 无视条件);
		消除效果(事件玩家.E[1]);
		消除效果(事件玩家.E[2]);
		小字体信息(事件玩家, 字符串("{0} {1}", 图标字符串(箭头：向上), 字符串("{0}！", 字符串("等级提升"))));
		大字体信息(事件玩家, 字符串("{0} {1} {2}", 字符串("速度"), 字符串("{0}！", 字符串("升级")), 图标字符串(箭矢)));
		等待(1, 无视条件);
		事件玩家.U = 假;
		根据条件跳过(事件玩家.O == 真, 1);
		事件玩家.T = 真;
		根据条件跳过(事件玩家.O == 假, 1);
		事件玩家.O = 假;
		事件玩家.R = 真;
	}
}

规则("flying upgrade")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		事件玩家.U == 真;
		事件玩家.F == 全局.Y;
	}

	动作
	{
		播放效果(事件玩家, 环状爆炸, 颜色(亮紫色), 全局.D[事件玩家.F], 7);
		创建光束效果(事件玩家, 有益光束, 全局.D[事件玩家.F], 事件玩家, 颜色(橙色), 可见，位置和半径);
		事件玩家.E[1] = 最后创建的实体;
		创建效果(事件玩家, 能量声音, 颜色(白色), 事件玩家, 30, 可见，位置和半径);
		事件玩家.E[2] = 最后创建的实体;
		事件玩家.Y = 真;
		等待(1, 无视条件);
		消除效果(事件玩家.E[1]);
		消除效果(事件玩家.E[2]);
		小字体信息(事件玩家, 字符串("{0} {1}", 图标字符串(箭头：向上), 字符串("{0}！", 字符串("等级提升"))));
		大字体信息(事件玩家, 字符串("{0} {1} {2}", 字符串("飞行"), 字符串("{0}！", 字符串("升级")), 图标字符串(光晕)));
		等待(1, 无视条件);
		事件玩家.U = 假;
		根据条件跳过(事件玩家.O == 真, 1);
		事件玩家.T = 真;
		根据条件跳过(事件玩家.O == 假, 1);
		事件玩家.O = 假;
	}
}

规则("rating")
{
	事件
	{
		持续 - 全局;
	}

	条件
	{
		全局.R[1] == 真;
	}

	动作
	{
		根据条件跳过(全局.R[2] < 1, 4);
		根据条件跳过(全局.R[3] >= 1, 3);
		创建HUD文本(所有玩家(所有队伍), 无, 无, 字符串("{0} {1}", 字符串("最佳"), 字符串("{0}:", 字符串("玩家"))), 右边, 0, 颜色(白色), 颜色(白色), 颜色(橙色), 可见和字符串, 默认可见度);
		创建HUD文本(所有玩家(所有队伍), 无, 无, 字符串("{0} {1} {2}", 英雄图标字符串(所用英雄(全局.L[1])), 全局.L[1], 字符串("{0} / {1}", 全局.L[1].F, 全局.O)), 右边, 1, 颜色(白色),
			颜色(白色), 颜色(白色), 可见和字符串, 默认可见度);
		全局.R[3] = 1;
		根据条件跳过(全局.R[2] < 2, 3);
		根据条件跳过(全局.R[3] >= 2, 2);
		创建HUD文本(所有玩家(所有队伍), 无, 无, 字符串("{0} {1} {2}", 英雄图标字符串(所用英雄(全局.L[2])), 全局.L[2], 字符串("{0} / {1}", 全局.L[2].F, 全局.O)), 右边, 2, 颜色(白色),
			颜色(白色), 颜色(白色), 可见和字符串, 默认可见度);
		全局.R[3] = 2;
		根据条件跳过(全局.R[2] != 3, 3);
		根据条件跳过(全局.R[3] == 3, 2);
		创建HUD文本(所有玩家(所有队伍), 无, 无, 字符串("{0} {1} {2}", 英雄图标字符串(所用英雄(全局.L[3])), 全局.L[3], 字符串("{0} / {1}", 全局.L[3].F, 全局.O)), 右边, 3, 颜色(白色),
			颜色(白色), 颜色(白色), 可见和字符串, 默认可见度);
		全局.R[3] = 3;
		等待(1, 无视条件);
		根据条件循环(全局.R[2] > 全局.R[3]);
		全局.R[1] = 假;
	}
}

规则("rating update")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		事件玩家.K > 0;
	}

	动作
	{
		根据条件跳过(全局.L[1] != 事件玩家, 2);
		事件玩家.K = 0;
		中止;
		根据条件跳过(全局.L[2] != 事件玩家, 5);
		根据条件跳过(事件玩家.F <= 全局.L[1].F, 4);
		全局.L[2] = 全局.L[1];
		全局.L[1] = 事件玩家;
		事件玩家.K = 0;
		中止;
		根据条件跳过(全局.L[3] != 事件玩家, 3);
		根据条件跳过(事件玩家.F <= 全局.L[2].F, 2);
		全局.L[3] = 全局.L[2];
		全局.L[2] = 事件玩家;
		根据条件跳过(全局.L[1] == 事件玩家, 4);
		根据条件跳过(全局.L[2] == 事件玩家, 3);
		根据条件跳过(全局.L[3] == 事件玩家, 2);
		根据条件跳过(事件玩家.F <= 全局.L[3].F, 1);
		全局.L[3] = 事件玩家;
		等待(0.050, 无视条件);
		事件玩家.K -= 1;
		如条件为”真“则循环;
	}
}

规则("search time")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		事件玩家.W == 假;
		事件玩家.G > 0;
	}

	动作
	{
		等待(30, 无视条件);
		事件玩家.G -= 1;
		如条件为”真“则循环;
	}
}

规则("message about previous objects")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		事件玩家.F >= 10;
	}

	动作
	{
		等待(25, 无视条件);
		小字体信息(事件玩家, 字符串("{0} {1}", 字符串("{0} = {1}", 字符串("{0} + {1}", 输入绑定字符串(按钮(辅助攻击模式)), 输入绑定字符串(按钮(主要攻击模式))), 字符串("对象")), 图标字符串(回收)));
	}
}

规则("graphic settings warning 1 *")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		事件玩家.F == 全局.AA;
	}

	动作
	{
		等待(3, 无视条件);
		如条件为“假”则中止;
		消除HUD文本(事件玩家.AA);
		等待(0.250, 无视条件);
		创建HUD文本(事件玩家, 图标字符串(眼睛), 自定义字符串("Set medium or higher model detail settings to see all objects"), 自定义字符串(
			"Options > Video > Graphics quality > Advanced > Model Detail"), 顶部, 1, 颜色(橙色), 颜色(白色), 颜色(橙色), 字符串, 默认可见度);
		事件玩家.AA = 上一个文本ID;
	}
}

规则("graphic settings warning 2 *")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		事件玩家.F == 全局.AA + 1;
	}

	动作
	{
		消除HUD文本(事件玩家.AA);
	}
}