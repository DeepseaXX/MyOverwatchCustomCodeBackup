settings
{
	main
	{
		Description: "숨은물건찾기 McQueen Ver.\r\n제작 : McQueen#31506\r\n코드 : 37NEN\r\n물건 리스트 : 축구공 x8\r\n음료 냉장고 x10\r\n고양이 액자 x3\r\n선풍기 x12\r\n비치볼 x5\r\n수도꼭지 x4\r\n세발자전거 x2\r\n트로피 x2\r\n--싱글 아이템--\r\n마이크\r\n공작 모티브 품목\r\n농구 골대\r\n고장난 오락기\r\nCoxa $40\r\nLED 스탠드 스위치\r\n칼 4개가 꽂힌 품목\r\n'136'"
		Mode Name: "숨은물건찾기 By McQueen"
	}

	lobby
	{
		Map Rotation: Paused
		Max Spectators: 6
		Max Team 1 Players: 0
		Max Team 2 Players: 6
		Return To Lobby: Never
		Swap Teams After Match: No
	}

	modes
	{
		Skirmish
		{
			enabled maps
			{
				Paraíso 0
			}
		}

		General
		{
			Game Mode Start: Immediately
			Hero Limit: Off
			Kill Cam: Off
			Kill Feed: Off
			Respawn Time Scalar: 0%
			Spawn Health Packs: Disabled
		}
	}

	heroes
	{
		General
		{
			Ability Cooldown Time: 50%
			Movement Speed: 110%
			Primary Fire: Off
			Quick Melee: Off
			Receive Headshots Only: On
			Ultimate Generation: 10%
			Ultimate Generation - Combat: 0%
			Ultimate Generation - Passive: 0%

			Ana
			{
				Biotic Grenade: Off
				Primary Fire: Off
				Quick Melee: Off
				Sleep Dart: Off
				Ultimate Ability Nano Boost: Off
			}

			Ashe
			{
				Coach Gun: Off
				Dynamite: Off
				Primary Fire: Off
				Quick Melee: Off
				Ultimate Ability B.O.B.: Off
			}

			Baptiste
			{
				Immortality Field: Off
				Primary Fire: Off
				Quick Melee: Off
				Regenerative Burst: Off
				Secondary Fire: Off
				Ultimate Ability Amplification Matrix: Off
			}

			Bastion
			{
				A-36 Tactical Grenade: Off
				Primary Fire: Off
				Quick Melee: Off
				Reconfigure: Off
				Ultimate Ability Configuration: Artillery: Off
			}

			Brigitte
			{
				Barrier Shield: Off
				Primary Fire: Off
				Quick Melee: Off
				Repair Pack: Off
				Shield Bash: Off
				Ultimate Ability Rally: Off
				Whip Shot: Off
			}

			Cassidy
			{
				Combat Roll: Off
				Magnetic Grenade: Off
				Primary Fire: Off
				Quick Melee: Off
				Secondary Fire: Off
				Ultimate Ability Deadeye: Off
			}

			D.Va
			{
				Boosters: Off
				Defense Matrix: Off
				Micro Missiles: Off
				Primary Fire: Off
				Quick Melee: Off
				Ultimate Ability Self-Destruct: Off
			}

			Doomfist
			{
				Power Block: Off
				Primary Fire: Off
				Quick Melee: Off
				Rocket Punch: Off
				Seismic Slam: Off
				Ultimate Ability Meteor Strike: Off
			}

			Echo
			{
				Flight: Off
				Focusing Beam: Off
				Glide: Off
				Primary Fire: Off
				Quick Melee: Off
				Sticky Bombs: Off
				Ultimate Ability Duplicate: Off
			}

			Genji
			{
				Deflect: Off
				Primary Fire: Off
				Quick Melee: Off
				Secondary Fire: Off
				Swift Strike: Off
				Ultimate Ability Dragonblade: Off
			}

			Hanzo
			{
				Lunge: Off
				Primary Fire: Off
				Quick Melee: Off
				Sonic Arrow: Off
				Storm Arrows: Off
				Ultimate Ability Dragonstrike: Off
			}

			Junker Queen
			{
				Carnage: Off
				Commanding Shout: Off
				Jagged Blade: Off
				Jagged Blade Knockback Scalar: 200%
				Primary Fire: Off
				Quick Melee: Off
				Ultimate Ability Rampage: Off
			}

			Junkrat
			{
				Concussion Mine: Off
				Primary Fire: Off
				Quick Melee: Off
				Steel Trap: Off
				Ultimate Ability RIP-Tire: Off
			}

			Kiriko
			{
				Primary Fire: Off
				Protection Suzu: Off
				Quick Melee: Off
				Secondary Fire: Off
				Swift Step: Off
				Ultimate Ability Kitsune Rush: Off
			}

			Lúcio
			{
				Amp It Up: Off
				Crossfade: Off
				Primary Fire: Off
				Quick Melee: Off
				Soundwave: Off
				Ultimate Ability Sound Barrier: Off
			}

			Mei
			{
				Cryo-Freeze: Off
				Ice Wall: Off
				Primary Fire: Off
				Quick Melee: Off
				Secondary Fire: Off
				Ultimate Ability Blizzard: Off
			}

			Mercy
			{
				Guardian Angel: Off
				Primary Fire: Off
				Quick Melee: Off
				Regeneration: Off
				Resurrect: Off
				Secondary Fire: Off
				Ultimate Ability Valkyrie: Off
			}

			Moira
			{
				Biotic Orb: Off
				Fade: Off
				Primary Fire: Off
				Quick Melee: Off
				Secondary Fire: Off
				Ultimate Ability Coalescence: Off
			}

			Orisa
			{
				Energy Javelin: Off
				Fortify: Off
				Javelin Spin: Off
				Primary Fire: Off
				Quick Melee: Off
				Ultimate Ability Terra Surge: Off
			}

			Pharah
			{
				Concussive Blast: Off
				Hover Jets: Off
				Jump Jet: Off
				Primary Fire: Off
				Quick Melee: Off
				Ultimate Ability Barrage: Off
			}

			Reaper
			{
				Primary Fire: Off
				Quick Melee: Off
				Shadow Step: Off
				Ultimate Ability Death Blossom: Off
				Wraith Form: Off
			}

			Reinhardt
			{
				Barrier Field: Off
				Charge: Off
				Fire Strike: Off
				Primary Fire: Off
				Quick Melee: Off
				Ultimate Ability Earthshatter: Off
			}

			Roadhog
			{
				Chain Hook: Off
				Primary Fire: Off
				Quick Melee: Off
				Secondary Fire: Off
				Take a Breather: Off
				Ultimate Ability Whole Hog: Off
			}

			Sigma
			{
				Accretion: Off
				Experimental Barrier: Off
				Kinetic Grasp: Off
				Primary Fire: Off
				Quick Melee: Off
				Ultimate Ability Gravitic Flux: Off
			}

			Sojourn
			{
				Disruptor Shot: Off
				Power Slide: Off
				Primary Fire: Off
				Quick Melee: Off
				Railgun Alt Fire: Off
				Secondary Fire: Off
				Ultimate Ability Overclock: Off
			}

			Soldier: 76
			{
				Biotic Field: Off
				Helix Rockets: Off
				Primary Fire: Off
				Quick Melee: Off
				Sprint: Off
				Ultimate Ability Tactical Visor: Off
			}

			Sombra
			{
				Hack: Off
				Primary Fire: Off
				Quick Melee: Off
				Stealth: Off
				Translocator: Off
				Ultimate Ability EMP: Off
			}

			Symmetra
			{
				Primary Fire: Off
				Quick Melee: Off
				Secondary Fire: Off
				Sentry Turret: Off
				Teleporter: Off
				Ultimate Ability Photon Barrier: Off
			}

			Torbjörn
			{
				Deploy Turret: Off
				Overload: Off
				Primary Fire: Off
				Quick Melee: Off
				Secondary Fire: Off
				Ultimate Ability Molten Core: Off
			}

			Tracer
			{
				Blink: Off
				Primary Fire: Off
				Quick Melee: Off
				Recall: Off
				Ultimate Ability Pulse Bomb: Off
			}

			Widowmaker
			{
				Grappling Hook: Off
				Primary Fire: Off
				Quick Melee: Off
				Ultimate Ability Infra-Sight: Off
				Venom Mine: Off
			}

			Winston
			{
				Barrier Projector: Off
				Jump Pack: Off
				Primary Fire: Off
				Quick Melee: Off
				Ultimate Ability Primal Rage: Off
			}

			Wrecking Ball
			{
				Adaptive Shield: Off
				Grappling Claw: Off
				Piledriver: Off
				Primary Fire: Off
				Quick Melee: Off
				Roll: Off
				Ultimate Ability Minefield: Off
			}

			Zarya
			{
				No Ammunition Requirement: On
				Particle Barrier: Off
				Primary Fire: Off
				Projected Barrier: Off
				Quick Melee: Off
				Secondary Fire: Off
			}

			Zenyatta
			{
				Orb of Discord: Off
				Orb of Harmony: Off
				Primary Fire: Off
				Quick Melee: Off
				Secondary Fire: Off
			}

			disabled heroes
			{
				Baptiste
				Bastion
				Genji
				Hanzo
				Kiriko
				Sigma
				Winston
				Wrecking Ball
			}
		}
	}
}

variables
{
	player:
		26: AA
		27: AB
}

rule("// Made by McQueen#31361")
{
	event
	{
		Ongoing - Global;
	}
}

rule("beginning of the game")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Set Match Time(3600);
		Global.N = 1;
		Global.G = 0;
		Global.H = Vector(0, -99, 0);
		Global.T = -1;
		Global.Q = 0;
	}
}

rule("축구공 8개")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Global.G += 1;
		Global.I = 0;
		Global.A[Global.N] = Vector(-70.760, 5.110, -167.263);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(-66.985, 5.027, -148.508);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(3.690, 1.072, -123.224);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(-1.730, 0.912, -142.370);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(-3.202, 0.912, -148.700);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(-23.830, 6.291, -80.356);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(-16.970, 6.310, -88.150);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(-25.440, 6.310, -91.160);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.C[Global.G] = Global.I;
	}
}

rule("음료 냉장고 10개")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Global.G += 1;
		Global.I = 0;
		Global.A[Global.N] = Vector(-3.500, 4, -60.422);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(7.600, 2.030, -8.590);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(7.150, 2.030, -9.380);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(-0.230, 1.020, 9.402);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(0.710, 1.020, 8.932);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(-44.330, 1, 1.062);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(-38.330, -0.700, 67.162);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(-22.530, -0.700, 67.262);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(-51.930, 5.800, -172.562);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(-51.200, 5.800, -173.162);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.C[Global.G] = Global.I;
	}
}

rule("고양이 액자 3개")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Global.G += 1;
		Global.I = 0;
		Global.A[Global.N] = Vector(-1.490, 3.800, -0.530);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(-9.510, 3.150, -2.867);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(-7.983, 6.293, 3.380);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.C[Global.G] = Global.I;
	}
}

rule("선풍기 12개")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Global.G += 1;
		Global.I = 0;
		Global.A[Global.N] = Vector(-73.460, 6, -166.380);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(-52.105, 6.127, -164.358);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(23.300, 1.832, -143.994);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(-19.370, 1.802, -106.657);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(-6.182, 3.920, -62.446);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(4.210, 2.301, -23.676);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(-30, 2.040, -27.445);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(-11.920, 1.950, -0.375);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(-1.312, 2, -6.160);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(-2.950, 6.040, 0.040);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(-10.500, 6.158, -2.124);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(-25.933, 1.138, 5.624);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.C[Global.G] = Global.I;
	}
}

rule("비치볼 5개")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Global.G += 1;
		Global.I = 0;
		Global.A[Global.N] = Vector(-35.400, 7.050, -184.930);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(-19.980, 3.430, -50.900);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(-27.820, -2.870, 79.880);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(-57.820, -3.690, 90.830);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(-44.300, -1.690, 64.880);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.C[Global.G] = Global.I;
	}
}

rule("수도꼭지 4개")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Global.G += 1;
		Global.I = 0;
		Global.A[Global.N] = Vector(14.500, 4.410, -71.330);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(-62.428, 5.700, -170.514);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(-38.442, 7.776, -190.220);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(-65.930, 6.086, -184.720);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.C[Global.G] = Global.I;
	}
}

rule("세발자전거 2개")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Global.G += 1;
		Global.I = 0;
		Global.A[Global.N] = Vector(-14.700, 1.300, -42.104);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(-72.751, 5.170, -146.260);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.C[Global.G] = Global.I;
	}
}

rule("트로피 2개")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Global.G += 1;
		Global.I = 0;
		Global.A[Global.N] = Vector(-79.600, 6.140, -176.572);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(8.763, 7.180, -137.832);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.C[Global.G] = Global.I;
	}
}

rule("싱글 아이템 (8개)")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Global.G += 1;
		Global.I = 0;
		Global.A[Global.N] = Vector(-74.350, 6.340, -165.830);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(-33.200, 1.500, 2.560);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(-0.260, 9.720, -149.280);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(-18.130, 2, -156.360);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(11, 5.060, -67.560);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(-71.950, -0.610, 52.770);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(-68.020, 6, -179.840);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(-23.770, 3.740, 32);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.C[Global.G] = Global.I;
	}
}

rule("파라이수 포탈")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Global.P[1] = Vector(-14.100, 6.320, -84.340);
		Create Effect(All Players(All Teams), Ring, Color(Rose), Global.P[1], 1.300, Visible To);
		Global.P[2] = Vector(-11.940, 6.300, -87.590);
		Create Effect(All Players(All Teams), Ring, Color(Rose), Global.P[2], 1.300, Visible To);
		Global.P[3] = Vector(-10.840, 2.200, -22.920);
		Create Effect(All Players(All Teams), Ring, Color(Rose), Global.P[3], 1.300, Visible To);
		Global.P[4] = Vector(-15.600, 2.200, -31.030);
		Create Effect(All Players(All Teams), Ring, Color(Rose), Global.P[4], 1.300, Visible To);
		Global.P[5] = Vector(-30.440, 1.270, -6.170);
		Create Effect(All Players(All Teams), Ring, Color(Rose), Global.P[5], 1.300, Visible To);
		Global.P[6] = Vector(-33.287, 1.270, -4.472);
		Create Effect(All Players(All Teams), Ring, Color(Rose), Global.P[6], 1.300, Visible To);
		Global.P[7] = Vector(8.984, 1.850, -138.316);
		Create Effect(All Players(All Teams), Ring, Color(Rose), Global.P[7], 1.300, Visible To);
		Global.P[8] = Vector(11.419, 1.850, -140.560);
		Create Effect(All Players(All Teams), Ring, Color(Rose), Global.P[8], 1.300, Visible To);
		Global.P[9] = Vector(-55.600, 6.123, -155.990);
		Create Effect(All Players(All Teams), Ring, Color(Rose), Global.P[9], 1.300, Visible To);
		Global.P[10] = Vector(-58.710, 5.846, -159.210);
		Create Effect(All Players(All Teams), Ring, Color(Rose), Global.P[10], 1.300, Visible To);
		Global.P[11] = Vector(-74.153, 6.030, -186.730);
		Global.P[12] = Vector(-36.420, 8.353, -182.519);
		Global.P[13] = Vector(-43.312, 6.564, -178.012);
		Global.P[14] = Vector(-45.371, 6.204, -176.237);
		Global.P[15] = Vector(108.132, 16.834, -107.428);
		Create Effect(All Players(All Teams), Ring, Color(Aqua), Global.P[15], 1.300, Visible To);
		Global.P[16] = Vector(108.129, 16.834, -98.723);
		Create Effect(All Players(All Teams), Ring, Color(Aqua), Global.P[16], 1.300, Visible To);
		Global.P[17] = Vector(222.683, 10.483, 242.027);
		Create Effect(All Players(All Teams), Ring, Color(Rose), Global.P[17], 1.700, Visible To);
	}
}

rule("I=============================================================================")
{
	event
	{
		Ongoing - Global;
	}
}

rule("calculating total number of items")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Global.O == Null;
	}

	actions
	{
		Global.O = Global.N - 1;
	}
}

rule("player found item")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Interact)) == True;
		Has Status(Event Player, Knocked Down) == False;
		Event Player.Z == Null;
	}

	actions
	{
		Skip If(Event Player.L != Null, 1);
		Event Player.L = 1;
		Skip If(Global.A[Event Player.L] == Null, 18);
		Skip If(Event Player.F[Event Player.L] == True, 17);
		Skip If(Distance Between(Event Player, Global.A[Event Player.L]) > 3, 16);
		Event Player.O = Global.X[Event Player.L];
		Event Player.Z = Global.A[Event Player.L];
		Modify Global Variable At Index(D, Event Player.L, Append To Array, Event Player);
		Event Player.K = Global.A[Event Player.L];
		Event Player.Q += 1;
		Event Player.F[Event Player.L] = True;
		Event Player.G[Global.X[Event Player.L]] += 1;
		Event Player.M = Event Player.L;
		Skip If(Event Player.Q == Global.O, 1);
		Small Message(Event Player, String("{0} / {1}", Event Player.G[Global.X[Event Player.M]], Global.C[Global.X[Event Player.M]]));
		Skip If(Event Player.G[Event Player.O] < Global.C[Event Player.O], 4);
		Event Player.A = Global.X[Event Player.L];
		Play Effect(Event Player, Ring Explosion, Color(Rose), Event Player.Z, 7);
		Play Effect(Event Player, Buff Impact Sound, Color(White), Event Player, 30);
		Play Effect(Event Player, Good Pickup Effect, Color(Purple), Event Player.Z, 1);
		Event Player.L = 999;
		Event Player.L += 1;
		Skip If(Event Player.L >= Global.O - 4, 8);
		Skip If(Distance Between(Event Player, Global.A[Event Player.L]) <= 3, 1);
		Event Player.L += 1;
		Skip If(Distance Between(Event Player, Global.A[Event Player.L]) <= 3, 1);
		Event Player.L += 1;
		Skip If(Distance Between(Event Player, Global.A[Event Player.L]) <= 3, 1);
		Event Player.L += 1;
		Skip If(Distance Between(Event Player, Global.A[Event Player.L]) <= 3, 1);
		Event Player.L += 1;
		Wait(0.001, Ignore Condition);
		Skip If(Event Player.L != Global.O + 1, 1);
		Event Player.J = True;
		Loop If(Event Player.L <= Global.O);
		Event Player.L = 1;
	}
}

rule("playing yellow effects")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.Z != Null;
	}

	actions
	{
		Play Effect(Event Player, Ring Explosion, Color(Rose), Event Player.Z, 3);
		Play Effect(Event Player, Buff Impact Sound, Color(White), Event Player, 20);
		Wait(0.250, Ignore Condition);
		Event Player.Z = Null;
		Skip If(Event Player.Q < Global.O, 4);
		Destroy HUD Text(Event Player.W[1]);
		Create HUD Text(All Players(All Teams), Null, Null, String("{0} {1} {2}", String("{0} {1}", Hero Icon String(Hero Of(
			Event Player)), Event Player), Custom String("클리어"), String("{0} / {1}", Event Player.Q, Global.O)), Right,
			101 - Event Player.Q, Color(White), Color(White), Color(Rose), Visible To and String, Default Visibility);
		Event Player.W[1] = Last Text ID;
		Abort;
		Destroy HUD Text(Event Player.W[1]);
		Create HUD Text(All Players(All Teams), Null, Null, String("{0} {1} {2}", String("{0} {1}", Hero Icon String(Hero Of(
			Event Player)), Event Player), Custom String("찾은 개수"), String("{0} / {1}", Event Player.Q, Global.O)), Right,
			101 - Event Player.Q, Color(White), Color(White), Color(White), Visible To and String, Default Visibility);
		Event Player.W[1] = Last Text ID;
	}
}

rule("player spawn")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Has Spawned(Event Player) == True;
	}

	actions
	{
		Disable Game Mode HUD(Event Player);
		Disable Hero HUD(Event Player);
		Set Jump Vertical Speed(Event Player, 140);
		Event Player.Q = 0;
		Modify Global Variable(S, Append To Array, Event Player);
		Event Player.J = False;
		Event Player.T = 0;
		Set Invisible(Event Player, None);
		Event Player.S = 150;
		Set Status(Event Player, Null, Invincible, 9999);
		Create Effect(Event Player, Sparkles, Color(Rose), Event Player.K, 1.300, Visible To Position and Radius);
		Global.T = 0;
		Global.Q = 0;
		Create In-World Text(Event Player, Custom String("♥ Have a good time ! ♥"), Vector(-30.272, 35.330, 233.610), 15,
			Clip Against Surfaces, Visible To and String, Color(Purple), Visible Never);
		Create In-World Text(Event Player, Custom String("- Lightning McQueen -"), Vector(-30.272, 18.500, 233.610), 15,
			Clip Against Surfaces, Visible To and String, Color(Orange), Visible Never);
		Create In-World Text(Event Player, Custom String("Knock Knock"), Vector(-73.552, 8.530, -185.960), 0.500, Clip Against Surfaces,
			Visible To and String, Color(Red), Visible Never);
		Event Player.K = Vector(0, -99, 0);
		Event Player.AB = Last Text ID;
		Wait(15, Ignore Condition);
		Small Message(Event Player, String("{0} - {1}", Custom String("[SHIFT]"), String("Run")));
	}
}

rule("creating HUD text 1-5")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Has Spawned(Event Player) == True;
	}

	actions
	{
		Skip If(Global.G < 1, 2);
		Create HUD Text(Event Player, String("{0} / {1}", Event Player.G[1], Global.C[1]), Null, Custom String("축구공"), Left, 1, Color(Red),
			Color(White), Color(Red), Visible To and String, Visible Never);
		Event Player.E[1] = Last Text ID;
		Skip If(Global.G < 2, 2);
		Create HUD Text(Event Player, String("{0} / {1}", Event Player.G[2], Global.C[2]), Null, Custom String("음료 냉장고"), Left, 2, Color(
			Orange), Color(White), Color(Orange), Visible To and String, Visible Never);
		Event Player.E[2] = Last Text ID;
		Skip If(Global.G < 3, 2);
		Create HUD Text(Event Player, String("{0} / {1}", Event Player.G[3], Global.C[3]), Null, Custom String("고양이 액자"), Left, 3, Color(
			Yellow), Color(White), Color(Yellow), Visible To and String, Visible Never);
		Event Player.E[3] = Last Text ID;
		Skip If(Global.G < 4, 2);
		Create HUD Text(Event Player, String("{0} / {1}", Event Player.G[4], Global.C[4]), Null, Custom String("선풍기"), Left, 4, Color(
			Green), Color(White), Color(Green), Visible To and String, Visible Never);
		Event Player.E[4] = Last Text ID;
		Skip If(Global.G < 5, 2);
		Create HUD Text(Event Player, String("{0} / {1}", Event Player.G[5], Global.C[5]), Null, Custom String("비치볼"), Left, 5, Color(
			Turquoise), Color(White), Color(Turquoise), Visible To and String, Visible Never);
		Event Player.E[5] = Last Text ID;
	}
}

rule("creating HUD text 6-10")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Has Spawned(Event Player) == True;
	}

	actions
	{
		Skip If(Global.G < 6, 2);
		Create HUD Text(Event Player, String("{0} / {1}", Event Player.G[6], Global.C[6]), Null, Custom String("수도꼭지"), Left, 6, Color(
			Aqua), Color(White), Color(Aqua), Visible To and String, Visible Never);
		Event Player.E[6] = Last Text ID;
		Skip If(Global.G < 7, 2);
		Create HUD Text(Event Player, String("{0} / {1}", Event Player.G[7], Global.C[7]), Null, Custom String("세발자전거"), Left, 7, Color(
			Blue), Color(White), Color(Blue), Visible To and String, Visible Never);
		Event Player.E[7] = Last Text ID;
		Skip If(Global.G < 8, 2);
		Create HUD Text(Event Player, String("{0} / {1}", Event Player.G[8], Global.C[8]), Null, Custom String("트로피"), Left, 8, Color(
			Purple), Color(White), Color(Purple), Visible To and String, Visible Never);
		Event Player.E[8] = Last Text ID;
		Skip If(Global.G < 9, 2);
		Create HUD Text(Event Player, String("{0} / {1}", Event Player.G[9], Global.C[9]), Null, Custom String("싱글 아이템 :"), Left, 9, Color(
			Rose), Color(White), Color(Rose), Visible To and String, Visible Never);
		Event Player.E[9] = Last Text ID;
		Create HUD Text(Event Player, Null, Custom String(
			"마이크 (빨강)\r\n공작 모티브 품목 (주황)\r\n농구 골대 (노랑)\r\n고장난 오락기 (청록)\r\nCoxa $40 (하늘)\r\nLED 스탠드 스위치 (아쿠아)\r\n칼 4개가 꽂힌 품목 (바이올렛)\r\n'136' (분홍)"),
			Null, Left, 10, Color(White), Color(White), Color(White), Visible To and String, Visible Never);
		Event Player.E[10] = Last Text ID;
		Event Player.A = 0;
	}
}

rule("all items found (victory!)")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.Q == Global.O;
		Has Spawned(Event Player) == True;
	}

	actions
	{
		Set Invisible(Event Player, None);
		Big Message(All Players(All Teams), String("{0} {1} {2}", Hero Icon String(Hero Of(Event Player)), Event Player, String("{0}!",
			Custom String("클리어"))));
		Play Effect(Event Player, Ring Explosion Sound, Color(White), Event Player, 20);
		Play Effect(Event Player, Good Explosion, Color(Violet), Event Player, 10);
		Play Effect(Event Player, Ring Explosion, Color(Rose), Event Player, 20);
		Global.H = Event Player;
		Communicate(Event Player, Emote Up);
		Set Slow Motion(80);
		Wait(1.500, Ignore Condition);
		Set Slow Motion(100);
		Wait(3, Ignore Condition);
		Small Message(Event Player, String("{0} {1}", Custom String("수고하셨습니다"), String("{0}!", Event Player)));
		Wait(15, Ignore Condition);
		Play Effect(Event Player, Buff Explosion Sound, Color(White), Event Player, 10);
		Destroy HUD Text(Event Player.AA);
		Wait(0.250, Ignore Condition);
		Event Player.AA = Last Text ID;
	}
}

rule("create all 60 effects at the beginning of the match")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Create Effect(All Players(All Teams), Sparkles, Color(Orange), Global.H, 1.500, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Purple), Global.H, 1.500, Visible To Position and Radius);
		Create Effect(Global.D[1], Good Aura, Color(Red), Global.A[1], 0.500, Visible To);
		Create Effect(Global.D[2], Good Aura, Color(Red), Global.A[2], 0.500, Visible To);
		Create Effect(Global.D[3], Good Aura, Color(Red), Global.A[3], 0.500, Visible To);
		Create Effect(Global.D[4], Good Aura, Color(Red), Global.A[4], 0.500, Visible To);
		Create Effect(Global.D[5], Good Aura, Color(Red), Global.A[5], 0.500, Visible To);
		Create Effect(Global.D[6], Good Aura, Color(Red), Global.A[6], 0.500, Visible To);
		Create Effect(Global.D[7], Good Aura, Color(Red), Global.A[7], 0.500, Visible To);
		Create Effect(Global.D[8], Good Aura, Color(Red), Global.A[8], 0.500, Visible To);
		Create Effect(Global.D[9], Good Aura, Color(Orange), Global.A[9], 1, Visible To);
		Create Effect(Global.D[10], Good Aura, Color(Orange), Global.A[10], 1, Visible To);
		Create Effect(Global.D[11], Good Aura, Color(Orange), Global.A[11], 1, Visible To);
		Create Effect(Global.D[12], Good Aura, Color(Orange), Global.A[12], 1, Visible To);
		Create Effect(Global.D[13], Good Aura, Color(Orange), Global.A[13], 1, Visible To);
		Create Effect(Global.D[14], Good Aura, Color(Orange), Global.A[14], 1, Visible To);
		Create Effect(Global.D[15], Good Aura, Color(Orange), Global.A[15], 1, Visible To);
		Create Effect(Global.D[16], Good Aura, Color(Orange), Global.A[16], 1, Visible To);
		Create Effect(Global.D[17], Good Aura, Color(Orange), Global.A[17], 1, Visible To);
		Create Effect(Global.D[18], Good Aura, Color(Orange), Global.A[18], 1, Visible To);
		Create Effect(Global.D[19], Good Aura, Color(Yellow), Global.A[19], 0.500, Visible To);
		Create Effect(Global.D[20], Good Aura, Color(Yellow), Global.A[20], 0.500, Visible To);
		Create Effect(Global.D[21], Good Aura, Color(Yellow), Global.A[21], 0.500, Visible To);
		Create Effect(Global.D[22], Good Aura, Color(Green), Global.A[22], 0.500, Visible To);
		Create Effect(Global.D[23], Good Aura, Color(Green), Global.A[23], 0.500, Visible To);
		Create Effect(Global.D[24], Good Aura, Color(Green), Global.A[24], 0.500, Visible To);
		Create Effect(Global.D[25], Good Aura, Color(Green), Global.A[25], 0.500, Visible To);
		Create Effect(Global.D[26], Good Aura, Color(Green), Global.A[26], 0.500, Visible To);
		Create Effect(Global.D[27], Good Aura, Color(Green), Global.A[27], 0.500, Visible To);
		Create Effect(Global.D[28], Good Aura, Color(Green), Global.A[28], 0.500, Visible To);
		Create Effect(Global.D[29], Good Aura, Color(Green), Global.A[29], 0.500, Visible To);
		Create Effect(Global.D[30], Good Aura, Color(Green), Global.A[30], 0.500, Visible To);
		Create Effect(Global.D[31], Good Aura, Color(Green), Global.A[31], 0.500, Visible To);
		Create Effect(Global.D[32], Good Aura, Color(Green), Global.A[32], 0.500, Visible To);
		Create Effect(Global.D[33], Good Aura, Color(Green), Global.A[33], 0.500, Visible To);
		Create Effect(Global.D[34], Good Aura, Color(Turquoise), Global.A[34], 0.500, Visible To);
		Create Effect(Global.D[35], Good Aura, Color(Turquoise), Global.A[35], 0.500, Visible To);
		Create Effect(Global.D[36], Good Aura, Color(Turquoise), Global.A[36], 0.500, Visible To);
		Create Effect(Global.D[37], Good Aura, Color(Turquoise), Global.A[37], 0.500, Visible To);
		Create Effect(Global.D[38], Good Aura, Color(Turquoise), Global.A[38], 0.500, Visible To);
		Create Effect(Global.D[39], Good Aura, Color(Aqua), Global.A[39], 0.500, Visible To);
		Create Effect(Global.D[40], Good Aura, Color(Aqua), Global.A[40], 0.500, Visible To);
		Create Effect(Global.D[41], Good Aura, Color(Aqua), Global.A[41], 0.500, Visible To);
		Create Effect(Global.D[42], Good Aura, Color(Aqua), Global.A[42], 0.500, Visible To);
		Create Effect(Global.D[43], Good Aura, Color(Blue), Global.A[43], 1, Visible To);
		Create Effect(Global.D[44], Good Aura, Color(Blue), Global.A[44], 1, Visible To);
		Create Effect(Global.D[45], Good Aura, Color(Purple), Global.A[45], 0.800, Visible To);
		Create Effect(Global.D[46], Good Aura, Color(Purple), Global.A[46], 0.800, Visible To);
		Create Effect(Global.D[47], Good Aura, Color(Red), Global.A[47], 0.700, Visible To);
		Create Effect(Global.D[48], Good Aura, Color(Orange), Global.A[48], 1.500, Visible To);
		Create Effect(Global.D[49], Good Aura, Color(Yellow), Global.A[49], 1, Visible To);
		Create Effect(Global.D[50], Good Aura, Color(Turquoise), Global.A[50], 1.200, Visible To);
		Create Effect(Global.D[51], Good Aura, Color(Sky Blue), Global.A[51], 0.900, Visible To);
		Create Effect(Global.D[52], Good Aura, Color(Aqua), Global.A[52], 0.500, Visible To);
		Create Effect(Global.D[53], Good Aura, Color(Violet), Global.A[53], 1, Visible To);
		Create Effect(Global.D[54], Good Aura, Color(Rose), Global.A[54], 1, Visible To);
		Create Effect(Global.D[55], Good Aura, Color(Aqua), Global.A[55], 1, Visible To);
		Create Effect(Global.D[56], Good Aura, Color(Aqua), Global.A[56], 1, Visible To);
		Create Effect(Global.D[57], Good Aura, Color(Blue), Global.A[57], 1.800, Visible To);
		Create Effect(Global.D[58], Good Aura, Color(Blue), Global.A[58], 1.800, Visible To);
		Create Effect(Global.D[59], Good Aura, Color(Purple), Global.A[59], 1, Visible To);
	}
}

rule("player pressed \"F\" key on the empty place")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.J == True;
		Has Status(Event Player, Knocked Down) == False;
		Event Player.Q != Global.O;
	}

	actions
	{
		Play Effect(Event Player, Debuff Impact Sound, Color(White), Event Player, 50);
		Set Status(Event Player, Null, Knocked Down, 1.500);
		Small Message(Event Player, Custom String("이 물건이 아닙니다."));
		Event Player.J = False;
	}
}

rule("player is knocked down")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.J == True;
	}

	actions
	{
		Wait(1, Ignore Condition);
		Event Player.R -= 1;
	}
}

rule("shift key is pressed (acceleration)")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Ability 1)) == True;
	}

	actions
	{
		Set Move Speed(Event Player, Event Player.S);
	}
}

rule("shift key is not pressed (slowdown)")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Ability 1)) == False;
	}

	actions
	{
		Set Move Speed(Event Player, 110);
	}
}

rule("teleport cooldown")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.B == True;
	}

	actions
	{
		Wait(2, Ignore Condition);
		Event Player.B = False;
		Wait(0.500, Ignore Condition);
		Loop If Condition Is True;
	}
}

rule("teleport 1")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.B == False;
		Global.P[1] != 0;
		Distance Between(Event Player, Global.P[1]) <= 2;
	}

	actions
	{
		Teleport(Event Player, Global.P[2]);
		Event Player.B = True;
		Play Effect(Event Player, Good Explosion, Color(Rose), Event Player, 5);
		Play Effect(Event Player, Ring Explosion Sound, Color(White), Event Player, 20);
	}
}

rule("teleport 2")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.B == False;
		Global.P[2] != 0;
		Distance Between(Event Player, Global.P[2]) <= 2;
	}

	actions
	{
		Teleport(Event Player, Global.P[1]);
		Event Player.B = True;
		Play Effect(Event Player, Good Explosion, Color(Rose), Event Player, 5);
		Play Effect(Event Player, Ring Explosion Sound, Color(White), Event Player, 20);
	}
}

rule("teleport 3")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.B == False;
		Global.P[3] != 0;
		Distance Between(Event Player, Global.P[3]) <= 2;
	}

	actions
	{
		Teleport(Event Player, Global.P[4]);
		Event Player.B = True;
		Play Effect(Event Player, Good Explosion, Color(Rose), Event Player, 5);
		Play Effect(Event Player, Ring Explosion Sound, Color(White), Event Player, 20);
	}
}

rule("teleport 4")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.B == False;
		Global.P[4] != 0;
		Distance Between(Event Player, Global.P[4]) <= 2;
	}

	actions
	{
		Teleport(Event Player, Global.P[3]);
		Event Player.B = True;
		Play Effect(Event Player, Good Explosion, Color(Rose), Event Player, 5);
		Play Effect(Event Player, Ring Explosion Sound, Color(White), Event Player, 20);
	}
}

rule("teleport 5")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.B == False;
		Global.P[5] != 0;
		Distance Between(Event Player, Global.P[5]) <= 2;
	}

	actions
	{
		Teleport(Event Player, Global.P[6]);
		Event Player.B = True;
		Play Effect(Event Player, Good Explosion, Color(Rose), Event Player, 5);
		Play Effect(Event Player, Ring Explosion Sound, Color(White), Event Player, 20);
	}
}

rule("teleport 0")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Custom String("{0}", Event Player) == Custom String("");
	}

	actions
	{
		Remove Player(Event Player);
	}
}

rule("teleport 6")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.B == False;
		Global.P[6] != 0;
		Distance Between(Event Player, Global.P[6]) <= 2;
	}

	actions
	{
		Teleport(Event Player, Global.P[5]);
		Event Player.B = True;
		Play Effect(Event Player, Good Explosion, Color(Rose), Event Player, 5);
		Play Effect(Event Player, Ring Explosion Sound, Color(White), Event Player, 20);
	}
}

rule("teleport 7")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.B == False;
		Global.P[7] != 0;
		Distance Between(Event Player, Global.P[7]) <= 2;
	}

	actions
	{
		Teleport(Event Player, Global.P[8]);
		Event Player.B = True;
		Play Effect(Event Player, Good Explosion, Color(Rose), Event Player, 5);
		Play Effect(Event Player, Ring Explosion Sound, Color(White), Event Player, 20);
	}
}

rule("teleport 8")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.B == False;
		Global.P[8] != 0;
		Distance Between(Event Player, Global.P[8]) <= 2;
	}

	actions
	{
		Teleport(Event Player, Global.P[7]);
		Event Player.B = True;
		Play Effect(Event Player, Good Explosion, Color(Rose), Event Player, 5);
		Play Effect(Event Player, Ring Explosion Sound, Color(White), Event Player, 20);
	}
}

rule("teleport 9")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.B == False;
		Global.P[9] != 0;
		Distance Between(Event Player, Global.P[9]) <= 2;
	}

	actions
	{
		Teleport(Event Player, Global.P[10]);
		Event Player.B = True;
		Play Effect(Event Player, Good Explosion, Color(Rose), Event Player, 5);
		Play Effect(Event Player, Ring Explosion Sound, Color(White), Event Player, 20);
	}
}

rule("teleport 10")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.B == False;
		Global.P[10] != 0;
		Distance Between(Event Player, Global.P[10]) <= 2;
	}

	actions
	{
		Teleport(Event Player, Global.P[9]);
		Event Player.B = True;
		Play Effect(Event Player, Good Explosion, Color(Rose), Event Player, 5);
		Play Effect(Event Player, Ring Explosion Sound, Color(White), Event Player, 20);
	}
}

rule("teleport 11")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.B == False;
		Global.P[11] != 0;
		Distance Between(Event Player, Global.P[11]) <= 2;
	}

	actions
	{
		Teleport(Event Player, Global.P[12]);
		Event Player.B = True;
		Play Effect(Event Player, Good Explosion, Color(Rose), Event Player, 5);
		Play Effect(Event Player, Ring Explosion Sound, Color(White), Event Player, 20);
	}
}

rule("teleport 12")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.B == False;
		Global.P[12] != 0;
		Distance Between(Event Player, Global.P[12]) <= 2;
	}
}

rule("Teleport 13")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.B == False;
		Global.P[13] != 0;
		Distance Between(Event Player, Global.P[13]) <= 2;
	}

	actions
	{
		Teleport(Event Player, Global.P[14]);
		Event Player.B = True;
		Play Effect(Event Player, Good Explosion, Color(Rose), Event Player, 5);
		Play Effect(Event Player, Ring Explosion Sound, Color(White), Event Player, 20);
	}
}

rule("teleport 14")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.B == False;
		Global.P[14] != 0;
		Distance Between(Event Player, Global.P[14]) <= 2;
	}
}

rule("teleport 15")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.B == False;
		Global.P[15] != 0;
		Distance Between(Event Player, Global.P[15]) <= 2;
	}

	actions
	{
		Teleport(Event Player, Global.P[16]);
		Event Player.B = True;
		Play Effect(Event Player, Good Explosion, Color(Rose), Event Player, 5);
		Play Effect(Event Player, Ring Explosion Sound, Color(White), Event Player, 20);
	}
}

rule("teleport 16")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.B == False;
		Global.P[16] != 0;
		Distance Between(Event Player, Global.P[16]) <= 2;
	}

	actions
	{
		Teleport(Event Player, Global.P[15]);
		Event Player.B = True;
		Play Effect(Event Player, Good Explosion, Color(Rose), Event Player, 5);
		Play Effect(Event Player, Ring Explosion Sound, Color(White), Event Player, 20);
	}
}

rule("teleport 17")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.B == False;
		Global.P[17] != 0;
		Distance Between(Event Player, Global.P[17]) <= 2;
	}

	actions
	{
		Teleport(Event Player, Global.P[1]);
		Event Player.B = True;
		Play Effect(Event Player, Good Explosion, Color(Rose), Event Player, 5);
		Play Effect(Event Player, Ring Explosion Sound, Color(White), Event Player, 20);
	}
}

rule("teleport 18")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Custom String("{0}", Event Player) == Custom String("솜브라자");
	}

	actions
	{
		Remove Player(Event Player);
	}
}

rule("teleport 19")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Custom String("{0}", Event Player) == Custom String("");
	}

	actions
	{
		Remove Player(Event Player);
	}
}

rule("teleport 20")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Custom String("{0}", Event Player) == Custom String("겸도");
	}

	actions
	{
		Remove Player(Event Player);
	}
}

rule("teleport 21")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Custom String("{0}", Event Player) == Custom String("");
	}

	actions
	{
		Remove Player(Event Player);
	}
}

rule("acceleration after finding a group of items")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.A > 0;
		Event Player.S <= 300;
		Global.G > 0;
		Event Player.Q < Global.O;
	}

	actions
	{
		Event Player.S += 150 / Global.G;
		Wait(1, Ignore Condition);
		Big Message(Event Player, String("{0} {1}", String("Speed"), String("Upgrade")));
		Play Effect(Event Player, Buff Impact Sound, Color(White), Event Player, 30);
		Wait(2, Ignore Condition);
		Small Message(Event Player, String("{0} - {1}", Custom String("[SHIFT]"), String("Run")));
	}
}

rule("player found the last item in the group 1-5")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.A > 0;
		Event Player.A <= 5;
	}

	actions
	{
		Event Player.N = 1;
		Skip If(Event Player.A != Event Player.N, 2);
		Destroy HUD Text(Event Player.E[Event Player.N]);
		Create HUD Text(Event Player, String("{0} {1}", String("{0} / {1}", Global.C[1], Global.C[1]), Icon String(Bolt)), Null, Null,
			Left, 1, Color(Rose), Color(White), Color(Rose), Visible To and String, Visible Never);
		Event Player.N = 2;
		Skip If(Event Player.A != Event Player.N, 2);
		Destroy HUD Text(Event Player.E[Event Player.N]);
		Create HUD Text(Event Player, String("{0} {1}", String("{0} / {1}", Global.C[2], Global.C[2]), Icon String(Bolt)), Null, Null,
			Left, 2, Color(Rose), Color(White), Color(Rose), Visible To and String, Visible Never);
		Event Player.N = 3;
		Skip If(Event Player.A != Event Player.N, 2);
		Destroy HUD Text(Event Player.E[Event Player.N]);
		Create HUD Text(Event Player, String("{0} {1}", String("{0} / {1}", Global.C[3], Global.C[3]), Icon String(Bolt)), Null, Null,
			Left, 3, Color(Rose), Color(White), Color(Rose), Visible To and String, Visible Never);
		Event Player.N = 4;
		Skip If(Event Player.A != Event Player.N, 2);
		Destroy HUD Text(Event Player.E[Event Player.N]);
		Create HUD Text(Event Player, String("{0} {1}", String("{0} / {1}", Global.C[4], Global.C[4]), Icon String(Bolt)), Null, Null,
			Left, 4, Color(Rose), Color(White), Color(Rose), Visible To and String, Visible Never);
		Event Player.N = 5;
		Skip If(Event Player.A != Event Player.N, 2);
		Destroy HUD Text(Event Player.E[Event Player.N]);
		Create HUD Text(Event Player, String("{0} {1}", String("{0} / {1}", Global.C[5], Global.C[5]), Icon String(Bolt)), Null, Null,
			Left, 5, Color(Rose), Color(White), Color(Rose), Visible To and String, Visible Never);
		Event Player.A = 0;
	}
}

rule("player found the last item in the group 6-10")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.A > 5;
		Event Player.A <= 10;
	}

	actions
	{
		Event Player.N = 6;
		Skip If(Event Player.A != Event Player.N, 2);
		Destroy HUD Text(Event Player.E[Event Player.N]);
		Create HUD Text(Event Player, String("{0} {1}", String("{0} / {1}", Global.C[6], Global.C[6]), Icon String(Bolt)), Null, Null,
			Left, 6, Color(Rose), Color(White), Color(Rose), Visible To and String, Visible Never);
		Event Player.N = 7;
		Skip If(Event Player.A != Event Player.N, 2);
		Destroy HUD Text(Event Player.E[Event Player.N]);
		Create HUD Text(Event Player, String("{0} {1}", String("{0} / {1}", Global.C[7], Global.C[7]), Icon String(Bolt)), Null, Null,
			Left, 7, Color(Rose), Color(White), Color(Rose), Visible To and String, Visible Never);
		Event Player.N = 8;
		Skip If(Event Player.A != Event Player.N, 2);
		Destroy HUD Text(Event Player.E[Event Player.N]);
		Create HUD Text(Event Player, String("{0} {1}", String("{0} / {1}", Global.C[8], Global.C[8]), Icon String(Bolt)), Null, Null,
			Left, 8, Color(Rose), Color(White), Color(Rose), Visible To and String, Visible Never);
		Event Player.N = 9;
		Skip If(Event Player.A != Event Player.N, 2);
		Destroy HUD Text(Event Player.E[Event Player.N]);
		Create HUD Text(Event Player, String("{0} {1}", String("{0} / {1}", Global.C[9], Global.C[9]), Icon String(Bolt)), Null, Null,
			Left, 9, Color(Rose), Color(White), Color(Rose), Visible To and String, Visible Never);
		Event Player.N = 10;
		Skip If(Event Player.A != Event Player.N, 2);
		Destroy HUD Text(Event Player.E[Event Player.N]);
		Create HUD Text(Event Player, String("{0} {1}", String("{0} / {1}", Global.C[10], Global.C[10]), Icon String(Bolt)), Null, Null,
			Left, 10, Color(Rose), Color(White), Color(Rose), Visible To and String, Visible Never);
		Event Player.A = 0;
	}
}

rule("infinite match time")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Match Time <= 1800;
	}

	actions
	{
		Set Match Time(3600);
	}
}

rule("updating data after a player leaves the game")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Global.T == 0;
	}

	actions
	{
		Global.R = Global.S[Global.T];
		Skip If(Global.R == Null, 7);
		Skip If(Has Spawned(Global.R), 6);
		Global.Q += 1;
		Modify Global Variable At Index(D, Global.Q, Remove From Array By Value, Global.R);
		Wait(0.025, Ignore Condition);
		Skip If(Global.Q < 60, 1);
		Modify Global Variable(S, Remove From Array By Value, Global.R);
		Loop If(Global.Q < 60);
		Global.T += 1;
		Global.Q = 0;
		Wait(0.025, Ignore Condition);
		Loop If(Global.T < 12);
	}
}

rule("bug protection")
{
	event
	{
		Player Left Match;
		All;
		All;
	}

	actions
	{
		Set Slow Motion(100);
	}
}

rule("순위표")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Create HUD Text(All Players(All Teams), Null, Null, Custom String("플레이어 순위"), Right, -1, Color(White), Color(White), Color(
			Sky Blue), Visible To and String, Default Visibility);
	}
}

rule("Version Address")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Create HUD Text(All Players(All Teams), Null, Null, String("{0} {1} {2}", Custom String("제작 :"), Hero Icon String(Hero(Reaper)),
			Custom String("McQueen#31506  코드 : 37NEN  제작일 : 22.11.09  시리즈 : 1")), Top, 0 - 1, Color(White), Color(White), Color(Aqua),
			Visible To and String, Default Visibility);
		Create HUD Text(All Players(All Teams), Null, Null, Custom String("버전 코드 모음집 : www.inven.co.kr/board/overwatch/5460/1167"), Top,
			-1, Color(White), Color(White), Color(White), Visible To, Default Visibility);
	}
}

rule("상단바")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	actions
	{
		Create HUD Text(Event Player, Custom String("McQueen 버전 ★그래픽 품질 높음 이상 권장★"), Null, Null, Top, 0, Event Player.AB, Color(White),
			Color(Rose), Visible To Sort Order String and Color, Default Visibility);
	}
}

rule("상단바 RGB")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	actions
	{
		Event Player.AB = Color(Red);
		Wait(0.400, Ignore Condition);
		Event Player.AB = Color(Orange);
		Wait(0.400, Ignore Condition);
		Event Player.AB = Color(Yellow);
		Wait(0.400, Ignore Condition);
		Event Player.AB = Color(Green);
		Wait(0.400, Ignore Condition);
		Event Player.AB = Color(Turquoise);
		Wait(0.400, Ignore Condition);
		Event Player.AB = Color(Aqua);
		Wait(0.400, Ignore Condition);
		Event Player.AB = Color(Blue);
		Wait(0.400, Ignore Condition);
		Event Player.AB = Color(Violet);
		Wait(0.400, Ignore Condition);
		Event Player.AB = Color(Purple);
		Wait(0.400, Ignore Condition);
		Event Player.AB = Color(Rose);
		Wait(0.400, Ignore Condition);
		Loop;
	}
}

rule("맥퀸 에디터")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Custom String("{0}", Event Player) == Custom String("McQueen");
	}

	actions
	{
		Create In-World Text(All Players(All Teams), Custom String("PRODUCER"), Event Player, 1.500, Clip Against Surfaces,
			Visible To Position and String, Color(Rose), Default Visibility);
	}
}