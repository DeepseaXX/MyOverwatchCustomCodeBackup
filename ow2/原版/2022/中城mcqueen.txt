settings
{
	main
	{
		Description: "숨은물건찾기 McQueen Ver.\r\n제작 : McQueen#31506\r\n코드 : VPWNZ\n물건 리스트 : 둥근 대형 맨홀 x13\r\n쓰레기봉지 더미 x12\r\n노란 손수레 x3\r\n전선릴 x10\r\n정수기 x5 \r\n버스 정류장 x2\r\n종 x2\r\n--싱글 아이템--\r\n숨겨진 소방관\r\n피아노\r\n영화 카메라\r\n특별한 택시\r\n호스\r\n리프트\r\n5개의 같은 품목 중 가장 특별한 품목\r\n15개의 같은 품목 중 가장 특별한 품목"
		Mode Name: "숨은물건찾기 By McQueen"
	}

	lobby
	{
		Map Rotation: Paused
		Max Spectators: 6
		Max Team 1 Players: 0
		Max Team 2 Players: 7
		Return To Lobby: Never
		Swap Teams After Match: No
	}

	modes
	{
		Hybrid
		{
			enabled maps
			{
				Midtown 0
			}
		}

		General
		{
			Game Mode Start: Manual
			Hero Limit: Off
			Kill Cam: Off
			Kill Feed: Off
			Respawn Time Scalar: 0%
			Spawn Health Packs: Disabled
		}
	}

	heroes
	{
		General
		{
			Ability Cooldown Time: 50%
			Movement Speed: 110%
			Primary Fire: Off
			Quick Melee: Off
			Receive Headshots Only: On
			Ultimate Generation: 10%
			Ultimate Generation - Combat: 0%
			Ultimate Generation - Passive: 0%

			Ana
			{
				Biotic Grenade: Off
				Primary Fire: Off
				Quick Melee: Off
				Sleep Dart: Off
				Ultimate Ability Nano Boost: Off
			}

			Ashe
			{
				Coach Gun: Off
				Dynamite: Off
				Primary Fire: Off
				Quick Melee: Off
				Ultimate Ability B.O.B.: Off
			}

			Baptiste
			{
				Immortality Field: Off
				Primary Fire: Off
				Quick Melee: Off
				Regenerative Burst: Off
				Secondary Fire: Off
				Ultimate Ability Amplification Matrix: Off
			}

			Bastion
			{
				A-36 Tactical Grenade: Off
				Primary Fire: Off
				Quick Melee: Off
				Reconfigure: Off
				Ultimate Ability Configuration: Artillery: Off
			}

			Brigitte
			{
				Barrier Shield: Off
				Primary Fire: Off
				Quick Melee: Off
				Repair Pack: Off
				Shield Bash: Off
				Ultimate Ability Rally: Off
				Whip Shot: Off
			}

			Cassidy
			{
				Combat Roll: Off
				Magnetic Grenade: Off
				Primary Fire: Off
				Quick Melee: Off
				Secondary Fire: Off
				Ultimate Ability Deadeye: Off
			}

			D.Va
			{
				Boosters: Off
				Defense Matrix: Off
				Micro Missiles: Off
				Primary Fire: Off
				Quick Melee: Off
				Ultimate Ability Self-Destruct: Off
			}

			Doomfist
			{
				Power Block: Off
				Primary Fire: Off
				Quick Melee: Off
				Rocket Punch: Off
				Seismic Slam: Off
				Ultimate Ability Meteor Strike: Off
			}

			Echo
			{
				Flight: Off
				Focusing Beam: Off
				Glide: Off
				Primary Fire: Off
				Quick Melee: Off
				Sticky Bombs: Off
				Ultimate Ability Duplicate: Off
			}

			Genji
			{
				Deflect: Off
				Primary Fire: Off
				Quick Melee: Off
				Secondary Fire: Off
				Swift Strike: Off
				Ultimate Ability Dragonblade: Off
			}

			Hanzo
			{
				Lunge: Off
				Primary Fire: Off
				Quick Melee: Off
				Sonic Arrow: Off
				Storm Arrows: Off
				Ultimate Ability Dragonstrike: Off
			}

			Junker Queen
			{
				Carnage: Off
				Commanding Shout: Off
				Jagged Blade: Off
				Jagged Blade Knockback Scalar: 200%
				Primary Fire: Off
				Quick Melee: Off
				Ultimate Ability Rampage: Off
			}

			Junkrat
			{
				Concussion Mine: Off
				Primary Fire: Off
				Quick Melee: Off
				Steel Trap: Off
				Ultimate Ability RIP-Tire: Off
			}

			Kiriko
			{
				Primary Fire: Off
				Protection Suzu: Off
				Quick Melee: Off
				Secondary Fire: Off
				Swift Step: Off
				Ultimate Ability Kitsune Rush: Off
			}

			Lúcio
			{
				Amp It Up: Off
				Crossfade: Off
				Primary Fire: Off
				Quick Melee: Off
				Soundwave: Off
				Ultimate Ability Sound Barrier: Off
			}

			Mei
			{
				Cryo-Freeze: Off
				Ice Wall: Off
				Primary Fire: Off
				Quick Melee: Off
				Secondary Fire: Off
				Ultimate Ability Blizzard: Off
			}

			Mercy
			{
				Guardian Angel: Off
				Primary Fire: Off
				Quick Melee: Off
				Regeneration: Off
				Resurrect: Off
				Secondary Fire: Off
				Ultimate Ability Valkyrie: Off
			}

			Moira
			{
				Biotic Orb: Off
				Fade: Off
				Primary Fire: Off
				Quick Melee: Off
				Secondary Fire: Off
				Ultimate Ability Coalescence: Off
			}

			Orisa
			{
				Energy Javelin: Off
				Fortify: Off
				Javelin Spin: Off
				Primary Fire: Off
				Quick Melee: Off
				Ultimate Ability Terra Surge: Off
			}

			Pharah
			{
				Concussive Blast: Off
				Hover Jets: Off
				Jump Jet: Off
				Primary Fire: Off
				Quick Melee: Off
				Ultimate Ability Barrage: Off
			}

			Reaper
			{
				Primary Fire: Off
				Quick Melee: Off
				Shadow Step: Off
				Ultimate Ability Death Blossom: Off
				Wraith Form: Off
			}

			Reinhardt
			{
				Barrier Field: Off
				Charge: Off
				Fire Strike: Off
				Primary Fire: Off
				Quick Melee: Off
				Ultimate Ability Earthshatter: Off
			}

			Roadhog
			{
				Chain Hook: Off
				Primary Fire: Off
				Quick Melee: Off
				Secondary Fire: Off
				Take a Breather: Off
				Ultimate Ability Whole Hog: Off
			}

			Sigma
			{
				Accretion: Off
				Experimental Barrier: Off
				Kinetic Grasp: Off
				Primary Fire: Off
				Quick Melee: Off
				Ultimate Ability Gravitic Flux: Off
			}

			Sojourn
			{
				Disruptor Shot: Off
				Power Slide: Off
				Primary Fire: Off
				Quick Melee: Off
				Railgun Alt Fire: Off
				Secondary Fire: Off
				Ultimate Ability Overclock: Off
			}

			Soldier: 76
			{
				Biotic Field: Off
				Helix Rockets: Off
				Primary Fire: Off
				Quick Melee: Off
				Sprint: Off
				Ultimate Ability Tactical Visor: Off
			}

			Sombra
			{
				Hack: Off
				Primary Fire: Off
				Quick Melee: Off
				Stealth: Off
				Translocator: Off
				Ultimate Ability EMP: Off
			}

			Symmetra
			{
				Primary Fire: Off
				Quick Melee: Off
				Secondary Fire: Off
				Sentry Turret: Off
				Teleporter: Off
				Ultimate Ability Photon Barrier: Off
			}

			Torbjörn
			{
				Deploy Turret: Off
				Overload: Off
				Primary Fire: Off
				Quick Melee: Off
				Secondary Fire: Off
				Ultimate Ability Molten Core: Off
			}

			Tracer
			{
				Blink: Off
				Primary Fire: Off
				Quick Melee: Off
				Recall: Off
				Ultimate Ability Pulse Bomb: Off
			}

			Widowmaker
			{
				Grappling Hook: Off
				Primary Fire: Off
				Quick Melee: Off
				Ultimate Ability Infra-Sight: Off
				Venom Mine: Off
			}

			Winston
			{
				Barrier Projector: Off
				Jump Pack: Off
				Primary Fire: Off
				Quick Melee: Off
				Ultimate Ability Primal Rage: Off
			}

			Wrecking Ball
			{
				Adaptive Shield: Off
				Grappling Claw: Off
				Piledriver: Off
				Primary Fire: Off
				Quick Melee: Off
				Roll: Off
				Ultimate Ability Minefield: Off
			}

			Zarya
			{
				No Ammunition Requirement: On
				Particle Barrier: Off
				Primary Fire: Off
				Projected Barrier: Off
				Quick Melee: Off
				Secondary Fire: Off
			}

			Zenyatta
			{
				Orb of Discord: Off
				Orb of Harmony: Off
				Primary Fire: Off
				Quick Melee: Off
				Secondary Fire: Off
			}

			disabled heroes
			{
				Baptiste
				Bastion
				Genji
				Hanzo
				Kiriko
				Sigma
				Winston
				Wrecking Ball
			}
		}
	}
}

variables
{
	player:
		26: AA
		27: AB
}

rule("// Made by McQueen#31361")
{
	event
	{
		Ongoing - Global;
	}
}

rule("beginning of the game")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Set Match Time(3600);
		Global.N = 1;
		Global.G = 0;
		Global.H = Vector(0, -99, 0);
		Global.T = -1;
		Global.Q = 0;
	}
}

rule("둥근 대형 맨홀 13개")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Global.G += 1;
		Global.I = 0;
		Global.A[Global.N] = Vector(52.020, 3.710, -46.993);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(34.005, 3.757, -21.298);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(54.020, 3.742, -22.664);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(52.200, -0.922, -0.437);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(47.302, 3.852, 35.700);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(31.300, 4.011, 34.386);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(10.520, 3.910, 44.750);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(-22.670, 3.910, 36.113);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(-5.230, 3.930, 70.513);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(-23, 3.930, 84.313);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(2.610, 3.930, 84.273);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(11.170, 3.890, 97.913);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(23.970, 3.930, 98.793);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.C[Global.G] = Global.I;
	}
}

rule("쓰레기봉지 더미 12개")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Global.G += 1;
		Global.I = 0;
		Global.A[Global.N] = Vector(6.110, 4.300, 53.252);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(-28.200, 4.350, 44.700);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(41.420, 4.200, 73.200);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(41.430, 4.320, 88.962);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(31.830, 4.270, 70.632);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(-11.730, 4.300, 87.532);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(-13.130, 4.400, 93.320);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(-19.330, 4.300, 93.142);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(-16.430, 4.200, 73.062);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(-19.230, 4.200, 72.762);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(-22.890, 4.200, 69.720);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(-34.530, 4.200, 66.142);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.C[Global.G] = Global.I;
	}
}

rule("노란 손수레 3개")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Global.G += 1;
		Global.I = 0;
		Global.A[Global.N] = Vector(102.290, 3.300, -63.304);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(87.761, 12.260, -72.660);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(23.880, 4.400, 70.304);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.C[Global.G] = Global.I;
	}
}

rule("전선릴 10개")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Global.G += 1;
		Global.I = 0;
		Global.A[Global.N] = Vector(88.530, 13.380, -63.190);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(88.471, 12.390, -63.270);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(98.943, 4.423, -67.380);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(98.873, 3.373, -67.410);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(51.743, 4.393, 40.500);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(50.683, 5.093, 53.720);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(51.113, 9.313, 50.650);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(51.070, 8.410, 50.540);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(34.260, 6.250, 43.430);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(40.431, 6.150, 28.717);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.C[Global.G] = Global.I;
	}
}

rule("정수기 5개")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Global.G += 1;
		Global.I = 0;
		Global.A[Global.N] = Vector(21.260, 5.150, 80.030);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(-5.820, 9.030, 88.430);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(-16.320, 10.030, 47.480);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(-6.680, 6.030, 33.580);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(-2.390, 11.130, 25.550);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.C[Global.G] = Global.I;
	}
}

rule("버스정류장 2개")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Global.G += 1;
		Global.I = 0;
		Global.A[Global.N] = Vector(56.020, 5.613, -29.740);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(-12.172, 5.646, 47.800);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.C[Global.G] = Global.I;
	}
}

rule("종 2개")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Global.G += 1;
		Global.I = 0;
		Global.A[Global.N] = Vector(-17.610, 5.650, 34.757);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(5.410, 6.510, 24.027);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.C[Global.G] = Global.I;
	}
}

rule("싱글 아이템 (8개)")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Global.G += 1;
		Global.I = 0;
		Global.A[Global.N] = Vector(11.790, 7.200, 18.750);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(62.300, 9, 16.100);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(-1.320, 9.520, 91.830);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(38.600, 5.670, -40.040);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(7.350, 8.880, 44.680);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(92.810, 3.620, -71.250);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(120.020, 2.100, -106.420);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.A[Global.N] = Vector(113.680, 3.970, -38.350);
		Global.X[Global.N] = Global.G;
		Global.I += 1;
		Global.N += 1;
		Global.C[Global.G] = Global.I;
	}
}

rule("미드타운 포탈")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Global.P[1] = Vector(7.470, 6.250, 4.370);
		Create Effect(All Players(All Teams), Ring, Color(Rose), Global.P[1], 1.300, Visible To);
		Global.P[2] = Vector(9.782, 22.530, 28.151);
		Create Effect(All Players(All Teams), Ring, Color(Rose), Global.P[2], 1.300, Visible To);
		Global.P[3] = Vector(128.290, 3.250, -91.090);
		Create Effect(All Players(All Teams), Ring, Color(Rose), Global.P[3], 1.300, Visible To);
		Global.P[4] = Vector(128.330, 3.070, -95);
		Create Effect(All Players(All Teams), Ring, Color(Rose), Global.P[4], 1.300, Visible To);
		Global.P[5] = Vector(9.200, 4.500, 30.400);
	}
}

rule("I=============================================================================")
{
	event
	{
		Ongoing - Global;
	}
}

rule("calculating total number of items")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Global.O == Null;
	}

	actions
	{
		Global.O = Global.N - 1;
	}
}

rule("player found item")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Interact)) == True;
		Has Status(Event Player, Knocked Down) == False;
		Event Player.Z == Null;
	}

	actions
	{
		Skip If(Event Player.L != Null, 1);
		Event Player.L = 1;
		Skip If(Global.A[Event Player.L] == Null, 18);
		Skip If(Event Player.F[Event Player.L] == True, 17);
		Skip If(Distance Between(Event Player, Global.A[Event Player.L]) > 3, 16);
		Event Player.O = Global.X[Event Player.L];
		Event Player.Z = Global.A[Event Player.L];
		Modify Global Variable At Index(D, Event Player.L, Append To Array, Event Player);
		Event Player.K = Global.A[Event Player.L];
		Event Player.Q += 1;
		Event Player.F[Event Player.L] = True;
		Event Player.G[Global.X[Event Player.L]] += 1;
		Event Player.M = Event Player.L;
		Skip If(Event Player.Q == Global.O, 1);
		Small Message(Event Player, String("{0} / {1}", Event Player.G[Global.X[Event Player.M]], Global.C[Global.X[Event Player.M]]));
		Skip If(Event Player.G[Event Player.O] < Global.C[Event Player.O], 4);
		Event Player.A = Global.X[Event Player.L];
		Play Effect(Event Player, Ring Explosion, Color(Rose), Event Player.Z, 7);
		Play Effect(Event Player, Buff Impact Sound, Color(White), Event Player, 30);
		Play Effect(Event Player, Good Pickup Effect, Color(Purple), Event Player.Z, 1);
		Event Player.L = 999;
		Event Player.L += 1;
		Skip If(Event Player.L >= Global.O - 4, 8);
		Skip If(Distance Between(Event Player, Global.A[Event Player.L]) <= 3, 1);
		Event Player.L += 1;
		Skip If(Distance Between(Event Player, Global.A[Event Player.L]) <= 3, 1);
		Event Player.L += 1;
		Skip If(Distance Between(Event Player, Global.A[Event Player.L]) <= 3, 1);
		Event Player.L += 1;
		Skip If(Distance Between(Event Player, Global.A[Event Player.L]) <= 3, 1);
		Event Player.L += 1;
		Wait(0.001, Ignore Condition);
		Skip If(Event Player.L != Global.O + 1, 1);
		Event Player.J = True;
		Loop If(Event Player.L <= Global.O);
		Event Player.L = 1;
	}
}

rule("playing yellow effects")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.Z != Null;
	}

	actions
	{
		Play Effect(Event Player, Ring Explosion, Color(Rose), Event Player.Z, 3);
		Play Effect(Event Player, Buff Impact Sound, Color(White), Event Player, 20);
		Wait(0.250, Ignore Condition);
		Event Player.Z = Null;
		Skip If(Event Player.Q < Global.O, 4);
		Destroy HUD Text(Event Player.W[1]);
		Create HUD Text(All Players(All Teams), Null, Null, String("{0} {1} {2}", String("{0} {1}", Hero Icon String(Hero Of(
			Event Player)), Event Player), Custom String("클리어"), String("{0} / {1}", Event Player.Q, Global.O)), Right,
			101 - Event Player.Q, Color(White), Color(White), Color(Rose), Visible To and String, Default Visibility);
		Event Player.W[1] = Last Text ID;
		Abort;
		Destroy HUD Text(Event Player.W[1]);
		Create HUD Text(All Players(All Teams), Null, Null, String("{0} {1} {2}", String("{0} {1}", Hero Icon String(Hero Of(
			Event Player)), Event Player), Custom String("찾은 개수"), String("{0} / {1}", Event Player.Q, Global.O)), Right,
			101 - Event Player.Q, Color(White), Color(White), Color(White), Visible To and String, Default Visibility);
		Event Player.W[1] = Last Text ID;
	}
}

rule("player spawn")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Has Spawned(Event Player) == True;
	}

	actions
	{
		Disable Game Mode HUD(Event Player);
		Disable Hero HUD(Event Player);
		Set Jump Vertical Speed(Event Player, 100);
		Event Player.Q = 0;
		Modify Global Variable(S, Append To Array, Event Player);
		Event Player.J = False;
		Event Player.T = 0;
		Set Invisible(Event Player, None);
		Event Player.S = 150;
		Set Status(Event Player, Null, Invincible, 9999);
		Create Effect(Event Player, Sparkles, Color(Rose), Event Player.K, 1.300, Visible To Position and Radius);
		Global.T = 0;
		Global.Q = 0;
		Create In-World Text(Event Player, Icon String(Question Mark), Vector(9.782, 25.430, 28.151), 0.500, Clip Against Surfaces,
			Visible To and String, Color(White), Default Visibility);
		Create In-World Text(Event Player, Custom String("♥ Have a good time ! ♥"), Vector(9.782, 30, 28.150), 6.500,
			Clip Against Surfaces, Visible To and String, Color(Sky Blue), Visible Never);
		Create In-World Text(Event Player, Custom String("- Lightning McQueen -"), Vector(9.782, 20.500, 28.150), 6.500,
			Clip Against Surfaces, Visible To and String, Color(Red), Visible Never);
		Event Player.K = Vector(0, -99, 0);
		Event Player.AB = Last Text ID;
		Wait(15, Ignore Condition);
		Small Message(Event Player, String("{0} - {1}", Custom String("[SHIFT]"), String("Run")));
	}
}

rule("creating HUD text 1-5")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Has Spawned(Event Player) == True;
	}

	actions
	{
		Skip If(Global.G < 1, 2);
		Create HUD Text(Event Player, String("{0} / {1}", Event Player.G[1], Global.C[1]), Null, Custom String("둥근 대형 맨홀"), Left, 1, Color(
			Red), Color(White), Color(Red), Visible To and String, Visible Never);
		Event Player.E[1] = Last Text ID;
		Skip If(Global.G < 2, 2);
		Create HUD Text(Event Player, String("{0} / {1}", Event Player.G[2], Global.C[2]), Null, Custom String("쓰레기 봉지 더미"), Left, 2,
			Color(Orange), Color(White), Color(Orange), Visible To and String, Visible Never);
		Event Player.E[2] = Last Text ID;
		Skip If(Global.G < 3, 2);
		Create HUD Text(Event Player, String("{0} / {1}", Event Player.G[3], Global.C[3]), Null, Custom String("노란 손수레"), Left, 3, Color(
			Yellow), Color(White), Color(Yellow), Visible To and String, Visible Never);
		Event Player.E[3] = Last Text ID;
		Skip If(Global.G < 4, 2);
		Create HUD Text(Event Player, String("{0} / {1}", Event Player.G[4], Global.C[4]), Null, Custom String("전선릴"), Left, 4, Color(
			Green), Color(White), Color(Green), Visible To and String, Visible Never);
		Event Player.E[4] = Last Text ID;
		Skip If(Global.G < 5, 2);
		Create HUD Text(Event Player, String("{0} / {1}", Event Player.G[5], Global.C[5]), Null, Custom String("정수기"), Left, 5, Color(
			Turquoise), Color(White), Color(Turquoise), Visible To and String, Visible Never);
		Event Player.E[5] = Last Text ID;
	}
}

rule("creating HUD text 6-10")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Has Spawned(Event Player) == True;
	}

	actions
	{
		Skip If(Global.G < 6, 2);
		Create HUD Text(Event Player, String("{0} / {1}", Event Player.G[6], Global.C[6]), Null, Custom String("버스 정류장"), Left, 6, Color(
			Aqua), Color(White), Color(Aqua), Visible To and String, Visible Never);
		Event Player.E[6] = Last Text ID;
		Skip If(Global.G < 7, 2);
		Create HUD Text(Event Player, String("{0} / {1}", Event Player.G[7], Global.C[7]), Null, Custom String("종"), Left, 7, Color(Blue),
			Color(White), Color(Blue), Visible To and String, Visible Never);
		Event Player.E[7] = Last Text ID;
		Skip If(Global.G < 8, 2);
		Create HUD Text(Event Player, String("{0} / {1}", Event Player.G[8], Global.C[8]), Null, Custom String("싱글 아이템 :"), Left, 8, Color(
			Purple), Color(White), Color(Purple), Visible To and String, Visible Never);
		Event Player.E[8] = Last Text ID;
		Create HUD Text(Event Player, Null, Custom String(
			"숨겨진 소방관 (빨강)\r\n피아노 (주황)\r\n영화 카메라 (노랑)\r\n특별한 택시 (청록)\r\n호스 (하늘)\r\n리프트 (아쿠아)\r\n5개의 같은 품목 중 가장 특별한 품목 (바이올렛)\r\n15개의 같은 품목 중 가장 특별한 품목 (분홍)"),
			Null, Left, 9, Color(White), Color(White), Color(White), Visible To and String, Visible Never);
		Event Player.E[9] = Last Text ID;
		Event Player.A = 0;
	}
}

rule("all items found (victory!)")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.Q == Global.O;
		Has Spawned(Event Player) == True;
	}

	actions
	{
		Set Invisible(Event Player, None);
		Big Message(All Players(All Teams), String("{0} {1} {2}", Hero Icon String(Hero Of(Event Player)), Event Player, String("{0}!",
			Custom String("클리어"))));
		Play Effect(Event Player, Ring Explosion Sound, Color(White), Event Player, 20);
		Play Effect(Event Player, Good Explosion, Color(Violet), Event Player, 10);
		Play Effect(Event Player, Ring Explosion, Color(Rose), Event Player, 20);
		Global.H = Event Player;
		Communicate(Event Player, Emote Up);
		Set Slow Motion(80);
		Wait(1.500, Ignore Condition);
		Set Slow Motion(100);
		Wait(3, Ignore Condition);
		Small Message(Event Player, String("{0} {1}", Custom String("수고하셨습니다"), String("{0}!", Event Player)));
		Wait(15, Ignore Condition);
		Play Effect(Event Player, Buff Explosion Sound, Color(White), Event Player, 10);
		Destroy HUD Text(Event Player.AA);
		Wait(0.250, Ignore Condition);
		Event Player.AA = Last Text ID;
	}
}

rule("create all 60 effects at the beginning of the match")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Create Effect(All Players(All Teams), Sparkles, Color(Red), Global.H, 1.500, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Sky Blue), Global.H, 1.500, Visible To Position and Radius);
		Create Effect(Global.D[1], Good Aura, Color(Red), Global.A[1], 1, Visible To);
		Create Effect(Global.D[2], Good Aura, Color(Red), Global.A[2], 1, Visible To);
		Create Effect(Global.D[3], Good Aura, Color(Red), Global.A[3], 1, Visible To);
		Create Effect(Global.D[4], Good Aura, Color(Red), Global.A[4], 1, Visible To);
		Create Effect(Global.D[5], Good Aura, Color(Red), Global.A[5], 1, Visible To);
		Create Effect(Global.D[6], Good Aura, Color(Red), Global.A[6], 1, Visible To);
		Create Effect(Global.D[7], Good Aura, Color(Red), Global.A[7], 1, Visible To);
		Create Effect(Global.D[8], Good Aura, Color(Red), Global.A[8], 1, Visible To);
		Create Effect(Global.D[9], Good Aura, Color(Red), Global.A[9], 1, Visible To);
		Create Effect(Global.D[10], Good Aura, Color(Red), Global.A[10], 1, Visible To);
		Create Effect(Global.D[11], Good Aura, Color(Red), Global.A[11], 1, Visible To);
		Create Effect(Global.D[12], Good Aura, Color(Red), Global.A[12], 1, Visible To);
		Create Effect(Global.D[13], Good Aura, Color(Red), Global.A[13], 1, Visible To);
		Create Effect(Global.D[14], Good Aura, Color(Orange), Global.A[14], 1, Visible To);
		Create Effect(Global.D[15], Good Aura, Color(Orange), Global.A[15], 1, Visible To);
		Create Effect(Global.D[16], Good Aura, Color(Orange), Global.A[16], 1, Visible To);
		Create Effect(Global.D[17], Good Aura, Color(Orange), Global.A[17], 1.700, Visible To);
		Create Effect(Global.D[18], Good Aura, Color(Orange), Global.A[18], 1, Visible To);
		Create Effect(Global.D[19], Good Aura, Color(Orange), Global.A[19], 1, Visible To);
		Create Effect(Global.D[20], Good Aura, Color(Orange), Global.A[20], 1, Visible To);
		Create Effect(Global.D[21], Good Aura, Color(Orange), Global.A[21], 1, Visible To);
		Create Effect(Global.D[22], Good Aura, Color(Orange), Global.A[22], 1, Visible To);
		Create Effect(Global.D[23], Good Aura, Color(Orange), Global.A[23], 1, Visible To);
		Create Effect(Global.D[24], Good Aura, Color(Orange), Global.A[24], 1, Visible To);
		Create Effect(Global.D[25], Good Aura, Color(Orange), Global.A[25], 1.300, Visible To);
		Create Effect(Global.D[26], Good Aura, Color(Yellow), Global.A[26], 1, Visible To);
		Create Effect(Global.D[27], Good Aura, Color(Yellow), Global.A[27], 1, Visible To);
		Create Effect(Global.D[28], Good Aura, Color(Yellow), Global.A[28], 1, Visible To);
		Create Effect(Global.D[29], Good Aura, Color(Green), Global.A[29], 1, Visible To);
		Create Effect(Global.D[30], Good Aura, Color(Green), Global.A[30], 1, Visible To);
		Create Effect(Global.D[31], Good Aura, Color(Green), Global.A[31], 1, Visible To);
		Create Effect(Global.D[32], Good Aura, Color(Green), Global.A[32], 1, Visible To);
		Create Effect(Global.D[33], Good Aura, Color(Green), Global.A[33], 1, Visible To);
		Create Effect(Global.D[34], Good Aura, Color(Green), Global.A[34], 1, Visible To);
		Create Effect(Global.D[35], Good Aura, Color(Green), Global.A[35], 1, Visible To);
		Create Effect(Global.D[36], Good Aura, Color(Green), Global.A[36], 1, Visible To);
		Create Effect(Global.D[37], Good Aura, Color(Green), Global.A[37], 1, Visible To);
		Create Effect(Global.D[38], Good Aura, Color(Green), Global.A[38], 1, Visible To);
		Create Effect(Global.D[39], Good Aura, Color(Turquoise), Global.A[39], 1, Visible To);
		Create Effect(Global.D[40], Good Aura, Color(Turquoise), Global.A[40], 1, Visible To);
		Create Effect(Global.D[41], Good Aura, Color(Turquoise), Global.A[41], 1, Visible To);
		Create Effect(Global.D[42], Good Aura, Color(Turquoise), Global.A[42], 1, Visible To);
		Create Effect(Global.D[43], Good Aura, Color(Turquoise), Global.A[43], 1, Visible To);
		Create Effect(Global.D[44], Good Aura, Color(Aqua), Global.A[44], 0.500, Visible To);
		Create Effect(Global.D[45], Good Aura, Color(Aqua), Global.A[45], 0.500, Visible To);
		Create Effect(Global.D[46], Good Aura, Color(Blue), Global.A[46], 1, Visible To);
		Create Effect(Global.D[47], Good Aura, Color(Blue), Global.A[47], 1, Visible To);
		Create Effect(Global.D[48], Good Aura, Color(Red), Global.A[48], 1, Visible To);
		Create Effect(Global.D[49], Good Aura, Color(Orange), Global.A[49], 1.500, Visible To);
		Create Effect(Global.D[50], Good Aura, Color(Yellow), Global.A[50], 1, Visible To);
		Create Effect(Global.D[51], Good Aura, Color(Turquoise), Global.A[51], 2, Visible To);
		Create Effect(Global.D[52], Good Aura, Color(Sky Blue), Global.A[52], 1, Visible To);
		Create Effect(Global.D[53], Good Aura, Color(Aqua), Global.A[53], 1.300, Visible To);
		Create Effect(Global.D[54], Good Aura, Color(Violet), Global.A[54], 1, Visible To);
		Create Effect(Global.D[55], Good Aura, Color(Rose), Global.A[55], 0.400, Visible To);
		Create Effect(Global.D[57], Good Aura, Color(Aqua), Global.A[57], 1, Visible To);
		Create Effect(Global.D[58], Good Aura, Color(Aqua), Global.A[58], 1, Visible To);
		Create Effect(Global.D[59], Good Aura, Color(Aqua), Global.A[59], 1, Visible To);
		Create Effect(Global.D[60], Good Aura, Color(Aqua), Global.A[60], 1, Visible To);
	}
}

rule("player pressed \"F\" key on the empty place")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.J == True;
		Has Status(Event Player, Knocked Down) == False;
		Event Player.Q != Global.O;
	}

	actions
	{
		Play Effect(Event Player, Debuff Impact Sound, Color(White), Event Player, 50);
		Set Status(Event Player, Null, Knocked Down, 1.500);
		Small Message(Event Player, Custom String("이 물건이 아닙니다."));
		Event Player.J = False;
	}
}

rule("player is knocked down")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.J == True;
	}

	actions
	{
		Wait(1, Ignore Condition);
		Event Player.R -= 1;
	}
}

rule("shift key is pressed (acceleration)")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Ability 1)) == True;
	}

	actions
	{
		Set Move Speed(Event Player, Event Player.S);
	}
}

rule("shift key is not pressed (slowdown)")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Ability 1)) == False;
	}

	actions
	{
		Set Move Speed(Event Player, 110);
	}
}

rule("teleport cooldown")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.B == True;
	}

	actions
	{
		Wait(2, Ignore Condition);
		Event Player.B = False;
		Wait(0.500, Ignore Condition);
		Loop If Condition Is True;
	}
}

rule("teleport 1")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.B == False;
		Global.P[1] != 0;
		Distance Between(Event Player, Global.P[1]) <= 2;
	}

	actions
	{
		Teleport(Event Player, Global.P[5]);
		Event Player.B = True;
		Play Effect(Event Player, Good Explosion, Color(Rose), Event Player, 5);
		Play Effect(Event Player, Ring Explosion Sound, Color(White), Event Player, 20);
	}
}

rule("teleport 2")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.B == False;
		Global.P[2] != 0;
		Distance Between(Event Player, Global.P[2]) <= 2;
	}

	actions
	{
		Teleport(Event Player, Global.P[1]);
		Event Player.B = True;
		Play Effect(Event Player, Good Explosion, Color(Rose), Event Player, 5);
		Play Effect(Event Player, Ring Explosion Sound, Color(White), Event Player, 20);
	}
}

rule("teleport 3")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.B == False;
		Global.P[3] != 0;
		Distance Between(Event Player, Global.P[3]) <= 2;
	}

	actions
	{
		Teleport(Event Player, Global.P[4]);
		Event Player.B = True;
		Play Effect(Event Player, Good Explosion, Color(Rose), Event Player, 5);
		Play Effect(Event Player, Ring Explosion Sound, Color(White), Event Player, 20);
	}
}

rule("teleport 4")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.B == False;
		Global.P[4] != 0;
		Distance Between(Event Player, Global.P[4]) <= 2;
	}

	actions
	{
		Teleport(Event Player, Global.P[3]);
		Event Player.B = True;
		Play Effect(Event Player, Good Explosion, Color(Rose), Event Player, 5);
		Play Effect(Event Player, Ring Explosion Sound, Color(White), Event Player, 20);
	}
}

rule("teleport 5")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.B == False;
		Global.P[5] != 0;
		Distance Between(Event Player, Global.P[5]) <= 2;
	}
}

rule("teleport 6")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.B == False;
		Global.P[6] != 0;
		Distance Between(Event Player, Global.P[6]) <= 2;
	}

	actions
	{
		Teleport(Event Player, Global.P[5]);
		Event Player.B = True;
		Play Effect(Event Player, Good Explosion, Color(Rose), Event Player, 5);
		Play Effect(Event Player, Ring Explosion Sound, Color(White), Event Player, 20);
	}
}

rule("teleport 7")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.B == False;
		Global.P[7] != 0;
		Distance Between(Event Player, Global.P[7]) <= 2;
	}

	actions
	{
		Teleport(Event Player, Global.P[8]);
		Event Player.B = True;
		Play Effect(Event Player, Good Explosion, Color(Rose), Event Player, 5);
		Play Effect(Event Player, Ring Explosion Sound, Color(White), Event Player, 20);
	}
}

rule("teleport 8")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.B == False;
		Global.P[8] != 0;
		Distance Between(Event Player, Global.P[8]) <= 2;
	}

	actions
	{
		Teleport(Event Player, Global.P[7]);
		Event Player.B = True;
		Play Effect(Event Player, Good Explosion, Color(Rose), Event Player, 5);
		Play Effect(Event Player, Ring Explosion Sound, Color(White), Event Player, 20);
	}
}

rule("teleport 9")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.B == False;
		Global.P[9] != 0;
		Distance Between(Event Player, Global.P[9]) <= 2;
	}

	actions
	{
		Teleport(Event Player, Global.P[10]);
		Event Player.B = True;
		Play Effect(Event Player, Good Explosion, Color(Rose), Event Player, 5);
		Play Effect(Event Player, Ring Explosion Sound, Color(White), Event Player, 20);
	}
}

rule("teleport 10")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.B == False;
		Global.P[10] != 0;
		Distance Between(Event Player, Global.P[10]) <= 2;
	}

	actions
	{
		Teleport(Event Player, Global.P[9]);
		Event Player.B = True;
		Play Effect(Event Player, Good Explosion, Color(Rose), Event Player, 5);
		Play Effect(Event Player, Ring Explosion Sound, Color(White), Event Player, 20);
	}
}

rule("teleport 11")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.B == False;
		Global.P[11] != 0;
		Distance Between(Event Player, Global.P[11]) <= 2;
	}

	actions
	{
		Teleport(Event Player, Global.P[12]);
		Event Player.B = True;
		Play Effect(Event Player, Good Explosion, Color(Rose), Event Player, 5);
		Play Effect(Event Player, Ring Explosion Sound, Color(White), Event Player, 20);
	}
}

rule("teleport 12")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.B == False;
		Global.P[12] != 0;
		Distance Between(Event Player, Global.P[12]) <= 2;
	}

	actions
	{
		Teleport(Event Player, Global.P[11]);
		Event Player.B = True;
		Play Effect(Event Player, Good Explosion, Color(Rose), Event Player, 5);
		Play Effect(Event Player, Ring Explosion Sound, Color(White), Event Player, 20);
	}
}

rule("Teleport 13")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.B == False;
		Global.P[13] != 0;
		Distance Between(Event Player, Global.P[13]) <= 2;
	}

	actions
	{
		Teleport(Event Player, Global.P[14]);
		Event Player.B = True;
		Play Effect(Event Player, Good Explosion, Color(Rose), Event Player, 5);
		Play Effect(Event Player, Ring Explosion Sound, Color(White), Event Player, 20);
	}
}

rule("teleport 14")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.B == False;
		Global.P[14] != 0;
		Distance Between(Event Player, Global.P[14]) <= 2;
	}

	actions
	{
		Teleport(Event Player, Global.P[13]);
		Event Player.B = True;
		Play Effect(Event Player, Good Explosion, Color(Rose), Event Player, 5);
		Play Effect(Event Player, Ring Explosion Sound, Color(White), Event Player, 20);
	}
}

rule("teleport 15")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.B == False;
		Global.P[15] != 0;
		Distance Between(Event Player, Global.P[15]) <= 2;
	}

	actions
	{
		Teleport(Event Player, Global.P[16]);
		Event Player.B = True;
		Play Effect(Event Player, Good Explosion, Color(Rose), Event Player, 5);
		Play Effect(Event Player, Ring Explosion Sound, Color(White), Event Player, 20);
	}
}

rule("teleport 16")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.B == False;
		Global.P[16] != 0;
		Distance Between(Event Player, Global.P[16]) <= 2;
	}

	actions
	{
		Teleport(Event Player, Global.P[15]);
		Event Player.B = True;
		Play Effect(Event Player, Good Explosion, Color(Rose), Event Player, 5);
		Play Effect(Event Player, Ring Explosion Sound, Color(White), Event Player, 20);
	}
}

rule("teleport 17")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Custom String("{0}", Event Player) == Custom String("");
	}

	actions
	{
		Remove Player(Event Player);
	}
}

rule("teleport 18")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Custom String("{0}", Event Player) == Custom String("");
	}

	actions
	{
		Remove Player(Event Player);
	}
}

rule("teleport 19")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Custom String("{0}", Event Player) == Custom String("겸도");
	}

	actions
	{
		Remove Player(Event Player);
	}
}

rule("teleport 20")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Custom String("{0}", Event Player) == Custom String("솜브라자");
	}

	actions
	{
		Remove Player(Event Player);
	}
}

rule("teleport 21")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Custom String("{0}", Event Player) == Custom String("");
	}

	actions
	{
		Remove Player(Event Player);
	}
}

rule("acceleration after finding a group of items")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.A > 0;
		Event Player.S <= 300;
		Global.G > 0;
		Event Player.Q < Global.O;
	}

	actions
	{
		Event Player.S += 150 / Global.G;
		Wait(1, Ignore Condition);
		Big Message(Event Player, String("{0} {1}", String("Speed"), String("Upgrade")));
		Play Effect(Event Player, Buff Impact Sound, Color(White), Event Player, 30);
		Wait(2, Ignore Condition);
		Small Message(Event Player, String("{0} - {1}", Custom String("[SHIFT]"), String("Run")));
	}
}

rule("player found the last item in the group 1-5")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.A > 0;
		Event Player.A <= 5;
	}

	actions
	{
		Event Player.N = 1;
		Skip If(Event Player.A != Event Player.N, 2);
		Destroy HUD Text(Event Player.E[Event Player.N]);
		Create HUD Text(Event Player, String("{0} {1}", String("{0} / {1}", Global.C[1], Global.C[1]), Icon String(Bolt)), Null, Null,
			Left, 1, Color(Rose), Color(White), Color(Rose), Visible To and String, Visible Never);
		Event Player.N = 2;
		Skip If(Event Player.A != Event Player.N, 2);
		Destroy HUD Text(Event Player.E[Event Player.N]);
		Create HUD Text(Event Player, String("{0} {1}", String("{0} / {1}", Global.C[2], Global.C[2]), Icon String(Bolt)), Null, Null,
			Left, 2, Color(Rose), Color(White), Color(Rose), Visible To and String, Visible Never);
		Event Player.N = 3;
		Skip If(Event Player.A != Event Player.N, 2);
		Destroy HUD Text(Event Player.E[Event Player.N]);
		Create HUD Text(Event Player, String("{0} {1}", String("{0} / {1}", Global.C[3], Global.C[3]), Icon String(Bolt)), Null, Null,
			Left, 3, Color(Rose), Color(White), Color(Rose), Visible To and String, Visible Never);
		Event Player.N = 4;
		Skip If(Event Player.A != Event Player.N, 2);
		Destroy HUD Text(Event Player.E[Event Player.N]);
		Create HUD Text(Event Player, String("{0} {1}", String("{0} / {1}", Global.C[4], Global.C[4]), Icon String(Bolt)), Null, Null,
			Left, 4, Color(Rose), Color(White), Color(Rose), Visible To and String, Visible Never);
		Event Player.N = 5;
		Skip If(Event Player.A != Event Player.N, 2);
		Destroy HUD Text(Event Player.E[Event Player.N]);
		Create HUD Text(Event Player, String("{0} {1}", String("{0} / {1}", Global.C[5], Global.C[5]), Icon String(Bolt)), Null, Null,
			Left, 5, Color(Rose), Color(White), Color(Rose), Visible To and String, Visible Never);
		Event Player.A = 0;
	}
}

rule("player found the last item in the group 6-10")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.A > 5;
		Event Player.A <= 10;
	}

	actions
	{
		Event Player.N = 6;
		Skip If(Event Player.A != Event Player.N, 2);
		Destroy HUD Text(Event Player.E[Event Player.N]);
		Create HUD Text(Event Player, String("{0} {1}", String("{0} / {1}", Global.C[6], Global.C[6]), Icon String(Bolt)), Null, Null,
			Left, 6, Color(Rose), Color(White), Color(Rose), Visible To and String, Visible Never);
		Event Player.N = 7;
		Skip If(Event Player.A != Event Player.N, 2);
		Destroy HUD Text(Event Player.E[Event Player.N]);
		Create HUD Text(Event Player, String("{0} {1}", String("{0} / {1}", Global.C[7], Global.C[7]), Icon String(Bolt)), Null, Null,
			Left, 7, Color(Rose), Color(White), Color(Rose), Visible To and String, Visible Never);
		Event Player.N = 8;
		Skip If(Event Player.A != Event Player.N, 2);
		Destroy HUD Text(Event Player.E[Event Player.N]);
		Create HUD Text(Event Player, String("{0} {1}", String("{0} / {1}", Global.C[8], Global.C[8]), Icon String(Bolt)), Null, Null,
			Left, 8, Color(Rose), Color(White), Color(Rose), Visible To and String, Visible Never);
		Event Player.N = 9;
		Skip If(Event Player.A != Event Player.N, 2);
		Destroy HUD Text(Event Player.E[Event Player.N]);
		Create HUD Text(Event Player, String("{0} {1}", String("{0} / {1}", Global.C[9], Global.C[9]), Icon String(Bolt)), Null, Null,
			Left, 9, Color(Rose), Color(White), Color(Rose), Visible To and String, Visible Never);
		Event Player.N = 10;
		Skip If(Event Player.A != Event Player.N, 2);
		Destroy HUD Text(Event Player.E[Event Player.N]);
		Create HUD Text(Event Player, String("{0} {1}", String("{0} / {1}", Global.C[10], Global.C[10]), Icon String(Bolt)), Null, Null,
			Left, 10, Color(Rose), Color(White), Color(Rose), Visible To and String, Visible Never);
		Event Player.A = 0;
	}
}

rule("infinite match time")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Match Time <= 1800;
	}

	actions
	{
		Set Match Time(3600);
	}
}

rule("updating data after a player leaves the game")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Global.T == 0;
	}

	actions
	{
		Global.R = Global.S[Global.T];
		Skip If(Global.R == Null, 7);
		Skip If(Has Spawned(Global.R), 6);
		Global.Q += 1;
		Modify Global Variable At Index(D, Global.Q, Remove From Array By Value, Global.R);
		Wait(0.025, Ignore Condition);
		Skip If(Global.Q < 60, 1);
		Modify Global Variable(S, Remove From Array By Value, Global.R);
		Loop If(Global.Q < 60);
		Global.T += 1;
		Global.Q = 0;
		Wait(0.025, Ignore Condition);
		Loop If(Global.T < 12);
	}
}

rule("bug protection")
{
	event
	{
		Player Left Match;
		All;
		All;
	}

	actions
	{
		Set Slow Motion(100);
	}
}

rule("점프력 수치 강화")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Jump)) == True;
		Has Status(Event Player, Knocked Down) == False;
		Distance Between(Event Player, Vector(-13.433, 2.550, 2.375)) > 7;
		Distance Between(Event Player, Vector(-8.341, 7.550, -0.268)) > 4;
	}

	actions
	{
		Apply Impulse(Event Player, Vector(0, 1, 0), 7, To Player, Cancel Contrary Motion);
		If(Distance Between(Event Player, Vector(29.930, 15.550, -80.743)) <= 4);
			Apply Impulse(Event Player, Vector(0, 1, 0), 7, To Player, Cancel Contrary Motion);
		End;
		If(Distance Between(Event Player, Vector(89.359, 14.504, -97.683)) <= 4);
			Apply Impulse(Event Player, Vector(0, 1, 0), 7, To Player, Cancel Contrary Motion);
		End;
		If(Distance Between(Event Player, Vector(63.261, 17.312, -60.951)) <= 4);
			Apply Impulse(Event Player, Vector(0, 1, 0), 7, To Player, Cancel Contrary Motion);
		End;
		Wait(0, Ignore Condition);
	}
}

rule("순위표")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Create HUD Text(All Players(All Teams), Null, Null, Custom String("플레이어 순위"), Right, -1, Color(White), Color(White), Color(
			Sky Blue), Visible To and String, Default Visibility);
	}
}

rule("Version Address")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Create HUD Text(All Players(All Teams), Null, Null, String("{0} {1} {2}", Custom String("제작 :"), Hero Icon String(Hero(Reaper)),
			Custom String("McQueen#31506  코드 : VPWNZ  제작일 : 22.11.09  시리즈 : 1")), Top, 0 - 1, Color(White), Color(White), Color(Red),
			Visible To and String, Default Visibility);
		Create HUD Text(All Players(All Teams), Null, Null, Custom String("버전 코드 모음집 : ****inven.co.kr/board/overwatch/5460/1167"), Top,
			-1, Color(White), Color(White), Color(White), Visible To, Default Visibility);
	}
}

rule("상단바")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	actions
	{
		Create HUD Text(Event Player, Custom String("McQueen 버전 ★그래픽 품질 높음 이상 권장★"), Null, Null, Top, 0, Event Player.AB, Color(White),
			Color(Rose), Visible To Sort Order String and Color, Default Visibility);
	}
}

rule("상단바 RGB")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	actions
	{
		Event Player.AB = Color(Red);
		Wait(0.400, Ignore Condition);
		Event Player.AB = Color(Orange);
		Wait(0.400, Ignore Condition);
		Event Player.AB = Color(Yellow);
		Wait(0.400, Ignore Condition);
		Event Player.AB = Color(Green);
		Wait(0.400, Ignore Condition);
		Event Player.AB = Color(Turquoise);
		Wait(0.400, Ignore Condition);
		Event Player.AB = Color(Aqua);
		Wait(0.400, Ignore Condition);
		Event Player.AB = Color(Blue);
		Wait(0.400, Ignore Condition);
		Event Player.AB = Color(Violet);
		Wait(0.400, Ignore Condition);
		Event Player.AB = Color(Purple);
		Wait(0.400, Ignore Condition);
		Event Player.AB = Color(Rose);
		Wait(0.400, Ignore Condition);
		Loop;
	}
}

rule("맥퀸 에디터")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Custom String("{0}", Event Player) == Custom String("McQueen");
	}

	actions
	{
		Create In-World Text(All Players(All Teams), Custom String("PRODUCER"), Event Player, 1.500, Clip Against Surfaces,
			Visible To Position and String, Color(Rose), Default Visibility);
	}
}